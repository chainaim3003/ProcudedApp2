"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/signify-ts";
exports.ids = ["vendor-chunks/signify-ts"];
exports.modules = {

/***/ "(ssr)/./node_modules/signify-ts/dist/exports.js":
/*!*************************************************!*\
  !*** ./node_modules/signify-ts/dist/exports.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Agent: () => (/* reexport safe */ _keri_app_controller_js__WEBPACK_IMPORTED_MODULE_2__.Agent),\n/* harmony export */   Algos: () => (/* reexport safe */ _keri_core_manager_js__WEBPACK_IMPORTED_MODULE_25__.Algos),\n/* harmony export */   Authenticater: () => (/* reexport safe */ _keri_core_authing_js__WEBPACK_IMPORTED_MODULE_12__.Authenticater),\n/* harmony export */   B64ChrByIdx: () => (/* reexport safe */ _keri_core_core_js__WEBPACK_IMPORTED_MODULE_15__.B64ChrByIdx),\n/* harmony export */   B64IdxByChr: () => (/* reexport safe */ _keri_core_core_js__WEBPACK_IMPORTED_MODULE_15__.B64IdxByChr),\n/* harmony export */   BexCodex: () => (/* reexport safe */ _keri_core_matter_js__WEBPACK_IMPORTED_MODULE_26__.BexCodex),\n/* harmony export */   BexDex: () => (/* reexport safe */ _keri_core_matter_js__WEBPACK_IMPORTED_MODULE_26__.BexDex),\n/* harmony export */   CesrNumber: () => (/* reexport safe */ _keri_core_number_js__WEBPACK_IMPORTED_MODULE_27__.CesrNumber),\n/* harmony export */   Challenges: () => (/* reexport safe */ _keri_app_contacting_js__WEBPACK_IMPORTED_MODULE_5__.Challenges),\n/* harmony export */   Cigar: () => (/* reexport safe */ _keri_core_cigar_js__WEBPACK_IMPORTED_MODULE_13__.Cigar),\n/* harmony export */   Cipher: () => (/* reexport safe */ _keri_core_cipher_js__WEBPACK_IMPORTED_MODULE_14__.Cipher),\n/* harmony export */   Codex: () => (/* reexport safe */ _keri_core_matter_js__WEBPACK_IMPORTED_MODULE_26__.Codex),\n/* harmony export */   Config: () => (/* reexport safe */ _keri_app_coring_js__WEBPACK_IMPORTED_MODULE_6__.Config),\n/* harmony export */   Contacts: () => (/* reexport safe */ _keri_app_contacting_js__WEBPACK_IMPORTED_MODULE_5__.Contacts),\n/* harmony export */   Controller: () => (/* reexport safe */ _keri_app_controller_js__WEBPACK_IMPORTED_MODULE_2__.Controller),\n/* harmony export */   Counter: () => (/* reexport safe */ _keri_core_counter_js__WEBPACK_IMPORTED_MODULE_16__.Counter),\n/* harmony export */   CounterCodex: () => (/* reexport safe */ _keri_core_counter_js__WEBPACK_IMPORTED_MODULE_16__.CounterCodex),\n/* harmony export */   Creatory: () => (/* reexport safe */ _keri_core_manager_js__WEBPACK_IMPORTED_MODULE_25__.Creatory),\n/* harmony export */   CredentialTypes: () => (/* reexport safe */ _keri_app_credentialing_js__WEBPACK_IMPORTED_MODULE_7__.CredentialTypes),\n/* harmony export */   Credentials: () => (/* reexport safe */ _keri_app_credentialing_js__WEBPACK_IMPORTED_MODULE_7__.Credentials),\n/* harmony export */   CtrDex: () => (/* reexport safe */ _keri_core_counter_js__WEBPACK_IMPORTED_MODULE_16__.CtrDex),\n/* harmony export */   Decrypter: () => (/* reexport safe */ _keri_core_decrypter_js__WEBPACK_IMPORTED_MODULE_17__.Decrypter),\n/* harmony export */   Diger: () => (/* reexport safe */ _keri_core_diger_js__WEBPACK_IMPORTED_MODULE_18__.Diger),\n/* harmony export */   DigiCodex: () => (/* reexport safe */ _keri_core_matter_js__WEBPACK_IMPORTED_MODULE_26__.DigiCodex),\n/* harmony export */   DigiDex: () => (/* reexport safe */ _keri_core_matter_js__WEBPACK_IMPORTED_MODULE_26__.DigiDex),\n/* harmony export */   DipLabels: () => (/* reexport safe */ _keri_core_core_js__WEBPACK_IMPORTED_MODULE_15__.DipLabels),\n/* harmony export */   DrtLabels: () => (/* reexport safe */ _keri_core_core_js__WEBPACK_IMPORTED_MODULE_15__.DrtLabels),\n/* harmony export */   EmptyMaterialError: () => (/* reexport safe */ _keri_core_kering_js__WEBPACK_IMPORTED_MODULE_24__.EmptyMaterialError),\n/* harmony export */   Encrypter: () => (/* reexport safe */ _keri_core_encrypter_js__WEBPACK_IMPORTED_MODULE_19__.Encrypter),\n/* harmony export */   Escrows: () => (/* reexport safe */ _keri_app_escrowing_js__WEBPACK_IMPORTED_MODULE_8__.Escrows),\n/* harmony export */   EventResult: () => (/* reexport safe */ _keri_app_aiding_js__WEBPACK_IMPORTED_MODULE_3__.EventResult),\n/* harmony export */   Exchanges: () => (/* reexport safe */ _keri_app_exchanging_js__WEBPACK_IMPORTED_MODULE_9__.Exchanges),\n/* harmony export */   FALSY: () => (/* reexport safe */ _keri_end_ending_js__WEBPACK_IMPORTED_MODULE_39__.FALSY),\n/* harmony export */   GroupIdentifierManager: () => (/* reexport safe */ _keri_core_keeping_js__WEBPACK_IMPORTED_MODULE_23__.GroupIdentifierManager),\n/* harmony export */   Groups: () => (/* reexport safe */ _keri_app_grouping_js__WEBPACK_IMPORTED_MODULE_10__.Groups),\n/* harmony export */   HEADER_SIG_INPUT: () => (/* reexport safe */ _keri_core_httping_js__WEBPACK_IMPORTED_MODULE_21__.HEADER_SIG_INPUT),\n/* harmony export */   HEADER_SIG_TIME: () => (/* reexport safe */ _keri_core_httping_js__WEBPACK_IMPORTED_MODULE_21__.HEADER_SIG_TIME),\n/* harmony export */   Hab: () => (/* reexport safe */ _keri_app_habery_js__WEBPACK_IMPORTED_MODULE_1__.Hab),\n/* harmony export */   Habery: () => (/* reexport safe */ _keri_app_habery_js__WEBPACK_IMPORTED_MODULE_1__.Habery),\n/* harmony export */   IcpLabels: () => (/* reexport safe */ _keri_core_core_js__WEBPACK_IMPORTED_MODULE_15__.IcpLabels),\n/* harmony export */   Identifier: () => (/* reexport safe */ _keri_app_aiding_js__WEBPACK_IMPORTED_MODULE_3__.Identifier),\n/* harmony export */   IdentifierManagerFactory: () => (/* reexport safe */ _keri_core_keeping_js__WEBPACK_IMPORTED_MODULE_23__.IdentifierManagerFactory),\n/* harmony export */   IdrDex: () => (/* reexport safe */ _keri_core_indexer_js__WEBPACK_IMPORTED_MODULE_22__.IdrDex),\n/* harmony export */   Ids: () => (/* reexport safe */ _keri_core_saider_js__WEBPACK_IMPORTED_MODULE_29__.Ids),\n/* harmony export */   IdxBthSigDex: () => (/* reexport safe */ _keri_core_indexer_js__WEBPACK_IMPORTED_MODULE_22__.IdxBthSigDex),\n/* harmony export */   IdxCrtSigDex: () => (/* reexport safe */ _keri_core_indexer_js__WEBPACK_IMPORTED_MODULE_22__.IdxCrtSigDex),\n/* harmony export */   IdxSigDex: () => (/* reexport safe */ _keri_core_indexer_js__WEBPACK_IMPORTED_MODULE_22__.IdxSigDex),\n/* harmony export */   Ilks: () => (/* reexport safe */ _keri_core_core_js__WEBPACK_IMPORTED_MODULE_15__.Ilks),\n/* harmony export */   IndexedBothSigCodex: () => (/* reexport safe */ _keri_core_indexer_js__WEBPACK_IMPORTED_MODULE_22__.IndexedBothSigCodex),\n/* harmony export */   IndexedCurrentSigCodex: () => (/* reexport safe */ _keri_core_indexer_js__WEBPACK_IMPORTED_MODULE_22__.IndexedCurrentSigCodex),\n/* harmony export */   IndexedSigCodex: () => (/* reexport safe */ _keri_core_indexer_js__WEBPACK_IMPORTED_MODULE_22__.IndexedSigCodex),\n/* harmony export */   Indexer: () => (/* reexport safe */ _keri_core_indexer_js__WEBPACK_IMPORTED_MODULE_22__.Indexer),\n/* harmony export */   IndexerCodex: () => (/* reexport safe */ _keri_core_indexer_js__WEBPACK_IMPORTED_MODULE_22__.IndexerCodex),\n/* harmony export */   Inputage: () => (/* reexport safe */ _keri_core_httping_js__WEBPACK_IMPORTED_MODULE_21__.Inputage),\n/* harmony export */   Ipex: () => (/* reexport safe */ _keri_app_credentialing_js__WEBPACK_IMPORTED_MODULE_7__.Ipex),\n/* harmony export */   IxnLabels: () => (/* reexport safe */ _keri_core_core_js__WEBPACK_IMPORTED_MODULE_15__.IxnLabels),\n/* harmony export */   KeyEvents: () => (/* reexport safe */ _keri_app_coring_js__WEBPACK_IMPORTED_MODULE_6__.KeyEvents),\n/* harmony export */   KeyStates: () => (/* reexport safe */ _keri_app_coring_js__WEBPACK_IMPORTED_MODULE_6__.KeyStates),\n/* harmony export */   KsnLabels: () => (/* reexport safe */ _keri_core_core_js__WEBPACK_IMPORTED_MODULE_15__.KsnLabels),\n/* harmony export */   LargeVrzDex: () => (/* reexport safe */ _keri_core_matter_js__WEBPACK_IMPORTED_MODULE_26__.LargeVrzDex),\n/* harmony export */   MINSIGSIZE: () => (/* reexport safe */ _keri_core_core_js__WEBPACK_IMPORTED_MODULE_15__.MINSIGSIZE),\n/* harmony export */   MINSNIFFSIZE: () => (/* reexport safe */ _keri_core_core_js__WEBPACK_IMPORTED_MODULE_15__.MINSNIFFSIZE),\n/* harmony export */   Manager: () => (/* reexport safe */ _keri_core_manager_js__WEBPACK_IMPORTED_MODULE_25__.Manager),\n/* harmony export */   Matter: () => (/* reexport safe */ _keri_core_matter_js__WEBPACK_IMPORTED_MODULE_26__.Matter),\n/* harmony export */   MatterCodex: () => (/* reexport safe */ _keri_core_matter_js__WEBPACK_IMPORTED_MODULE_26__.MatterCodex),\n/* harmony export */   MtrDex: () => (/* reexport safe */ _keri_core_matter_js__WEBPACK_IMPORTED_MODULE_26__.MtrDex),\n/* harmony export */   NonTransCodex: () => (/* reexport safe */ _keri_core_matter_js__WEBPACK_IMPORTED_MODULE_26__.NonTransCodex),\n/* harmony export */   NonTransDex: () => (/* reexport safe */ _keri_core_matter_js__WEBPACK_IMPORTED_MODULE_26__.NonTransDex),\n/* harmony export */   Notifications: () => (/* reexport safe */ _keri_app_notifying_js__WEBPACK_IMPORTED_MODULE_11__.Notifications),\n/* harmony export */   NumCodex: () => (/* reexport safe */ _keri_core_matter_js__WEBPACK_IMPORTED_MODULE_26__.NumCodex),\n/* harmony export */   NumDex: () => (/* reexport safe */ _keri_core_matter_js__WEBPACK_IMPORTED_MODULE_26__.NumDex),\n/* harmony export */   Oobis: () => (/* reexport safe */ _keri_app_coring_js__WEBPACK_IMPORTED_MODULE_6__.Oobis),\n/* harmony export */   Operations: () => (/* reexport safe */ _keri_app_coring_js__WEBPACK_IMPORTED_MODULE_6__.Operations),\n/* harmony export */   Prefixer: () => (/* reexport safe */ _keri_core_prefixer_js__WEBPACK_IMPORTED_MODULE_28__.Prefixer),\n/* harmony export */   Protocols: () => (/* reexport safe */ _keri_core_core_js__WEBPACK_IMPORTED_MODULE_15__.Protocols),\n/* harmony export */   RandyCreator: () => (/* reexport safe */ _keri_core_manager_js__WEBPACK_IMPORTED_MODULE_25__.RandyCreator),\n/* harmony export */   RandyIdentifierManager: () => (/* reexport safe */ _keri_core_keeping_js__WEBPACK_IMPORTED_MODULE_23__.RandyIdentifierManager),\n/* harmony export */   Registries: () => (/* reexport safe */ _keri_app_credentialing_js__WEBPACK_IMPORTED_MODULE_7__.Registries),\n/* harmony export */   RegistryResult: () => (/* reexport safe */ _keri_app_credentialing_js__WEBPACK_IMPORTED_MODULE_7__.RegistryResult),\n/* harmony export */   RotLabels: () => (/* reexport safe */ _keri_core_core_js__WEBPACK_IMPORTED_MODULE_15__.RotLabels),\n/* harmony export */   RpyLabels: () => (/* reexport safe */ _keri_core_core_js__WEBPACK_IMPORTED_MODULE_15__.RpyLabels),\n/* harmony export */   Saider: () => (/* reexport safe */ _keri_core_saider_js__WEBPACK_IMPORTED_MODULE_29__.Saider),\n/* harmony export */   Salter: () => (/* reexport safe */ _keri_core_salter_js__WEBPACK_IMPORTED_MODULE_30__.Salter),\n/* harmony export */   SaltyCreator: () => (/* reexport safe */ _keri_core_manager_js__WEBPACK_IMPORTED_MODULE_25__.SaltyCreator),\n/* harmony export */   SaltyIdentifierManager: () => (/* reexport safe */ _keri_core_keeping_js__WEBPACK_IMPORTED_MODULE_23__.SaltyIdentifierManager),\n/* harmony export */   Schemas: () => (/* reexport safe */ _keri_app_credentialing_js__WEBPACK_IMPORTED_MODULE_7__.Schemas),\n/* harmony export */   Seqner: () => (/* reexport safe */ _keri_core_seqner_js__WEBPACK_IMPORTED_MODULE_31__.Seqner),\n/* harmony export */   Serder: () => (/* reexport safe */ _keri_core_serder_js__WEBPACK_IMPORTED_MODULE_32__.Serder),\n/* harmony export */   Serials: () => (/* reexport safe */ _keri_core_core_js__WEBPACK_IMPORTED_MODULE_15__.Serials),\n/* harmony export */   Siger: () => (/* reexport safe */ _keri_core_siger_js__WEBPACK_IMPORTED_MODULE_33__.Siger),\n/* harmony export */   Signage: () => (/* reexport safe */ _keri_end_ending_js__WEBPACK_IMPORTED_MODULE_39__.Signage),\n/* harmony export */   Signer: () => (/* reexport safe */ _keri_core_signer_js__WEBPACK_IMPORTED_MODULE_34__.Signer),\n/* harmony export */   SignifyClient: () => (/* reexport safe */ _keri_app_clienting_js__WEBPACK_IMPORTED_MODULE_4__.SignifyClient),\n/* harmony export */   Sizage: () => (/* reexport safe */ _keri_core_matter_js__WEBPACK_IMPORTED_MODULE_26__.Sizage),\n/* harmony export */   SmallVrzDex: () => (/* reexport safe */ _keri_core_matter_js__WEBPACK_IMPORTED_MODULE_26__.SmallVrzDex),\n/* harmony export */   TRUTHY: () => (/* reexport safe */ _keri_end_ending_js__WEBPACK_IMPORTED_MODULE_39__.TRUTHY),\n/* harmony export */   Tholder: () => (/* reexport safe */ _keri_core_tholder_js__WEBPACK_IMPORTED_MODULE_35__.Tholder),\n/* harmony export */   Tier: () => (/* reexport safe */ _keri_core_salter_js__WEBPACK_IMPORTED_MODULE_30__.Tier),\n/* harmony export */   TraitCodex: () => (/* reexport safe */ _keri_app_habery_js__WEBPACK_IMPORTED_MODULE_1__.TraitCodex),\n/* harmony export */   TraitDex: () => (/* reexport safe */ _keri_app_habery_js__WEBPACK_IMPORTED_MODULE_1__.TraitDex),\n/* harmony export */   Unqualified: () => (/* reexport safe */ _keri_core_httping_js__WEBPACK_IMPORTED_MODULE_21__.Unqualified),\n/* harmony export */   VEREX: () => (/* reexport safe */ _keri_core_core_js__WEBPACK_IMPORTED_MODULE_15__.VEREX),\n/* harmony export */   VERFULLSIZE: () => (/* reexport safe */ _keri_core_core_js__WEBPACK_IMPORTED_MODULE_15__.VERFULLSIZE),\n/* harmony export */   Verfer: () => (/* reexport safe */ _keri_core_verfer_js__WEBPACK_IMPORTED_MODULE_37__.Verfer),\n/* harmony export */   Version: () => (/* reexport safe */ _keri_core_core_js__WEBPACK_IMPORTED_MODULE_15__.Version),\n/* harmony export */   Vrsn_1_0: () => (/* reexport safe */ _keri_core_core_js__WEBPACK_IMPORTED_MODULE_15__.Vrsn_1_0),\n/* harmony export */   Xizage: () => (/* reexport safe */ _keri_core_indexer_js__WEBPACK_IMPORTED_MODULE_22__.Xizage),\n/* harmony export */   ample: () => (/* reexport safe */ _keri_core_eventing_js__WEBPACK_IMPORTED_MODULE_20__.ample),\n/* harmony export */   arrayEquals: () => (/* reexport safe */ _keri_core_utils_js__WEBPACK_IMPORTED_MODULE_36__.arrayEquals),\n/* harmony export */   b: () => (/* reexport safe */ _keri_core_core_js__WEBPACK_IMPORTED_MODULE_15__.b),\n/* harmony export */   b64ToInt: () => (/* reexport safe */ _keri_core_core_js__WEBPACK_IMPORTED_MODULE_15__.b64ToInt),\n/* harmony export */   bytesToInt: () => (/* reexport safe */ _keri_core_utils_js__WEBPACK_IMPORTED_MODULE_36__.bytesToInt),\n/* harmony export */   concat: () => (/* reexport safe */ _keri_core_core_js__WEBPACK_IMPORTED_MODULE_15__.concat),\n/* harmony export */   d: () => (/* reexport safe */ _keri_core_core_js__WEBPACK_IMPORTED_MODULE_15__.d),\n/* harmony export */   desiginput: () => (/* reexport safe */ _keri_core_httping_js__WEBPACK_IMPORTED_MODULE_21__.desiginput),\n/* harmony export */   designature: () => (/* reexport safe */ _keri_end_ending_js__WEBPACK_IMPORTED_MODULE_39__.designature),\n/* harmony export */   deversify: () => (/* reexport safe */ _keri_core_core_js__WEBPACK_IMPORTED_MODULE_15__.deversify),\n/* harmony export */   dumps: () => (/* reexport safe */ _keri_core_serder_js__WEBPACK_IMPORTED_MODULE_32__.dumps),\n/* harmony export */   exchange: () => (/* reexport safe */ _keri_app_exchanging_js__WEBPACK_IMPORTED_MODULE_9__.exchange),\n/* harmony export */   extractValues: () => (/* reexport safe */ _keri_core_utils_js__WEBPACK_IMPORTED_MODULE_36__.extractValues),\n/* harmony export */   incept: () => (/* reexport safe */ _keri_core_eventing_js__WEBPACK_IMPORTED_MODULE_20__.incept),\n/* harmony export */   intToB64: () => (/* reexport safe */ _keri_core_core_js__WEBPACK_IMPORTED_MODULE_15__.intToB64),\n/* harmony export */   intToB64b: () => (/* reexport safe */ _keri_core_core_js__WEBPACK_IMPORTED_MODULE_15__.intToB64b),\n/* harmony export */   intToBytes: () => (/* reexport safe */ _keri_core_utils_js__WEBPACK_IMPORTED_MODULE_36__.intToBytes),\n/* harmony export */   interact: () => (/* reexport safe */ _keri_core_eventing_js__WEBPACK_IMPORTED_MODULE_20__.interact),\n/* harmony export */   messagize: () => (/* reexport safe */ _keri_core_eventing_js__WEBPACK_IMPORTED_MODULE_20__.messagize),\n/* harmony export */   normalize: () => (/* reexport safe */ _keri_core_httping_js__WEBPACK_IMPORTED_MODULE_21__.normalize),\n/* harmony export */   nowUTC: () => (/* reexport safe */ _keri_core_utils_js__WEBPACK_IMPORTED_MODULE_36__.nowUTC),\n/* harmony export */   openManager: () => (/* reexport safe */ _keri_core_manager_js__WEBPACK_IMPORTED_MODULE_25__.openManager),\n/* harmony export */   pad: () => (/* reexport safe */ _keri_core_utils_js__WEBPACK_IMPORTED_MODULE_36__.pad),\n/* harmony export */   parseRangeHeaders: () => (/* reexport safe */ _keri_core_httping_js__WEBPACK_IMPORTED_MODULE_21__.parseRangeHeaders),\n/* harmony export */   randomNonce: () => (/* reexport safe */ _keri_app_coring_js__WEBPACK_IMPORTED_MODULE_6__.randomNonce),\n/* harmony export */   randomPasscode: () => (/* reexport safe */ _keri_app_coring_js__WEBPACK_IMPORTED_MODULE_6__.randomPasscode),\n/* harmony export */   range: () => (/* reexport safe */ _keri_core_utils_js__WEBPACK_IMPORTED_MODULE_36__.range),\n/* harmony export */   readInt: () => (/* reexport safe */ _keri_core_core_js__WEBPACK_IMPORTED_MODULE_15__.readInt),\n/* harmony export */   ready: () => (/* reexport safe */ _ready_js__WEBPACK_IMPORTED_MODULE_0__.ready),\n/* harmony export */   reply: () => (/* reexport safe */ _keri_core_eventing_js__WEBPACK_IMPORTED_MODULE_20__.reply),\n/* harmony export */   riKey: () => (/* reexport safe */ _keri_core_manager_js__WEBPACK_IMPORTED_MODULE_25__.riKey),\n/* harmony export */   rotate: () => (/* reexport safe */ _keri_core_eventing_js__WEBPACK_IMPORTED_MODULE_20__.rotate),\n/* harmony export */   serializeACDCAttachment: () => (/* reexport safe */ _keri_core_utils_js__WEBPACK_IMPORTED_MODULE_36__.serializeACDCAttachment),\n/* harmony export */   serializeIssExnAttachment: () => (/* reexport safe */ _keri_core_utils_js__WEBPACK_IMPORTED_MODULE_36__.serializeIssExnAttachment),\n/* harmony export */   siginput: () => (/* reexport safe */ _keri_core_httping_js__WEBPACK_IMPORTED_MODULE_21__.siginput),\n/* harmony export */   signature: () => (/* reexport safe */ _keri_end_ending_js__WEBPACK_IMPORTED_MODULE_39__.signature),\n/* harmony export */   sizeify: () => (/* reexport safe */ _keri_core_serder_js__WEBPACK_IMPORTED_MODULE_32__.sizeify),\n/* harmony export */   versify: () => (/* reexport safe */ _keri_core_core_js__WEBPACK_IMPORTED_MODULE_15__.versify)\n/* harmony export */ });\n/* harmony import */ var _ready_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ready.js */ \"(ssr)/./node_modules/signify-ts/dist/ready.js\");\n/* harmony import */ var _keri_app_habery_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./keri/app/habery.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/app/habery.js\");\n/* harmony import */ var _keri_app_controller_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./keri/app/controller.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/app/controller.js\");\n/* harmony import */ var _keri_app_aiding_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./keri/app/aiding.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/app/aiding.js\");\n/* harmony import */ var _keri_app_clienting_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./keri/app/clienting.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/app/clienting.js\");\n/* harmony import */ var _keri_app_contacting_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./keri/app/contacting.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/app/contacting.js\");\n/* harmony import */ var _keri_app_coring_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./keri/app/coring.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/app/coring.js\");\n/* harmony import */ var _keri_app_credentialing_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./keri/app/credentialing.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/app/credentialing.js\");\n/* harmony import */ var _keri_app_escrowing_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./keri/app/escrowing.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/app/escrowing.js\");\n/* harmony import */ var _keri_app_exchanging_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./keri/app/exchanging.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/app/exchanging.js\");\n/* harmony import */ var _keri_app_grouping_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./keri/app/grouping.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/app/grouping.js\");\n/* harmony import */ var _keri_app_notifying_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./keri/app/notifying.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/app/notifying.js\");\n/* harmony import */ var _keri_core_authing_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./keri/core/authing.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/authing.js\");\n/* harmony import */ var _keri_core_cigar_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./keri/core/cigar.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/cigar.js\");\n/* harmony import */ var _keri_core_cipher_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./keri/core/cipher.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/cipher.js\");\n/* harmony import */ var _keri_core_core_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./keri/core/core.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/core.js\");\n/* harmony import */ var _keri_core_counter_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./keri/core/counter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/counter.js\");\n/* harmony import */ var _keri_core_decrypter_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./keri/core/decrypter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/decrypter.js\");\n/* harmony import */ var _keri_core_diger_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./keri/core/diger.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/diger.js\");\n/* harmony import */ var _keri_core_encrypter_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./keri/core/encrypter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/encrypter.js\");\n/* harmony import */ var _keri_core_eventing_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./keri/core/eventing.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/eventing.js\");\n/* harmony import */ var _keri_core_httping_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./keri/core/httping.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/httping.js\");\n/* harmony import */ var _keri_core_indexer_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./keri/core/indexer.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/indexer.js\");\n/* harmony import */ var _keri_core_keeping_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./keri/core/keeping.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/keeping.js\");\n/* harmony import */ var _keri_core_kering_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./keri/core/kering.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/kering.js\");\n/* harmony import */ var _keri_core_manager_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./keri/core/manager.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/manager.js\");\n/* harmony import */ var _keri_core_matter_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./keri/core/matter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/matter.js\");\n/* harmony import */ var _keri_core_number_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./keri/core/number.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/number.js\");\n/* harmony import */ var _keri_core_prefixer_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./keri/core/prefixer.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/prefixer.js\");\n/* harmony import */ var _keri_core_saider_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./keri/core/saider.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/saider.js\");\n/* harmony import */ var _keri_core_salter_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./keri/core/salter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/salter.js\");\n/* harmony import */ var _keri_core_seqner_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./keri/core/seqner.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/seqner.js\");\n/* harmony import */ var _keri_core_serder_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./keri/core/serder.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/serder.js\");\n/* harmony import */ var _keri_core_siger_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./keri/core/siger.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/siger.js\");\n/* harmony import */ var _keri_core_signer_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./keri/core/signer.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/signer.js\");\n/* harmony import */ var _keri_core_tholder_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./keri/core/tholder.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/tholder.js\");\n/* harmony import */ var _keri_core_utils_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./keri/core/utils.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/utils.js\");\n/* harmony import */ var _keri_core_verfer_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./keri/core/verfer.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/verfer.js\");\n/* harmony import */ var _keri_core_keyState_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./keri/core/keyState.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/keyState.js\");\n/* harmony import */ var _keri_end_ending_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./keri/end/ending.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/end/ending.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2V4cG9ydHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBMkI7QUFDVTtBQUNJO0FBQ0o7QUFDRztBQUNDO0FBQ0o7QUFDTztBQUNKO0FBQ0M7QUFDRjtBQUNDO0FBQ0Q7QUFDRjtBQUNDO0FBQ0Y7QUFDRztBQUNFO0FBQ0o7QUFDSTtBQUNEO0FBQ0Q7QUFDQTtBQUNBO0FBQ0Q7QUFDQztBQUNEO0FBQ0E7QUFDRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0Q7QUFDQztBQUNDO0FBQ0Y7QUFDQztBQUNFO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdGVsbGFyLXByb2N1cmVtZW50LWRhcHAvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2V4cG9ydHMuanM/ZDk3NSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9yZWFkeS5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4va2VyaS9hcHAvaGFiZXJ5LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9rZXJpL2FwcC9jb250cm9sbGVyLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9rZXJpL2FwcC9haWRpbmcuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2tlcmkvYXBwL2NsaWVudGluZy5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4va2VyaS9hcHAvY29udGFjdGluZy5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4va2VyaS9hcHAvY29yaW5nLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9rZXJpL2FwcC9jcmVkZW50aWFsaW5nLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9rZXJpL2FwcC9lc2Nyb3dpbmcuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2tlcmkvYXBwL2V4Y2hhbmdpbmcuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2tlcmkvYXBwL2dyb3VwaW5nLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9rZXJpL2FwcC9ub3RpZnlpbmcuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2tlcmkvY29yZS9hdXRoaW5nLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9rZXJpL2NvcmUvY2lnYXIuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2tlcmkvY29yZS9jaXBoZXIuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2tlcmkvY29yZS9jb3JlLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9rZXJpL2NvcmUvY291bnRlci5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4va2VyaS9jb3JlL2RlY3J5cHRlci5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4va2VyaS9jb3JlL2RpZ2VyLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9rZXJpL2NvcmUvZW5jcnlwdGVyLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9rZXJpL2NvcmUvZXZlbnRpbmcuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2tlcmkvY29yZS9odHRwaW5nLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9rZXJpL2NvcmUvaW5kZXhlci5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4va2VyaS9jb3JlL2tlZXBpbmcuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2tlcmkvY29yZS9rZXJpbmcuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2tlcmkvY29yZS9tYW5hZ2VyLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9rZXJpL2NvcmUvbWF0dGVyLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9rZXJpL2NvcmUvbnVtYmVyLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9rZXJpL2NvcmUvcHJlZml4ZXIuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2tlcmkvY29yZS9zYWlkZXIuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2tlcmkvY29yZS9zYWx0ZXIuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2tlcmkvY29yZS9zZXFuZXIuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2tlcmkvY29yZS9zZXJkZXIuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2tlcmkvY29yZS9zaWdlci5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4va2VyaS9jb3JlL3NpZ25lci5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4va2VyaS9jb3JlL3Rob2xkZXIuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2tlcmkvY29yZS91dGlscy5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4va2VyaS9jb3JlL3ZlcmZlci5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4va2VyaS9jb3JlL2tleVN0YXRlLmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9rZXJpL2VuZC9lbmRpbmcuanNcIjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/exports.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/index.js":
/*!***********************************************!*\
  !*** ./node_modules/signify-ts/dist/index.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Agent: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Agent),\n/* harmony export */   Algos: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Algos),\n/* harmony export */   Authenticater: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Authenticater),\n/* harmony export */   B64ChrByIdx: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.B64ChrByIdx),\n/* harmony export */   B64IdxByChr: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.B64IdxByChr),\n/* harmony export */   BexCodex: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.BexCodex),\n/* harmony export */   BexDex: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.BexDex),\n/* harmony export */   CesrNumber: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.CesrNumber),\n/* harmony export */   Challenges: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Challenges),\n/* harmony export */   Cigar: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Cigar),\n/* harmony export */   Cipher: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Cipher),\n/* harmony export */   Codex: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Codex),\n/* harmony export */   Config: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Config),\n/* harmony export */   Contacts: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Contacts),\n/* harmony export */   Controller: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Controller),\n/* harmony export */   Counter: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Counter),\n/* harmony export */   CounterCodex: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.CounterCodex),\n/* harmony export */   Creatory: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Creatory),\n/* harmony export */   CredentialTypes: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.CredentialTypes),\n/* harmony export */   Credentials: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Credentials),\n/* harmony export */   CtrDex: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.CtrDex),\n/* harmony export */   Decrypter: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Decrypter),\n/* harmony export */   Diger: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Diger),\n/* harmony export */   DigiCodex: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.DigiCodex),\n/* harmony export */   DigiDex: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.DigiDex),\n/* harmony export */   DipLabels: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.DipLabels),\n/* harmony export */   DrtLabels: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.DrtLabels),\n/* harmony export */   EmptyMaterialError: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.EmptyMaterialError),\n/* harmony export */   Encrypter: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Encrypter),\n/* harmony export */   Escrows: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Escrows),\n/* harmony export */   EventResult: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.EventResult),\n/* harmony export */   Exchanges: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Exchanges),\n/* harmony export */   FALSY: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.FALSY),\n/* harmony export */   GroupIdentifierManager: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.GroupIdentifierManager),\n/* harmony export */   Groups: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Groups),\n/* harmony export */   HEADER_SIG_INPUT: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.HEADER_SIG_INPUT),\n/* harmony export */   HEADER_SIG_TIME: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.HEADER_SIG_TIME),\n/* harmony export */   Hab: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Hab),\n/* harmony export */   Habery: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Habery),\n/* harmony export */   IcpLabels: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.IcpLabels),\n/* harmony export */   Identifier: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Identifier),\n/* harmony export */   IdentifierManagerFactory: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.IdentifierManagerFactory),\n/* harmony export */   IdrDex: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.IdrDex),\n/* harmony export */   Ids: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Ids),\n/* harmony export */   IdxBthSigDex: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.IdxBthSigDex),\n/* harmony export */   IdxCrtSigDex: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.IdxCrtSigDex),\n/* harmony export */   IdxSigDex: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.IdxSigDex),\n/* harmony export */   Ilks: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Ilks),\n/* harmony export */   IndexedBothSigCodex: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.IndexedBothSigCodex),\n/* harmony export */   IndexedCurrentSigCodex: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.IndexedCurrentSigCodex),\n/* harmony export */   IndexedSigCodex: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.IndexedSigCodex),\n/* harmony export */   Indexer: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Indexer),\n/* harmony export */   IndexerCodex: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.IndexerCodex),\n/* harmony export */   Inputage: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Inputage),\n/* harmony export */   Ipex: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Ipex),\n/* harmony export */   IxnLabels: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.IxnLabels),\n/* harmony export */   KeyEvents: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.KeyEvents),\n/* harmony export */   KeyStates: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.KeyStates),\n/* harmony export */   KsnLabels: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.KsnLabels),\n/* harmony export */   LargeVrzDex: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.LargeVrzDex),\n/* harmony export */   MINSIGSIZE: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.MINSIGSIZE),\n/* harmony export */   MINSNIFFSIZE: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.MINSNIFFSIZE),\n/* harmony export */   Manager: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Manager),\n/* harmony export */   Matter: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Matter),\n/* harmony export */   MatterCodex: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.MatterCodex),\n/* harmony export */   MtrDex: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.MtrDex),\n/* harmony export */   NonTransCodex: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.NonTransCodex),\n/* harmony export */   NonTransDex: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.NonTransDex),\n/* harmony export */   Notifications: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Notifications),\n/* harmony export */   NumCodex: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.NumCodex),\n/* harmony export */   NumDex: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.NumDex),\n/* harmony export */   Oobis: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Oobis),\n/* harmony export */   Operations: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Operations),\n/* harmony export */   Prefixer: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Prefixer),\n/* harmony export */   Protocols: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Protocols),\n/* harmony export */   RandyCreator: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.RandyCreator),\n/* harmony export */   RandyIdentifierManager: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.RandyIdentifierManager),\n/* harmony export */   Registries: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Registries),\n/* harmony export */   RegistryResult: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.RegistryResult),\n/* harmony export */   RotLabels: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.RotLabels),\n/* harmony export */   RpyLabels: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.RpyLabels),\n/* harmony export */   Saider: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Saider),\n/* harmony export */   Salter: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Salter),\n/* harmony export */   SaltyCreator: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.SaltyCreator),\n/* harmony export */   SaltyIdentifierManager: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.SaltyIdentifierManager),\n/* harmony export */   Schemas: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Schemas),\n/* harmony export */   Seqner: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Seqner),\n/* harmony export */   Serder: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Serder),\n/* harmony export */   Serials: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Serials),\n/* harmony export */   Siger: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Siger),\n/* harmony export */   Signage: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Signage),\n/* harmony export */   Signer: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Signer),\n/* harmony export */   SignifyClient: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.SignifyClient),\n/* harmony export */   Sizage: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Sizage),\n/* harmony export */   SmallVrzDex: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.SmallVrzDex),\n/* harmony export */   TRUTHY: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.TRUTHY),\n/* harmony export */   Tholder: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Tholder),\n/* harmony export */   Tier: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Tier),\n/* harmony export */   TraitCodex: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.TraitCodex),\n/* harmony export */   TraitDex: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.TraitDex),\n/* harmony export */   Unqualified: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Unqualified),\n/* harmony export */   VEREX: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.VEREX),\n/* harmony export */   VERFULLSIZE: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.VERFULLSIZE),\n/* harmony export */   Verfer: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Verfer),\n/* harmony export */   Version: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Version),\n/* harmony export */   Vrsn_1_0: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Vrsn_1_0),\n/* harmony export */   Xizage: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.Xizage),\n/* harmony export */   ample: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.ample),\n/* harmony export */   arrayEquals: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.arrayEquals),\n/* harmony export */   b: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.b),\n/* harmony export */   b64ToInt: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.b64ToInt),\n/* harmony export */   bytesToInt: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.bytesToInt),\n/* harmony export */   concat: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.concat),\n/* harmony export */   d: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.d),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   desiginput: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.desiginput),\n/* harmony export */   designature: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.designature),\n/* harmony export */   deversify: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.deversify),\n/* harmony export */   dumps: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.dumps),\n/* harmony export */   exchange: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.exchange),\n/* harmony export */   extractValues: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.extractValues),\n/* harmony export */   incept: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.incept),\n/* harmony export */   intToB64: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.intToB64),\n/* harmony export */   intToB64b: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.intToB64b),\n/* harmony export */   intToBytes: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.intToBytes),\n/* harmony export */   interact: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.interact),\n/* harmony export */   messagize: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.messagize),\n/* harmony export */   normalize: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.normalize),\n/* harmony export */   nowUTC: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.nowUTC),\n/* harmony export */   openManager: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.openManager),\n/* harmony export */   pad: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.pad),\n/* harmony export */   parseRangeHeaders: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.parseRangeHeaders),\n/* harmony export */   randomNonce: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.randomNonce),\n/* harmony export */   randomPasscode: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.randomPasscode),\n/* harmony export */   range: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.range),\n/* harmony export */   readInt: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.readInt),\n/* harmony export */   ready: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.ready),\n/* harmony export */   reply: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.reply),\n/* harmony export */   riKey: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.riKey),\n/* harmony export */   rotate: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.rotate),\n/* harmony export */   serializeACDCAttachment: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.serializeACDCAttachment),\n/* harmony export */   serializeIssExnAttachment: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.serializeIssExnAttachment),\n/* harmony export */   siginput: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.siginput),\n/* harmony export */   signature: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.signature),\n/* harmony export */   sizeify: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.sizeify),\n/* harmony export */   versify: () => (/* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_0__.versify)\n/* harmony export */ });\n/* harmony import */ var _exports_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./exports.js */ \"(ssr)/./node_modules/signify-ts/dist/exports.js\");\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_exports_js__WEBPACK_IMPORTED_MODULE_0__);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFvQztBQUNQO0FBQzdCLGlFQUFlLHdDQUFHLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdGVsbGFyLXByb2N1cmVtZW50LWRhcHAvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2luZGV4LmpzPzkzYTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgZXhwIGZyb20gXCIuL2V4cG9ydHMuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2V4cG9ydHMuanNcIjtcbmV4cG9ydCBkZWZhdWx0IGV4cDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/app/aiding.js":
/*!*********************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/app/aiding.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventResult: () => (/* binding */ EventResult),\n/* harmony export */   Identifier: () => (/* binding */ Identifier)\n/* harmony export */ });\n/* harmony import */ var _core_manager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/manager.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/manager.js\");\n/* harmony import */ var _core_eventing_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/eventing.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/eventing.js\");\n/* harmony import */ var _core_core_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/core.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/core.js\");\n/* harmony import */ var _core_tholder_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/tholder.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/tholder.js\");\n/* harmony import */ var _core_matter_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/matter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/matter.js\");\n/* harmony import */ var _core_httping_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/httping.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/httping.js\");\n\n\n\n\n\n\n/** Identifier */\nclass Identifier {\n    /**\n     * Identifier\n     * @param {IdentifierDeps} client\n     */\n    constructor(client) {\n        this.client = client;\n    }\n    /**\n     * List managed identifiers\n     * @async\n     * @param {number} [start=0] Start index of list of notifications, defaults to 0\n     * @param {number} [end=24] End index of list of notifications, defaults to 24\n     * @returns {Promise<any>} A promise to the list of managed identifiers\n     */\n    async list(start = 0, end = 24) {\n        const extraHeaders = new Headers();\n        extraHeaders.append('Range', `aids=${start}-${end}`);\n        const path = `/identifiers`;\n        const data = null;\n        const method = 'GET';\n        const res = await this.client.fetch(path, method, data, extraHeaders);\n        const cr = res.headers.get('content-range');\n        const range = (0,_core_httping_js__WEBPACK_IMPORTED_MODULE_5__.parseRangeHeaders)(cr, 'aids');\n        const aids = await res.json();\n        return {\n            start: range.start,\n            end: range.end,\n            total: range.total,\n            aids: aids,\n        };\n    }\n    /**\n     * Get information for a managed identifier\n     * @async\n     * @param {string} name Prefix or alias of the identifier\n     * @returns {Promise<HabState>} A promise to the identifier information\n     */\n    async get(name) {\n        const path = `/identifiers/${encodeURIComponent(name)}`;\n        const data = null;\n        const method = 'GET';\n        const res = await this.client.fetch(path, method, data);\n        return await res.json();\n    }\n    /**\n     * Update managed identifier\n     * @async\n     * @param {string} name Prefix or alias of the identifier\n     * @param {IdentifierInfo} info Information to update for the given identifier\n     * @returns {Promise<HabState>} A promise to the identifier information after updating\n     */\n    async update(name, info) {\n        const path = `/identifiers/${name}`;\n        const method = 'PUT';\n        const res = await this.client.fetch(path, method, info);\n        return await res.json();\n    }\n    /**\n     * Create a managed identifier\n     * @async\n     * @param {string} name Name or alias of the identifier\n     * @param {CreateIdentiferArgs} [kargs] Optional parameters to create the identifier\n     * @returns {EventResult} The inception result\n     */\n    async create(name, kargs = {}) {\n        var _a, _b, _c, _d, _e, _f;\n        const algo = kargs.algo == undefined ? _core_manager_js__WEBPACK_IMPORTED_MODULE_0__.Algos.salty : kargs.algo;\n        const transferable = (_a = kargs.transferable) !== null && _a !== void 0 ? _a : true;\n        const isith = (_b = kargs.isith) !== null && _b !== void 0 ? _b : '1';\n        let nsith = (_c = kargs.nsith) !== null && _c !== void 0 ? _c : '1';\n        let wits = (_d = kargs.wits) !== null && _d !== void 0 ? _d : [];\n        const toad = (_e = kargs.toad) !== null && _e !== void 0 ? _e : 0;\n        let dcode = (_f = kargs.dcode) !== null && _f !== void 0 ? _f : _core_matter_js__WEBPACK_IMPORTED_MODULE_4__.MtrDex.Blake3_256;\n        const proxy = kargs.proxy;\n        const delpre = kargs.delpre;\n        const data = kargs.data != undefined ? [kargs.data] : [];\n        const pre = kargs.pre;\n        const states = kargs.states;\n        const rstates = kargs.rstates;\n        const prxs = kargs.prxs;\n        const nxts = kargs.nxts;\n        const mhab = kargs.mhab;\n        const _keys = kargs.keys;\n        const _ndigs = kargs.ndigs;\n        const bran = kargs.bran;\n        const count = kargs.count;\n        let ncount = kargs.ncount;\n        const tier = kargs.tier;\n        const extern_type = kargs.extern_type;\n        const extern = kargs.extern;\n        if (!transferable) {\n            ncount = 0;\n            nsith = 0;\n            dcode = _core_matter_js__WEBPACK_IMPORTED_MODULE_4__.MtrDex.Ed25519N;\n        }\n        const xargs = {\n            transferable: transferable,\n            isith: isith,\n            nsith: nsith,\n            wits: wits,\n            toad: toad,\n            proxy: proxy,\n            delpre: delpre,\n            dcode: dcode,\n            data: data,\n            algo: algo,\n            pre: pre,\n            prxs: prxs,\n            nxts: nxts,\n            mhab: mhab,\n            states: states,\n            rstates: rstates,\n            keys: _keys,\n            ndigs: _ndigs,\n            bran: bran,\n            count: count,\n            ncount: ncount,\n            tier: tier,\n            extern_type: extern_type,\n            extern: extern,\n        };\n        const keeper = this.client.manager.new(algo, this.client.pidx, xargs);\n        const [keys, ndigs] = await keeper.incept(transferable);\n        wits = wits !== undefined ? wits : [];\n        let serder = undefined;\n        if (delpre == undefined) {\n            serder = (0,_core_eventing_js__WEBPACK_IMPORTED_MODULE_1__.incept)({\n                keys: keys,\n                isith: isith,\n                ndigs: ndigs,\n                nsith: nsith,\n                toad: toad,\n                wits: wits,\n                cnfg: [],\n                data: data,\n                version: _core_core_js__WEBPACK_IMPORTED_MODULE_2__.Vrsn_1_0,\n                kind: _core_core_js__WEBPACK_IMPORTED_MODULE_2__.Serials.JSON,\n                code: dcode,\n                intive: false,\n            });\n        }\n        else {\n            serder = (0,_core_eventing_js__WEBPACK_IMPORTED_MODULE_1__.incept)({\n                keys: keys,\n                isith: isith,\n                ndigs: ndigs,\n                nsith: nsith,\n                toad: toad,\n                wits: wits,\n                cnfg: [],\n                data: data,\n                version: _core_core_js__WEBPACK_IMPORTED_MODULE_2__.Vrsn_1_0,\n                kind: _core_core_js__WEBPACK_IMPORTED_MODULE_2__.Serials.JSON,\n                code: dcode,\n                intive: false,\n                delpre: delpre,\n            });\n        }\n        const sigs = await keeper.sign((0,_core_core_js__WEBPACK_IMPORTED_MODULE_2__.b)(serder.raw));\n        const jsondata = {\n            name: name,\n            icp: serder.sad,\n            sigs: sigs,\n            proxy: proxy,\n            smids: states != undefined\n                ? states.map((state) => state.i)\n                : undefined,\n            rmids: rstates != undefined\n                ? rstates.map((state) => state.i)\n                : undefined,\n        };\n        jsondata[algo] = keeper.params();\n        this.client.pidx = this.client.pidx + 1;\n        const res = await this.client.fetch('/identifiers', 'POST', jsondata);\n        return new EventResult(serder, sigs, res);\n    }\n    /**\n     * Generate an interaction event in a managed identifier\n     * @async\n     * @param {string} name Prefix or alias of the identifier\n     * @param {any} [data] Option data to be anchored in the interaction event\n     * @returns {Promise<EventResult>} A promise to the interaction event result\n     */\n    async interact(name, data) {\n        const { serder, sigs, jsondata } = await this.createInteract(name, data);\n        const res = await this.client.fetch('/identifiers/' + name + '/events', 'POST', jsondata);\n        return new EventResult(serder, sigs, res);\n    }\n    async createInteract(name, data) {\n        const hab = await this.get(name);\n        const pre = hab.prefix;\n        const state = hab.state;\n        const sn = parseInt(state.s, 16);\n        const dig = state.d;\n        data = Array.isArray(data) ? data : [data];\n        const serder = (0,_core_eventing_js__WEBPACK_IMPORTED_MODULE_1__.interact)({\n            pre: pre,\n            sn: sn + 1,\n            data: data,\n            dig: dig,\n            version: undefined,\n            kind: undefined,\n        });\n        const keeper = this.client.manager.get(hab);\n        const sigs = await keeper.sign((0,_core_core_js__WEBPACK_IMPORTED_MODULE_2__.b)(serder.raw));\n        const jsondata = {\n            ixn: serder.sad,\n            sigs: sigs,\n        };\n        jsondata[keeper.algo] = keeper.params();\n        return { serder, sigs, jsondata };\n    }\n    /**\n     * Generate a rotation event in a managed identifier\n     * @param {string} name Name or alias of the identifier\n     * @param {RotateIdentifierArgs} [kargs] Optional parameters requiered to generate the rotation event\n     * @returns {Promise<EventResult>} A promise to the rotation event result\n     */\n    async rotate(name, kargs = {}) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const transferable = (_a = kargs.transferable) !== null && _a !== void 0 ? _a : true;\n        const ncode = (_b = kargs.ncode) !== null && _b !== void 0 ? _b : _core_matter_js__WEBPACK_IMPORTED_MODULE_4__.MtrDex.Ed25519_Seed;\n        const ncount = (_c = kargs.ncount) !== null && _c !== void 0 ? _c : 1;\n        const hab = await this.get(name);\n        const pre = hab.prefix;\n        const delegated = hab.state.di !== '';\n        const state = hab.state;\n        const count = state.k.length;\n        const dig = state.d;\n        const ridx = parseInt(state.s, 16) + 1;\n        const wits = state.b;\n        let isith = state.nt;\n        let nsith = (_d = kargs.nsith) !== null && _d !== void 0 ? _d : isith;\n        // if isith is None:  # compute default from newly rotated verfers above\n        if (isith == undefined)\n            isith = `${Math.max(1, Math.ceil(count / 2)).toString(16)}`;\n        // if nsith is None:  # compute default from newly rotated digers above\n        if (nsith == undefined)\n            nsith = `${Math.max(1, Math.ceil(ncount / 2)).toString(16)}`;\n        const cst = new _core_tholder_js__WEBPACK_IMPORTED_MODULE_3__.Tholder({ sith: isith }).sith; // current signing threshold\n        const nst = new _core_tholder_js__WEBPACK_IMPORTED_MODULE_3__.Tholder({ sith: nsith }).sith; // next signing threshold\n        // Regenerate next keys to sign rotation event\n        const keeper = this.client.manager.get(hab);\n        // Create new keys for next digests\n        const ncodes = (_e = kargs.ncodes) !== null && _e !== void 0 ? _e : new Array(ncount).fill(ncode);\n        const states = kargs.states == undefined ? [] : kargs.states;\n        const rstates = kargs.rstates == undefined ? [] : kargs.rstates;\n        const [keys, ndigs] = await keeper.rotate(ncodes, transferable, states, rstates);\n        const cuts = (_f = kargs.cuts) !== null && _f !== void 0 ? _f : [];\n        const adds = (_g = kargs.adds) !== null && _g !== void 0 ? _g : [];\n        const data = kargs.data != undefined ? [kargs.data] : [];\n        const toad = kargs.toad;\n        const ilk = delegated ? _core_core_js__WEBPACK_IMPORTED_MODULE_2__.Ilks.drt : _core_core_js__WEBPACK_IMPORTED_MODULE_2__.Ilks.rot;\n        const serder = (0,_core_eventing_js__WEBPACK_IMPORTED_MODULE_1__.rotate)({\n            pre: pre,\n            ilk: ilk,\n            keys: keys,\n            dig: dig,\n            sn: ridx,\n            isith: cst,\n            nsith: nst,\n            ndigs: ndigs,\n            toad: toad,\n            wits: wits,\n            cuts: cuts,\n            adds: adds,\n            data: data,\n        });\n        const sigs = await keeper.sign((0,_core_core_js__WEBPACK_IMPORTED_MODULE_2__.b)(serder.raw));\n        const jsondata = {\n            rot: serder.sad,\n            sigs: sigs,\n            smids: states != undefined\n                ? states.map((state) => state.i)\n                : undefined,\n            rmids: rstates != undefined\n                ? rstates.map((state) => state.i)\n                : undefined,\n        };\n        jsondata[keeper.algo] = keeper.params();\n        const res = await this.client.fetch('/identifiers/' + name + '/events', 'POST', jsondata);\n        return new EventResult(serder, sigs, res);\n    }\n    /**\n     * Authorize an endpoint provider in a given role for a managed identifier\n     * @remarks\n     * Typically used to authorize the agent to be the endpoint provider for the identifier in the role of `agent`\n     * @async\n     * @param {string} name Name or alias of the identifier\n     * @param {string} role Authorized role for eid\n     * @param {string} [eid] Optional qb64 of endpoint provider to be authorized\n     * @param {string} [stamp=now] Optional date-time-stamp RFC-3339 profile of iso8601 datetime. Now is the default if not provided\n     * @returns {Promise<EventResult>} A promise to the result of the authorization\n     */\n    async addEndRole(name, role, eid, stamp) {\n        const hab = await this.get(name);\n        const pre = hab.prefix;\n        const rpy = this.makeEndRole(pre, role, eid, stamp);\n        const keeper = this.client.manager.get(hab);\n        const sigs = await keeper.sign((0,_core_core_js__WEBPACK_IMPORTED_MODULE_2__.b)(rpy.raw));\n        const jsondata = {\n            rpy: rpy.sad,\n            sigs: sigs,\n        };\n        const res = await this.client.fetch('/identifiers/' + name + '/endroles', 'POST', jsondata);\n        return new EventResult(rpy, sigs, res);\n    }\n    /**\n     * Generate an /end/role/add reply message\n     * @param {string} pre Prefix of the identifier\n     * @param {string} role Authorized role for eid\n     * @param {string} [eid] Optional qb64 of endpoint provider to be authorized\n     * @param {string} [stamp=now] Optional date-time-stamp RFC-3339 profile of iso8601 datetime. Now is the default if not provided\n     * @returns {Serder} The reply message\n     */\n    makeEndRole(pre, role, eid, stamp) {\n        const data = {\n            cid: pre,\n            role: role,\n        };\n        if (eid != undefined) {\n            data.eid = eid;\n        }\n        const route = '/end/role/add';\n        return (0,_core_eventing_js__WEBPACK_IMPORTED_MODULE_1__.reply)(route, data, stamp, undefined, _core_core_js__WEBPACK_IMPORTED_MODULE_2__.Serials.JSON);\n    }\n    /**\n     * Get the members of a group identifier\n     * @async\n     * @param {string} name - Name or alias of the identifier\n     * @returns {Promise<any>} - A promise to the list of members\n     */\n    async members(name) {\n        const res = await this.client.fetch('/identifiers/' + name + '/members', 'GET', undefined);\n        return await res.json();\n    }\n}\n/** Event Result */\nclass EventResult {\n    constructor(serder, sigs, response) {\n        this._serder = serder;\n        this._sigs = sigs;\n        this.response = response;\n    }\n    get serder() {\n        return this._serder;\n    }\n    get sigs() {\n        return this._sigs;\n    }\n    async op() {\n        return await this.response.json();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/app/aiding.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/app/clienting.js":
/*!************************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/app/clienting.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SignifyClient: () => (/* binding */ SignifyClient)\n/* harmony export */ });\n/* harmony import */ var _core_authing_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/authing.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/authing.js\");\n/* harmony import */ var _core_httping_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/httping.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/httping.js\");\n/* harmony import */ var _core_keeping_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/keeping.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/keeping.js\");\n/* harmony import */ var _core_salter_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/salter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/salter.js\");\n/* harmony import */ var _aiding_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./aiding.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/app/aiding.js\");\n/* harmony import */ var _contacting_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./contacting.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/app/contacting.js\");\n/* harmony import */ var _controller_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./controller.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/app/controller.js\");\n/* harmony import */ var _coring_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./coring.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/app/coring.js\");\n/* harmony import */ var _credentialing_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./credentialing.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/app/credentialing.js\");\n/* harmony import */ var _delegating_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./delegating.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/app/delegating.js\");\n/* harmony import */ var _escrowing_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./escrowing.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/app/escrowing.js\");\n/* harmony import */ var _exchanging_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./exchanging.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/app/exchanging.js\");\n/* harmony import */ var _grouping_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./grouping.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/app/grouping.js\");\n/* harmony import */ var _notifying_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./notifying.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/app/notifying.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst DEFAULT_BOOT_URL = 'http://localhost:3903';\nclass State {\n    constructor() {\n        this.agent = null;\n        this.controller = null;\n        this.pidx = 0;\n        this.ridx = 0;\n    }\n}\n/**\n * An in-memory key manager that can connect to a KERIA Agent and use it to\n * receive messages and act as a proxy for multi-signature operations and delegation operations.\n */\nclass SignifyClient {\n    /**\n     * SignifyClient constructor\n     * @param {string} url KERIA admin interface URL\n     * @param {string} bran Base64 21 char string that is used as base material for seed of the client AID\n     * @param {Tier} tier Security tier for generating keys of the client AID (high | mewdium | low)\n     * @param {string} bootUrl KERIA boot interface URL\n     * @param {ExternalModule[]} externalModules list of external modules to load\n     */\n    constructor(url, bran, tier = _core_salter_js__WEBPACK_IMPORTED_MODULE_3__.Tier.low, bootUrl = DEFAULT_BOOT_URL, externalModules = []) {\n        this._identifiers = new _aiding_js__WEBPACK_IMPORTED_MODULE_4__.Identifier(this);\n        this._operations = new _coring_js__WEBPACK_IMPORTED_MODULE_7__.Operations(this);\n        this._keyEvents = new _coring_js__WEBPACK_IMPORTED_MODULE_7__.KeyEvents(this);\n        this._keyStates = new _coring_js__WEBPACK_IMPORTED_MODULE_7__.KeyStates(this);\n        this._oobis = new _coring_js__WEBPACK_IMPORTED_MODULE_7__.Oobis(this);\n        this._config = new _coring_js__WEBPACK_IMPORTED_MODULE_7__.Config(this);\n        this._delegations = new _delegating_js__WEBPACK_IMPORTED_MODULE_9__.Delegations(this);\n        this._exchanges = new _exchanging_js__WEBPACK_IMPORTED_MODULE_11__.Exchanges(this);\n        this._groups = new _grouping_js__WEBPACK_IMPORTED_MODULE_12__.Groups(this);\n        this._escrows = new _escrowing_js__WEBPACK_IMPORTED_MODULE_10__.Escrows(this);\n        this._credentials = new _credentialing_js__WEBPACK_IMPORTED_MODULE_8__.Credentials(this);\n        this._registries = new _credentialing_js__WEBPACK_IMPORTED_MODULE_8__.Registries(this);\n        this._ipex = new _credentialing_js__WEBPACK_IMPORTED_MODULE_8__.Ipex(this);\n        this._notifications = new _notifying_js__WEBPACK_IMPORTED_MODULE_13__.Notifications(this);\n        this._contacts = new _contacting_js__WEBPACK_IMPORTED_MODULE_5__.Contacts(this);\n        this._challenges = new _contacting_js__WEBPACK_IMPORTED_MODULE_5__.Challenges(this);\n        this._schemas = new _credentialing_js__WEBPACK_IMPORTED_MODULE_8__.Schemas(this);\n        this.url = url;\n        if (bran.length < 21) {\n            throw Error('bran must be 21 characters');\n        }\n        this.bran = bran;\n        this.pidx = 0;\n        this.controller = new _controller_js__WEBPACK_IMPORTED_MODULE_6__.Controller(bran, tier);\n        this.authn = null;\n        this.agent = null;\n        this.manager = null;\n        this.tier = tier;\n        this.bootUrl = bootUrl;\n        this.exteralModules = externalModules;\n    }\n    get data() {\n        return [this.url, this.bran, this.pidx, this.authn];\n    }\n    /**\n     * Boot a KERIA agent\n     * @async\n     * @returns {Promise<Response>} A promise to the result of the boot\n     */\n    async boot() {\n        var _a, _b, _c, _d;\n        const [evt, sign] = (_b = (_a = this.controller) === null || _a === void 0 ? void 0 : _a.event) !== null && _b !== void 0 ? _b : [];\n        const data = {\n            icp: evt.sad,\n            sig: sign.qb64,\n            stem: (_c = this.controller) === null || _c === void 0 ? void 0 : _c.stem,\n            pidx: 1,\n            tier: (_d = this.controller) === null || _d === void 0 ? void 0 : _d.tier,\n        };\n        return await fetch(this.bootUrl + '/boot', {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        });\n    }\n    /**\n     * Get state of the agent and the client\n     * @async\n     * @returns {Promise<Response>} A promise to the state\n     */\n    async state() {\n        var _a, _b, _c, _d, _e;\n        const caid = (_a = this.controller) === null || _a === void 0 ? void 0 : _a.pre;\n        const res = await fetch(this.url + `/agent/${caid}`);\n        if (res.status == 404) {\n            throw new Error(`agent does not exist for controller ${caid}`);\n        }\n        const data = await res.json();\n        const state = new State();\n        state.agent = (_b = data.agent) !== null && _b !== void 0 ? _b : {};\n        state.controller = (_c = data.controller) !== null && _c !== void 0 ? _c : {};\n        state.ridx = (_d = data.ridx) !== null && _d !== void 0 ? _d : 0;\n        state.pidx = (_e = data.pidx) !== null && _e !== void 0 ? _e : 0;\n        return state;\n    }\n    /**  Connect to a KERIA agent\n     * @async\n     */\n    async connect() {\n        const state = await this.state();\n        this.pidx = state.pidx;\n        //Create controller representing the local client AID\n        this.controller = new _controller_js__WEBPACK_IMPORTED_MODULE_6__.Controller(this.bran, this.tier, 0, state.controller);\n        this.controller.ridx = state.ridx !== undefined ? state.ridx : 0;\n        // Create agent representing the AID of KERIA cloud agent\n        this.agent = new _controller_js__WEBPACK_IMPORTED_MODULE_6__.Agent(state.agent);\n        if (this.agent.anchor != this.controller.pre) {\n            throw Error('commitment to controller AID missing in agent inception event');\n        }\n        if (this.controller.serder.sad.s == 0) {\n            await this.approveDelegation();\n        }\n        this.manager = new _core_keeping_js__WEBPACK_IMPORTED_MODULE_2__.IdentifierManagerFactory(this.controller.salter, this.exteralModules);\n        this.authn = new _core_authing_js__WEBPACK_IMPORTED_MODULE_0__.Authenticater(this.controller.signer, this.agent.verfer);\n    }\n    /**\n     * Fetch a resource from the KERIA agent\n     * @async\n     * @param {string} path Path to the resource\n     * @param {string} method HTTP method\n     * @param {any} data Data to be sent in the body of the resource\n     * @param {Headers} [extraHeaders] Optional extra headers to be sent with the request\n     * @returns {Promise<Response>} A promise to the result of the fetch\n     */\n    async fetch(path, method, data, extraHeaders) {\n        var _a;\n        const headers = new Headers();\n        let signed_headers = new Headers();\n        const final_headers = new Headers();\n        headers.set('Signify-Resource', this.controller.pre);\n        headers.set(_core_httping_js__WEBPACK_IMPORTED_MODULE_1__.HEADER_SIG_TIME, new Date().toISOString().replace('Z', '000+00:00'));\n        headers.set('Content-Type', 'application/json');\n        const _body = method == 'GET' ? null : JSON.stringify(data);\n        if (this.authn) {\n            signed_headers = this.authn.sign(headers, method, path.split('?')[0]);\n        }\n        else {\n            throw new Error('client need to call connect first');\n        }\n        signed_headers.forEach((value, key) => {\n            final_headers.set(key, value);\n        });\n        if (extraHeaders !== undefined) {\n            extraHeaders.forEach((value, key) => {\n                final_headers.append(key, value);\n            });\n        }\n        const res = await fetch(this.url + path, {\n            method: method,\n            body: _body,\n            headers: final_headers,\n        });\n        if (!res.ok) {\n            const error = await res.text();\n            const message = `HTTP ${method} ${path} - ${res.status} ${res.statusText} - ${error}`;\n            throw new Error(message);\n        }\n        const isSameAgent = ((_a = this.agent) === null || _a === void 0 ? void 0 : _a.pre) === res.headers.get('signify-resource');\n        if (!isSameAgent) {\n            throw new Error('message from a different remote agent');\n        }\n        const verification = this.authn.verify(res.headers, method, path.split('?')[0]);\n        if (verification) {\n            return res;\n        }\n        else {\n            throw new Error('response verification failed');\n        }\n    }\n    /**\n     * Create a Signed Request to fetch a resource from an external URL with headers signed by an AID\n     * @async\n     * @param {string} aidName Name or alias of the AID to be used for signing\n     * @param {string} url URL of the requested resource\n     * @param {RequestInit} req Request options should include:\n     *     - method: HTTP method\n     *     - data Data to be sent in the body of the resource.\n     *              If the data is a CESR JSON string then you should also set contentType to 'application/json+cesr'\n     *              If the data is a FormData object then you should not set the contentType and the browser will set it to 'multipart/form-data'\n     *              If the data is an object then you should use JSON.stringify to convert it to a string and set the contentType to 'application/json'\n     *     - contentType Content type of the request.\n     * @returns {Promise<Request>} A promise to the created Request\n     */\n    async createSignedRequest(aidName, url, req) {\n        var _a;\n        const hab = await this.identifiers().get(aidName);\n        const keeper = this.manager.get(hab);\n        const authenticator = new _core_authing_js__WEBPACK_IMPORTED_MODULE_0__.Authenticater(keeper.signers[0], keeper.signers[0].verfer);\n        const headers = new Headers(req.headers);\n        headers.set('Signify-Resource', hab['prefix']);\n        headers.set(_core_httping_js__WEBPACK_IMPORTED_MODULE_1__.HEADER_SIG_TIME, new Date().toISOString().replace('Z', '000+00:00'));\n        const signed_headers = authenticator.sign(new Headers(headers), (_a = req.method) !== null && _a !== void 0 ? _a : 'GET', new URL(url).pathname);\n        req.headers = signed_headers;\n        return new Request(url, req);\n    }\n    /**\n     * Approve the delegation of the client AID to the KERIA agent\n     * @async\n     * @returns {Promise<Response>} A promise to the result of the approval\n     */\n    async approveDelegation() {\n        const sigs = this.controller.approveDelegation(this.agent);\n        const data = {\n            ixn: this.controller.serder.sad,\n            sigs: sigs,\n        };\n        return await fetch(this.url + '/agent/' + this.controller.pre + '?type=ixn', {\n            method: 'PUT',\n            body: JSON.stringify(data),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        });\n    }\n    /**\n     * Save old client passcode in KERIA agent\n     * @async\n     * @param {string} passcode Passcode to be saved\n     * @returns {Promise<Response>} A promise to the result of the save\n     */\n    async saveOldPasscode(passcode) {\n        var _a;\n        const caid = (_a = this.controller) === null || _a === void 0 ? void 0 : _a.pre;\n        const body = { salt: passcode };\n        return await fetch(this.url + '/salt/' + caid, {\n            method: 'PUT',\n            body: JSON.stringify(body),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        });\n    }\n    /**\n     * Delete a saved passcode from KERIA agent\n     * @async\n     * @returns {Promise<Response>} A promise to the result of the deletion\n     */\n    async deletePasscode() {\n        var _a;\n        const caid = (_a = this.controller) === null || _a === void 0 ? void 0 : _a.pre;\n        return await fetch(this.url + '/salt/' + caid, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        });\n    }\n    /**\n     * Rotate the client AID\n     * @async\n     * @param {string} nbran Base64 21 char string that is used as base material for the new seed\n     * @param {Array<string>} aids List of managed AIDs to be rotated\n     * @returns {Promise<Response>} A promise to the result of the rotation\n     */\n    async rotate(nbran, aids) {\n        const data = this.controller.rotate(nbran, aids);\n        return await fetch(this.url + '/agent/' + this.controller.pre, {\n            method: 'PUT',\n            body: JSON.stringify(data),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        });\n    }\n    /**\n     * Get identifiers resource\n     * @returns {Identifier}\n     */\n    identifiers() {\n        return this._identifiers;\n    }\n    /**\n     * Get OOBIs resource\n     * @returns {Oobis}\n     */\n    oobis() {\n        return this._oobis;\n    }\n    /**\n     * Get operations resource\n     * @returns {Operations}\n     */\n    operations() {\n        return this._operations;\n    }\n    /**\n     * Get keyEvents resource\n     * @returns {KeyEvents}\n     */\n    keyEvents() {\n        return this._keyEvents;\n    }\n    /**\n     * Get keyStates resource\n     * @returns {KeyStates}\n     */\n    keyStates() {\n        return this._keyStates;\n    }\n    /**\n     * Get credentials resource\n     * @returns {Credentials}\n     */\n    credentials() {\n        return this._credentials;\n    }\n    /**\n     * Get IPEX resource\n     * @returns {Ipex}\n     */\n    ipex() {\n        return this._ipex;\n    }\n    /**\n     * Get registries resource\n     * @returns {Registries}\n     */\n    registries() {\n        return this._registries;\n    }\n    /**\n     * Get schemas resource\n     * @returns {Schemas}\n     */\n    schemas() {\n        return this._schemas;\n    }\n    /**\n     * Get challenges resource\n     * @returns {Challenges}\n     */\n    challenges() {\n        return this._challenges;\n    }\n    /**\n     * Get contacts resource\n     * @returns {Contacts}\n     */\n    contacts() {\n        return this._contacts;\n    }\n    /**\n     * Get notifications resource\n     * @returns {Notifications}\n     */\n    notifications() {\n        return this._notifications;\n    }\n    /**\n     * Get escrows resource\n     * @returns {Escrows}\n     */\n    escrows() {\n        return this._escrows;\n    }\n    /**\n     * Get groups resource\n     * @returns {Groups}\n     */\n    groups() {\n        return this._groups;\n    }\n    /**\n     * Get exchange resource\n     * @returns {Exchanges}\n     */\n    exchanges() {\n        return this._exchanges;\n    }\n    /**\n     * Get delegations resource\n     * @returns {Delegations}\n     */\n    delegations() {\n        return this._delegations;\n    }\n    /**\n     * Get agent config resource\n     * @returns {Config}\n     */\n    config() {\n        return this._config;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/app/clienting.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/app/contacting.js":
/*!*************************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/app/contacting.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Challenges: () => (/* binding */ Challenges),\n/* harmony export */   Contacts: () => (/* binding */ Contacts)\n/* harmony export */ });\n/**\n * Contacts\n */\nclass Contacts {\n    /**\n     * Contacts\n     * @param {SignifyClient} client\n     */\n    constructor(client) {\n        this.client = client;\n    }\n    /**\n     * List contacts\n     * @async\n     * @param {string} [group] Optional group name to filter contacts\n     * @param {string} [filterField] Optional field name to filter contacts\n     * @param {string} [filterValue] Optional field value to filter contacts\n     * @returns {Promise<any>} A promise to the list of contacts\n     */\n    async list(group, filterField, filterValue) {\n        const params = new URLSearchParams();\n        if (group !== undefined) {\n            params.append('group', group);\n        }\n        if (filterField !== undefined && filterValue !== undefined) {\n            params.append('filter_field', filterField);\n            params.append('filter_value', filterValue);\n        }\n        const path = `/contacts` + '?' + params.toString();\n        const method = 'GET';\n        const res = await this.client.fetch(path, method, null);\n        return await res.json();\n    }\n    /**\n     * Get a contact\n     * @async\n     * @param {string} pre Prefix of the contact\n     * @returns {Promise<any>} A promise to the contact\n     */\n    async get(pre) {\n        const path = `/contacts/` + pre;\n        const method = 'GET';\n        const res = await this.client.fetch(path, method, null);\n        return await res.json();\n    }\n    /**\n     * Add a contact\n     * @async\n     * @param pre Prefix of the contact\n     * @param info Information about the contact\n     * @returns A promise to the result of the addition\n     */\n    async add(pre, info) {\n        const path = `/contacts/` + pre;\n        const method = 'POST';\n        const res = await this.client.fetch(path, method, info);\n        return await res.json();\n    }\n    /**\n     * Delete a contact\n     * @async\n     * @param {string} pre Prefix of the contact\n     * @returns {Promise<void>}\n     */\n    async delete(pre) {\n        const path = `/contacts/` + pre;\n        const method = 'DELETE';\n        await this.client.fetch(path, method, undefined);\n    }\n    /**\n     * Update a contact\n     * @async\n     * @param {string} pre Prefix of the contact\n     * @param {any} info Updated information about the contact\n     * @returns {Promise<any>} A promise to the result of the update\n     */\n    async update(pre, info) {\n        const path = `/contacts/` + pre;\n        const method = 'PUT';\n        const res = await this.client.fetch(path, method, info);\n        return await res.json();\n    }\n}\n/**\n * Challenges\n */\nclass Challenges {\n    /**\n     * Challenges\n     * @param {SignifyClient} client\n     */\n    constructor(client) {\n        this.client = client;\n    }\n    /**\n     * Generate a random challenge word list based on BIP39\n     * @async\n     * @param {number} strength Integer representing the strength of the challenge. Typically 128 or 256\n     * @returns {Promise<any>} A promise to the list of random words\n     */\n    async generate(strength = 128) {\n        const path = `/challenges?strength=${strength.toString()}`;\n        const method = 'GET';\n        const res = await this.client.fetch(path, method, null);\n        return await res.json();\n    }\n    /**\n     * Respond to a challenge by signing a message with the list of words\n     * @async\n     * @param name Name or alias of the identifier\n     * @param recipient Prefix of the recipient of the response\n     * @param words List of words to embed in the signed response\n     * @returns A promise to the result of the response\n     */\n    async respond(name, recipient, words) {\n        const hab = await this.client.identifiers().get(name);\n        const exchanges = this.client.exchanges();\n        const resp = await exchanges.send(name, 'challenge', hab, '/challenge/response', { words: words }, {}, [recipient]);\n        return resp;\n    }\n    /**\n     * Ask Agent to verify a given sender signed the provided words\n     * @param source Prefix of the identifier that was challenged\n     * @param words List of challenge words to check for\n     * @returns A promise to the long running operation\n     */\n    async verify(source, words) {\n        const path = `/challenges_verify/${source}`;\n        const method = 'POST';\n        const data = {\n            words: words,\n        };\n        const res = await this.client.fetch(path, method, data);\n        return await res.json();\n    }\n    /**\n     * Mark challenge response as signed and accepted\n     * @param source Prefix of the identifier that was challenged\n     * @param said qb64 AID of exn message representing the signed response\n     * @returns {Promise<Response>} A promise to the result\n     */\n    async responded(source, said) {\n        const path = `/challenges_verify/${source}`;\n        const method = 'PUT';\n        const data = {\n            said: said,\n        };\n        const res = await this.client.fetch(path, method, data);\n        return res;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/app/contacting.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/app/controller.js":
/*!*************************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/app/controller.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Agent: () => (/* binding */ Agent),\n/* harmony export */   Controller: () => (/* binding */ Controller)\n/* harmony export */ });\n/* harmony import */ var _core_manager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/manager.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/manager.js\");\n/* harmony import */ var _core_salter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/salter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/salter.js\");\n/* harmony import */ var _core_matter_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/matter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/matter.js\");\n/* harmony import */ var _core_diger_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/diger.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/diger.js\");\n/* harmony import */ var _core_eventing_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/eventing.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/eventing.js\");\n/* harmony import */ var _core_serder_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/serder.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/serder.js\");\n/* harmony import */ var _core_tholder_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/tholder.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/tholder.js\");\n/* harmony import */ var _core_core_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/core.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/core.js\");\n/* harmony import */ var _core_verfer_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../core/verfer.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/verfer.js\");\n/* harmony import */ var _core_encrypter_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../core/encrypter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/encrypter.js\");\n/* harmony import */ var _core_decrypter_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../core/decrypter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/decrypter.js\");\n/* harmony import */ var _core_cipher_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../core/cipher.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/cipher.js\");\n/* harmony import */ var _core_seqner_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../core/seqner.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/seqner.js\");\n/* harmony import */ var _core_number_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../core/number.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/number.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Agent is a custodial entity that can be used in conjuntion with a local Client to establish the\n * KERI \"signing at the edge\" semantic\n */\nclass Agent {\n    constructor(agent) {\n        this.pre = '';\n        this.anchor = '';\n        this.verfer = null;\n        this.state = null;\n        this.sn = 0;\n        this.said = '';\n        this.parse(agent);\n    }\n    parse(agent) {\n        const [state, verfer] = this.event(agent);\n        this.sn = new _core_number_js__WEBPACK_IMPORTED_MODULE_13__.CesrNumber({}, undefined, state['s']).num;\n        this.said = state['d'];\n        if (state['et'] !== _core_core_js__WEBPACK_IMPORTED_MODULE_7__.Ilks.dip) {\n            throw new Error(`invalid inception event type ${state['et']}`);\n        }\n        this.pre = state['i'];\n        if (!state['di']) {\n            throw new Error('no anchor to controller AID');\n        }\n        this.anchor = state['di'];\n        this.verfer = verfer;\n        this.state = state;\n    }\n    event(evt) {\n        if (evt['k'].length !== 1) {\n            throw new Error(`agent inception event can only have one key`);\n        }\n        const verfer = new _core_verfer_js__WEBPACK_IMPORTED_MODULE_8__.Verfer({ qb64: evt['k'][0] });\n        if (evt['n'].length !== 1) {\n            throw new Error(`agent inception event can only have one next key`);\n        }\n        const diger = new _core_diger_js__WEBPACK_IMPORTED_MODULE_3__.Diger({ qb64: evt['n'][0] });\n        const tholder = new _core_tholder_js__WEBPACK_IMPORTED_MODULE_6__.Tholder({ sith: evt['kt'] });\n        if (tholder.num !== 1) {\n            throw new Error(`invalid threshold ${tholder.num}, must be 1`);\n        }\n        const ntholder = new _core_tholder_js__WEBPACK_IMPORTED_MODULE_6__.Tholder({ sith: evt['nt'] });\n        if (ntholder.num !== 1) {\n            throw new Error(`invalid next threshold ${ntholder.num}, must be 1`);\n        }\n        return [evt, verfer, diger];\n    }\n}\n/**\n * Controller is responsible for managing signing keys for the client and agent.  The client\n * signing key represents the Account for the client on the agent\n */\nclass Controller {\n    /**\n     * Creates a Signify Controller starting at key index 0 that generates keys in\n     * memory based on the provided seed, or bran, the tier, and the rotation index.\n     *\n     * The rotation index is used as follows:\n     *\n     * @param bran\n     * @param tier\n     * @param ridx\n     * @param state\n     */\n    constructor(bran, tier, ridx = 0, state = null) {\n        this.bran = _core_matter_js__WEBPACK_IMPORTED_MODULE_2__.MtrDex.Salt_128 + 'A' + bran.substring(0, 21); // qb64 salt for seed\n        this.stem = 'signify:controller';\n        this.tier = tier;\n        this.ridx = ridx;\n        const codes = undefined; // Defines the types of seeds that the SaltyCreator will create. Defaults to undefined.\n        const keyCount = 1; // The number of keys to create. Defaults to 1.\n        const transferable = true; // Whether the keys are transferable. Defaults to true.\n        const code = _core_matter_js__WEBPACK_IMPORTED_MODULE_2__.MtrDex.Ed25519_Seed; // The type  cryptographic seed to create by default when not overiddeen by \"codes\".\n        const pidx = 0; // The index of this identifier prefix of all managed identifiers created for this SignifyClient Controller. Defaults to 0.\n        const kidx = 0; // The overall starting key index for the first key this rotation set of keys. This is not a local index to this set of keys but an index in the overall set of keys for all keys in this sequence.\n        // Defaults to 0. Multiply rotation index (ridx) times key count to get the overall key index.\n        this.salter = new _core_salter_js__WEBPACK_IMPORTED_MODULE_1__.Salter({ qb64: this.bran, tier: this.tier });\n        const creator = new _core_manager_js__WEBPACK_IMPORTED_MODULE_0__.SaltyCreator(this.salter.qb64, this.tier, this.stem);\n        // Creates the first key pair used to sign the inception event.\n        // noinspection UnnecessaryLocalVariableJS\n        const initialKeyIndex = ridx; // will be zero for inception\n        this.signer = creator\n            .create(codes, keyCount, code, transferable, pidx, initialKeyIndex, kidx)\n            .signers.pop(); // assumes only one key pair is created because keyCount is 1\n        // Creates the second key pair which a digest of the public key is committed to in the inception event.\n        const nextKeyIndex = ridx + 1;\n        this.nsigner = creator\n            .create(codes, keyCount, code, transferable, pidx, nextKeyIndex, kidx)\n            .signers.pop(); // assumes only one key pair is created because keyCount is 1\n        this.keys = [this.signer.verfer.qb64];\n        this.ndigs = [\n            new _core_diger_js__WEBPACK_IMPORTED_MODULE_3__.Diger({ code: _core_matter_js__WEBPACK_IMPORTED_MODULE_2__.MtrDex.Blake3_256 }, this.nsigner.verfer.qb64b)\n                .qb64,\n        ];\n        if (state == null || state['ee']['s'] == 0) {\n            this.serder = (0,_core_eventing_js__WEBPACK_IMPORTED_MODULE_4__.incept)({\n                keys: this.keys,\n                isith: '1',\n                nsith: '1',\n                ndigs: this.ndigs,\n                code: _core_matter_js__WEBPACK_IMPORTED_MODULE_2__.MtrDex.Blake3_256,\n                toad: '0',\n                wits: [],\n            });\n        }\n        else {\n            this.serder = new _core_serder_js__WEBPACK_IMPORTED_MODULE_5__.Serder(state['ee']);\n        }\n    }\n    approveDelegation(_agent) {\n        const seqner = new _core_seqner_js__WEBPACK_IMPORTED_MODULE_12__.Seqner({ sn: _agent.sn });\n        const anchor = { i: _agent.pre, s: seqner.snh, d: _agent.said };\n        const sn = new _core_number_js__WEBPACK_IMPORTED_MODULE_13__.CesrNumber({}, undefined, this.serder.sad['s']).num + 1;\n        this.serder = (0,_core_eventing_js__WEBPACK_IMPORTED_MODULE_4__.interact)({\n            pre: this.serder.pre,\n            dig: this.serder.sad['d'],\n            sn: sn,\n            data: [anchor],\n            version: _core_core_js__WEBPACK_IMPORTED_MODULE_7__.Vrsn_1_0,\n            kind: _core_core_js__WEBPACK_IMPORTED_MODULE_7__.Serials.JSON,\n        });\n        return [this.signer.sign(this.serder.raw, 0).qb64];\n    }\n    get pre() {\n        return this.serder.pre;\n    }\n    get event() {\n        const siger = this.signer.sign(this.serder.raw, 0);\n        return [this.serder, siger];\n    }\n    get verfers() {\n        return this.signer.verfer();\n    }\n    derive(state) {\n        if (state != undefined && state['ee']['s'] === '0') {\n            return (0,_core_eventing_js__WEBPACK_IMPORTED_MODULE_4__.incept)({\n                keys: this.keys,\n                isith: '1',\n                nsith: '1',\n                ndigs: this.ndigs,\n                code: _core_matter_js__WEBPACK_IMPORTED_MODULE_2__.MtrDex.Blake3_256,\n                toad: '0',\n                wits: [],\n            });\n        }\n        else {\n            return new _core_serder_js__WEBPACK_IMPORTED_MODULE_5__.Serder({ sad: state.controller['ee'] });\n        }\n    }\n    rotate(bran, aids) {\n        const nbran = _core_matter_js__WEBPACK_IMPORTED_MODULE_2__.MtrDex.Salt_128 + 'A' + bran.substring(0, 21); // qb64 salt for seed\n        const nsalter = new _core_salter_js__WEBPACK_IMPORTED_MODULE_1__.Salter({ qb64: nbran, tier: this.tier });\n        const nsigner = this.salter.signer(undefined, false);\n        const creator = new _core_manager_js__WEBPACK_IMPORTED_MODULE_0__.SaltyCreator(this.salter.qb64, this.tier, this.stem);\n        const signer = creator\n            .create(undefined, 1, _core_matter_js__WEBPACK_IMPORTED_MODULE_2__.MtrDex.Ed25519_Seed, true, 0, this.ridx + 1, 0, false)\n            .signers.pop();\n        const ncreator = new _core_manager_js__WEBPACK_IMPORTED_MODULE_0__.SaltyCreator(nsalter.qb64, this.tier, this.stem);\n        this.signer = ncreator\n            .create(undefined, 1, _core_matter_js__WEBPACK_IMPORTED_MODULE_2__.MtrDex.Ed25519_Seed, true, 0, this.ridx, 0, false)\n            .signers.pop();\n        this.nsigner = ncreator\n            .create(undefined, 1, _core_matter_js__WEBPACK_IMPORTED_MODULE_2__.MtrDex.Ed25519_Seed, true, 0, this.ridx + 1, 0, false)\n            .signers.pop();\n        this.keys = [this.signer.verfer.qb64, signer === null || signer === void 0 ? void 0 : signer.verfer.qb64];\n        this.ndigs = [new _core_diger_js__WEBPACK_IMPORTED_MODULE_3__.Diger({}, this.nsigner.verfer.qb64b).qb64];\n        const rot = (0,_core_eventing_js__WEBPACK_IMPORTED_MODULE_4__.rotate)({\n            pre: this.pre,\n            keys: this.keys,\n            dig: this.serder.sad['d'],\n            isith: ['1', '0'],\n            nsith: '1',\n            ndigs: this.ndigs,\n        });\n        const sigs = [\n            signer === null || signer === void 0 ? void 0 : signer.sign((0,_core_core_js__WEBPACK_IMPORTED_MODULE_7__.b)(rot.raw), 1, false, 0).qb64,\n            this.signer.sign(rot.raw, 0).qb64,\n        ];\n        const encrypter = new _core_encrypter_js__WEBPACK_IMPORTED_MODULE_9__.Encrypter({}, (0,_core_core_js__WEBPACK_IMPORTED_MODULE_7__.b)(nsigner.verfer.qb64));\n        const decrypter = new _core_decrypter_js__WEBPACK_IMPORTED_MODULE_10__.Decrypter({}, nsigner.qb64b);\n        const sxlt = encrypter.encrypt((0,_core_core_js__WEBPACK_IMPORTED_MODULE_7__.b)(this.bran)).qb64;\n        const keys = {};\n        for (const aid of aids) {\n            const pre = aid['prefix'];\n            if ('salty' in aid) {\n                const salty = aid['salty'];\n                const cipher = new _core_cipher_js__WEBPACK_IMPORTED_MODULE_11__.Cipher({ qb64: salty['sxlt'] });\n                const dnxt = decrypter.decrypt(null, cipher).qb64;\n                // Now we have the AID salt, use it to verify against the current public keys\n                const acreator = new _core_manager_js__WEBPACK_IMPORTED_MODULE_0__.SaltyCreator(dnxt, salty['tier'], salty['stem']);\n                const signers = acreator.create(salty['icodes'], undefined, _core_matter_js__WEBPACK_IMPORTED_MODULE_2__.MtrDex.Ed25519_Seed, salty['transferable'], salty['pidx'], 0, salty['kidx'], false);\n                const _signers = [];\n                for (const signer of signers.signers) {\n                    _signers.push(signer.verfer.qb64);\n                }\n                const pubs = aid['state']['k'];\n                if (pubs.join(',') != _signers.join(',')) {\n                    throw new Error('Invalid Salty AID');\n                }\n                const asxlt = encrypter.encrypt((0,_core_core_js__WEBPACK_IMPORTED_MODULE_7__.b)(dnxt)).qb64;\n                keys[pre] = {\n                    sxlt: asxlt,\n                };\n            }\n            else if ('randy' in aid) {\n                const randy = aid['randy'];\n                const prxs = randy['prxs'];\n                const nxts = randy['nxts'];\n                const nprxs = [];\n                const signers = [];\n                for (const prx of prxs) {\n                    const cipher = new _core_cipher_js__WEBPACK_IMPORTED_MODULE_11__.Cipher({ qb64: prx });\n                    const dsigner = decrypter.decrypt(null, cipher, true);\n                    signers.push(dsigner);\n                    nprxs.push(encrypter.encrypt((0,_core_core_js__WEBPACK_IMPORTED_MODULE_7__.b)(dsigner.qb64)).qb64);\n                }\n                const pubs = aid['state']['k'];\n                const _signers = [];\n                for (const signer of signers) {\n                    _signers.push(signer.verfer.qb64);\n                }\n                if (pubs.join(',') != _signers.join(',')) {\n                    throw new Error(`unable to rotate, validation of encrypted public keys ${pubs} failed`);\n                }\n                const nnxts = [];\n                for (const nxt of nxts) {\n                    nnxts.push(this.recrypt(nxt, decrypter, encrypter));\n                }\n                keys[pre] = {\n                    prxs: nprxs,\n                    nxts: nnxts,\n                };\n            }\n            else {\n                throw new Error('invalid aid type ');\n            }\n        }\n        const data = {\n            rot: rot.sad,\n            sigs: sigs,\n            sxlt: sxlt,\n            keys: keys,\n        };\n        return data;\n    }\n    recrypt(enc, decrypter, encrypter) {\n        const cipher = new _core_cipher_js__WEBPACK_IMPORTED_MODULE_11__.Cipher({ qb64: enc });\n        const dnxt = decrypter.decrypt(null, cipher).qb64;\n        return encrypter.encrypt((0,_core_core_js__WEBPACK_IMPORTED_MODULE_7__.b)(dnxt)).qb64;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2tlcmkvYXBwL2NvbnRyb2xsZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFrRDtBQUNQO0FBQ0E7QUFDRjtBQUNzQjtBQUNwQjtBQUNFO0FBQ2dCO0FBQ2xCO0FBQ007QUFDQTtBQUNOO0FBQ0E7QUFDSTtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQix3REFBVSxHQUFHO0FBQ25DO0FBQ0EsNEJBQTRCLCtDQUFJO0FBQ2hDLDREQUE0RCxZQUFZO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLG1EQUFNLEdBQUcsbUJBQW1CO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixpREFBSyxHQUFHLG1CQUFtQjtBQUNyRCw0QkFBNEIscURBQU8sR0FBRyxpQkFBaUI7QUFDdkQ7QUFDQSxpREFBaUQsWUFBWTtBQUM3RDtBQUNBLDZCQUE2QixxREFBTyxHQUFHLGlCQUFpQjtBQUN4RDtBQUNBLHNEQUFzRCxhQUFhO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixtREFBTSx5Q0FBeUM7QUFDbkU7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDLDRCQUE0QjtBQUM1QixtQ0FBbUM7QUFDbkMscUJBQXFCLG1EQUFNLGVBQWU7QUFDMUMsd0JBQXdCO0FBQ3hCLHdCQUF3QjtBQUN4QjtBQUNBLDBCQUEwQixtREFBTSxHQUFHLGtDQUFrQztBQUNyRSw0QkFBNEIsMERBQVk7QUFDeEM7QUFDQTtBQUNBLHNDQUFzQztBQUN0QztBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQSxnQkFBZ0IsaURBQUssR0FBRyxNQUFNLG1EQUFNLGFBQWE7QUFDakQ7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLHlEQUFNO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLG1EQUFNO0FBQzVCO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLDhCQUE4QixtREFBTTtBQUNwQztBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsb0RBQU0sR0FBRyxlQUFlO0FBQ25ELHlCQUF5QjtBQUN6Qix1QkFBdUIsd0RBQVUsR0FBRztBQUNwQyxzQkFBc0IsMkRBQVE7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsbURBQVE7QUFDN0Isa0JBQWtCLGtEQUFPO0FBQ3pCLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHlEQUFNO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLG1EQUFNO0FBQzVCO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLHVCQUF1QixtREFBTSxHQUFHLDZCQUE2QjtBQUM3RDtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsbURBQU0seUNBQXlDO0FBQ3JFLDRCQUE0QixtREFBTSxHQUFHLDhCQUE4QjtBQUNuRTtBQUNBLDRCQUE0QiwwREFBWTtBQUN4QztBQUNBLGtDQUFrQyxtREFBTTtBQUN4QztBQUNBLDZCQUE2QiwwREFBWTtBQUN6QztBQUNBLGtDQUFrQyxtREFBTTtBQUN4QztBQUNBO0FBQ0Esa0NBQWtDLG1EQUFNO0FBQ3hDO0FBQ0E7QUFDQSwwQkFBMEIsaURBQUssR0FBRztBQUNsQyxvQkFBb0IseURBQU07QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0Esd0VBQXdFLGdEQUFDO0FBQ3pFO0FBQ0E7QUFDQSw4QkFBOEIseURBQVMsR0FBRyxFQUFFLGdEQUFDO0FBQzdDLDhCQUE4QiwwREFBUyxHQUFHO0FBQzFDLHVDQUF1QyxnREFBQztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLG9EQUFNLEdBQUcscUJBQXFCO0FBQ2pFO0FBQ0E7QUFDQSxxQ0FBcUMsMERBQVk7QUFDakQsNEVBQTRFLG1EQUFNO0FBQ2xGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0QsZ0RBQUM7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxvREFBTSxHQUFHLFdBQVc7QUFDM0Q7QUFDQTtBQUNBLGlEQUFpRCxnREFBQztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZGQUE2RixNQUFNO0FBQ25HO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsb0RBQU0sR0FBRyxXQUFXO0FBQy9DO0FBQ0EsaUNBQWlDLGdEQUFDO0FBQ2xDO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdGVsbGFyLXByb2N1cmVtZW50LWRhcHAvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2tlcmkvYXBwL2NvbnRyb2xsZXIuanM/Yjc3MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTYWx0eUNyZWF0b3IgfSBmcm9tIFwiLi4vY29yZS9tYW5hZ2VyLmpzXCI7XG5pbXBvcnQgeyBTYWx0ZXIgfSBmcm9tIFwiLi4vY29yZS9zYWx0ZXIuanNcIjtcbmltcG9ydCB7IE10ckRleCB9IGZyb20gXCIuLi9jb3JlL21hdHRlci5qc1wiO1xuaW1wb3J0IHsgRGlnZXIgfSBmcm9tIFwiLi4vY29yZS9kaWdlci5qc1wiO1xuaW1wb3J0IHsgaW5jZXB0LCByb3RhdGUsIGludGVyYWN0IH0gZnJvbSBcIi4uL2NvcmUvZXZlbnRpbmcuanNcIjtcbmltcG9ydCB7IFNlcmRlciB9IGZyb20gXCIuLi9jb3JlL3NlcmRlci5qc1wiO1xuaW1wb3J0IHsgVGhvbGRlciB9IGZyb20gXCIuLi9jb3JlL3Rob2xkZXIuanNcIjtcbmltcG9ydCB7IElsa3MsIGIsIFNlcmlhbHMsIFZyc25fMV8wIH0gZnJvbSBcIi4uL2NvcmUvY29yZS5qc1wiO1xuaW1wb3J0IHsgVmVyZmVyIH0gZnJvbSBcIi4uL2NvcmUvdmVyZmVyLmpzXCI7XG5pbXBvcnQgeyBFbmNyeXB0ZXIgfSBmcm9tIFwiLi4vY29yZS9lbmNyeXB0ZXIuanNcIjtcbmltcG9ydCB7IERlY3J5cHRlciB9IGZyb20gXCIuLi9jb3JlL2RlY3J5cHRlci5qc1wiO1xuaW1wb3J0IHsgQ2lwaGVyIH0gZnJvbSBcIi4uL2NvcmUvY2lwaGVyLmpzXCI7XG5pbXBvcnQgeyBTZXFuZXIgfSBmcm9tIFwiLi4vY29yZS9zZXFuZXIuanNcIjtcbmltcG9ydCB7IENlc3JOdW1iZXIgfSBmcm9tIFwiLi4vY29yZS9udW1iZXIuanNcIjtcbi8qKlxuICogQWdlbnQgaXMgYSBjdXN0b2RpYWwgZW50aXR5IHRoYXQgY2FuIGJlIHVzZWQgaW4gY29uanVudGlvbiB3aXRoIGEgbG9jYWwgQ2xpZW50IHRvIGVzdGFibGlzaCB0aGVcbiAqIEtFUkkgXCJzaWduaW5nIGF0IHRoZSBlZGdlXCIgc2VtYW50aWNcbiAqL1xuZXhwb3J0IGNsYXNzIEFnZW50IHtcbiAgICBjb25zdHJ1Y3RvcihhZ2VudCkge1xuICAgICAgICB0aGlzLnByZSA9ICcnO1xuICAgICAgICB0aGlzLmFuY2hvciA9ICcnO1xuICAgICAgICB0aGlzLnZlcmZlciA9IG51bGw7XG4gICAgICAgIHRoaXMuc3RhdGUgPSBudWxsO1xuICAgICAgICB0aGlzLnNuID0gMDtcbiAgICAgICAgdGhpcy5zYWlkID0gJyc7XG4gICAgICAgIHRoaXMucGFyc2UoYWdlbnQpO1xuICAgIH1cbiAgICBwYXJzZShhZ2VudCkge1xuICAgICAgICBjb25zdCBbc3RhdGUsIHZlcmZlcl0gPSB0aGlzLmV2ZW50KGFnZW50KTtcbiAgICAgICAgdGhpcy5zbiA9IG5ldyBDZXNyTnVtYmVyKHt9LCB1bmRlZmluZWQsIHN0YXRlWydzJ10pLm51bTtcbiAgICAgICAgdGhpcy5zYWlkID0gc3RhdGVbJ2QnXTtcbiAgICAgICAgaWYgKHN0YXRlWydldCddICE9PSBJbGtzLmRpcCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBpbnZhbGlkIGluY2VwdGlvbiBldmVudCB0eXBlICR7c3RhdGVbJ2V0J119YCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wcmUgPSBzdGF0ZVsnaSddO1xuICAgICAgICBpZiAoIXN0YXRlWydkaSddKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ25vIGFuY2hvciB0byBjb250cm9sbGVyIEFJRCcpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuYW5jaG9yID0gc3RhdGVbJ2RpJ107XG4gICAgICAgIHRoaXMudmVyZmVyID0gdmVyZmVyO1xuICAgICAgICB0aGlzLnN0YXRlID0gc3RhdGU7XG4gICAgfVxuICAgIGV2ZW50KGV2dCkge1xuICAgICAgICBpZiAoZXZ0WydrJ10ubGVuZ3RoICE9PSAxKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYGFnZW50IGluY2VwdGlvbiBldmVudCBjYW4gb25seSBoYXZlIG9uZSBrZXlgKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB2ZXJmZXIgPSBuZXcgVmVyZmVyKHsgcWI2NDogZXZ0WydrJ11bMF0gfSk7XG4gICAgICAgIGlmIChldnRbJ24nXS5sZW5ndGggIT09IDEpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgYWdlbnQgaW5jZXB0aW9uIGV2ZW50IGNhbiBvbmx5IGhhdmUgb25lIG5leHQga2V5YCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZGlnZXIgPSBuZXcgRGlnZXIoeyBxYjY0OiBldnRbJ24nXVswXSB9KTtcbiAgICAgICAgY29uc3QgdGhvbGRlciA9IG5ldyBUaG9sZGVyKHsgc2l0aDogZXZ0WydrdCddIH0pO1xuICAgICAgICBpZiAodGhvbGRlci5udW0gIT09IDEpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgaW52YWxpZCB0aHJlc2hvbGQgJHt0aG9sZGVyLm51bX0sIG11c3QgYmUgMWApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG50aG9sZGVyID0gbmV3IFRob2xkZXIoeyBzaXRoOiBldnRbJ250J10gfSk7XG4gICAgICAgIGlmIChudGhvbGRlci5udW0gIT09IDEpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgaW52YWxpZCBuZXh0IHRocmVzaG9sZCAke250aG9sZGVyLm51bX0sIG11c3QgYmUgMWApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBbZXZ0LCB2ZXJmZXIsIGRpZ2VyXTtcbiAgICB9XG59XG4vKipcbiAqIENvbnRyb2xsZXIgaXMgcmVzcG9uc2libGUgZm9yIG1hbmFnaW5nIHNpZ25pbmcga2V5cyBmb3IgdGhlIGNsaWVudCBhbmQgYWdlbnQuICBUaGUgY2xpZW50XG4gKiBzaWduaW5nIGtleSByZXByZXNlbnRzIHRoZSBBY2NvdW50IGZvciB0aGUgY2xpZW50IG9uIHRoZSBhZ2VudFxuICovXG5leHBvcnQgY2xhc3MgQ29udHJvbGxlciB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIFNpZ25pZnkgQ29udHJvbGxlciBzdGFydGluZyBhdCBrZXkgaW5kZXggMCB0aGF0IGdlbmVyYXRlcyBrZXlzIGluXG4gICAgICogbWVtb3J5IGJhc2VkIG9uIHRoZSBwcm92aWRlZCBzZWVkLCBvciBicmFuLCB0aGUgdGllciwgYW5kIHRoZSByb3RhdGlvbiBpbmRleC5cbiAgICAgKlxuICAgICAqIFRoZSByb3RhdGlvbiBpbmRleCBpcyB1c2VkIGFzIGZvbGxvd3M6XG4gICAgICpcbiAgICAgKiBAcGFyYW0gYnJhblxuICAgICAqIEBwYXJhbSB0aWVyXG4gICAgICogQHBhcmFtIHJpZHhcbiAgICAgKiBAcGFyYW0gc3RhdGVcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihicmFuLCB0aWVyLCByaWR4ID0gMCwgc3RhdGUgPSBudWxsKSB7XG4gICAgICAgIHRoaXMuYnJhbiA9IE10ckRleC5TYWx0XzEyOCArICdBJyArIGJyYW4uc3Vic3RyaW5nKDAsIDIxKTsgLy8gcWI2NCBzYWx0IGZvciBzZWVkXG4gICAgICAgIHRoaXMuc3RlbSA9ICdzaWduaWZ5OmNvbnRyb2xsZXInO1xuICAgICAgICB0aGlzLnRpZXIgPSB0aWVyO1xuICAgICAgICB0aGlzLnJpZHggPSByaWR4O1xuICAgICAgICBjb25zdCBjb2RlcyA9IHVuZGVmaW5lZDsgLy8gRGVmaW5lcyB0aGUgdHlwZXMgb2Ygc2VlZHMgdGhhdCB0aGUgU2FsdHlDcmVhdG9yIHdpbGwgY3JlYXRlLiBEZWZhdWx0cyB0byB1bmRlZmluZWQuXG4gICAgICAgIGNvbnN0IGtleUNvdW50ID0gMTsgLy8gVGhlIG51bWJlciBvZiBrZXlzIHRvIGNyZWF0ZS4gRGVmYXVsdHMgdG8gMS5cbiAgICAgICAgY29uc3QgdHJhbnNmZXJhYmxlID0gdHJ1ZTsgLy8gV2hldGhlciB0aGUga2V5cyBhcmUgdHJhbnNmZXJhYmxlLiBEZWZhdWx0cyB0byB0cnVlLlxuICAgICAgICBjb25zdCBjb2RlID0gTXRyRGV4LkVkMjU1MTlfU2VlZDsgLy8gVGhlIHR5cGUgIGNyeXB0b2dyYXBoaWMgc2VlZCB0byBjcmVhdGUgYnkgZGVmYXVsdCB3aGVuIG5vdCBvdmVyaWRkZWVuIGJ5IFwiY29kZXNcIi5cbiAgICAgICAgY29uc3QgcGlkeCA9IDA7IC8vIFRoZSBpbmRleCBvZiB0aGlzIGlkZW50aWZpZXIgcHJlZml4IG9mIGFsbCBtYW5hZ2VkIGlkZW50aWZpZXJzIGNyZWF0ZWQgZm9yIHRoaXMgU2lnbmlmeUNsaWVudCBDb250cm9sbGVyLiBEZWZhdWx0cyB0byAwLlxuICAgICAgICBjb25zdCBraWR4ID0gMDsgLy8gVGhlIG92ZXJhbGwgc3RhcnRpbmcga2V5IGluZGV4IGZvciB0aGUgZmlyc3Qga2V5IHRoaXMgcm90YXRpb24gc2V0IG9mIGtleXMuIFRoaXMgaXMgbm90IGEgbG9jYWwgaW5kZXggdG8gdGhpcyBzZXQgb2Yga2V5cyBidXQgYW4gaW5kZXggaW4gdGhlIG92ZXJhbGwgc2V0IG9mIGtleXMgZm9yIGFsbCBrZXlzIGluIHRoaXMgc2VxdWVuY2UuXG4gICAgICAgIC8vIERlZmF1bHRzIHRvIDAuIE11bHRpcGx5IHJvdGF0aW9uIGluZGV4IChyaWR4KSB0aW1lcyBrZXkgY291bnQgdG8gZ2V0IHRoZSBvdmVyYWxsIGtleSBpbmRleC5cbiAgICAgICAgdGhpcy5zYWx0ZXIgPSBuZXcgU2FsdGVyKHsgcWI2NDogdGhpcy5icmFuLCB0aWVyOiB0aGlzLnRpZXIgfSk7XG4gICAgICAgIGNvbnN0IGNyZWF0b3IgPSBuZXcgU2FsdHlDcmVhdG9yKHRoaXMuc2FsdGVyLnFiNjQsIHRoaXMudGllciwgdGhpcy5zdGVtKTtcbiAgICAgICAgLy8gQ3JlYXRlcyB0aGUgZmlyc3Qga2V5IHBhaXIgdXNlZCB0byBzaWduIHRoZSBpbmNlcHRpb24gZXZlbnQuXG4gICAgICAgIC8vIG5vaW5zcGVjdGlvbiBVbm5lY2Vzc2FyeUxvY2FsVmFyaWFibGVKU1xuICAgICAgICBjb25zdCBpbml0aWFsS2V5SW5kZXggPSByaWR4OyAvLyB3aWxsIGJlIHplcm8gZm9yIGluY2VwdGlvblxuICAgICAgICB0aGlzLnNpZ25lciA9IGNyZWF0b3JcbiAgICAgICAgICAgIC5jcmVhdGUoY29kZXMsIGtleUNvdW50LCBjb2RlLCB0cmFuc2ZlcmFibGUsIHBpZHgsIGluaXRpYWxLZXlJbmRleCwga2lkeClcbiAgICAgICAgICAgIC5zaWduZXJzLnBvcCgpOyAvLyBhc3N1bWVzIG9ubHkgb25lIGtleSBwYWlyIGlzIGNyZWF0ZWQgYmVjYXVzZSBrZXlDb3VudCBpcyAxXG4gICAgICAgIC8vIENyZWF0ZXMgdGhlIHNlY29uZCBrZXkgcGFpciB3aGljaCBhIGRpZ2VzdCBvZiB0aGUgcHVibGljIGtleSBpcyBjb21taXR0ZWQgdG8gaW4gdGhlIGluY2VwdGlvbiBldmVudC5cbiAgICAgICAgY29uc3QgbmV4dEtleUluZGV4ID0gcmlkeCArIDE7XG4gICAgICAgIHRoaXMubnNpZ25lciA9IGNyZWF0b3JcbiAgICAgICAgICAgIC5jcmVhdGUoY29kZXMsIGtleUNvdW50LCBjb2RlLCB0cmFuc2ZlcmFibGUsIHBpZHgsIG5leHRLZXlJbmRleCwga2lkeClcbiAgICAgICAgICAgIC5zaWduZXJzLnBvcCgpOyAvLyBhc3N1bWVzIG9ubHkgb25lIGtleSBwYWlyIGlzIGNyZWF0ZWQgYmVjYXVzZSBrZXlDb3VudCBpcyAxXG4gICAgICAgIHRoaXMua2V5cyA9IFt0aGlzLnNpZ25lci52ZXJmZXIucWI2NF07XG4gICAgICAgIHRoaXMubmRpZ3MgPSBbXG4gICAgICAgICAgICBuZXcgRGlnZXIoeyBjb2RlOiBNdHJEZXguQmxha2UzXzI1NiB9LCB0aGlzLm5zaWduZXIudmVyZmVyLnFiNjRiKVxuICAgICAgICAgICAgICAgIC5xYjY0LFxuICAgICAgICBdO1xuICAgICAgICBpZiAoc3RhdGUgPT0gbnVsbCB8fCBzdGF0ZVsnZWUnXVsncyddID09IDApIHtcbiAgICAgICAgICAgIHRoaXMuc2VyZGVyID0gaW5jZXB0KHtcbiAgICAgICAgICAgICAgICBrZXlzOiB0aGlzLmtleXMsXG4gICAgICAgICAgICAgICAgaXNpdGg6ICcxJyxcbiAgICAgICAgICAgICAgICBuc2l0aDogJzEnLFxuICAgICAgICAgICAgICAgIG5kaWdzOiB0aGlzLm5kaWdzLFxuICAgICAgICAgICAgICAgIGNvZGU6IE10ckRleC5CbGFrZTNfMjU2LFxuICAgICAgICAgICAgICAgIHRvYWQ6ICcwJyxcbiAgICAgICAgICAgICAgICB3aXRzOiBbXSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5zZXJkZXIgPSBuZXcgU2VyZGVyKHN0YXRlWydlZSddKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBhcHByb3ZlRGVsZWdhdGlvbihfYWdlbnQpIHtcbiAgICAgICAgY29uc3Qgc2VxbmVyID0gbmV3IFNlcW5lcih7IHNuOiBfYWdlbnQuc24gfSk7XG4gICAgICAgIGNvbnN0IGFuY2hvciA9IHsgaTogX2FnZW50LnByZSwgczogc2VxbmVyLnNuaCwgZDogX2FnZW50LnNhaWQgfTtcbiAgICAgICAgY29uc3Qgc24gPSBuZXcgQ2Vzck51bWJlcih7fSwgdW5kZWZpbmVkLCB0aGlzLnNlcmRlci5zYWRbJ3MnXSkubnVtICsgMTtcbiAgICAgICAgdGhpcy5zZXJkZXIgPSBpbnRlcmFjdCh7XG4gICAgICAgICAgICBwcmU6IHRoaXMuc2VyZGVyLnByZSxcbiAgICAgICAgICAgIGRpZzogdGhpcy5zZXJkZXIuc2FkWydkJ10sXG4gICAgICAgICAgICBzbjogc24sXG4gICAgICAgICAgICBkYXRhOiBbYW5jaG9yXSxcbiAgICAgICAgICAgIHZlcnNpb246IFZyc25fMV8wLFxuICAgICAgICAgICAga2luZDogU2VyaWFscy5KU09OLFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIFt0aGlzLnNpZ25lci5zaWduKHRoaXMuc2VyZGVyLnJhdywgMCkucWI2NF07XG4gICAgfVxuICAgIGdldCBwcmUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNlcmRlci5wcmU7XG4gICAgfVxuICAgIGdldCBldmVudCgpIHtcbiAgICAgICAgY29uc3Qgc2lnZXIgPSB0aGlzLnNpZ25lci5zaWduKHRoaXMuc2VyZGVyLnJhdywgMCk7XG4gICAgICAgIHJldHVybiBbdGhpcy5zZXJkZXIsIHNpZ2VyXTtcbiAgICB9XG4gICAgZ2V0IHZlcmZlcnMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNpZ25lci52ZXJmZXIoKTtcbiAgICB9XG4gICAgZGVyaXZlKHN0YXRlKSB7XG4gICAgICAgIGlmIChzdGF0ZSAhPSB1bmRlZmluZWQgJiYgc3RhdGVbJ2VlJ11bJ3MnXSA9PT0gJzAnKSB7XG4gICAgICAgICAgICByZXR1cm4gaW5jZXB0KHtcbiAgICAgICAgICAgICAgICBrZXlzOiB0aGlzLmtleXMsXG4gICAgICAgICAgICAgICAgaXNpdGg6ICcxJyxcbiAgICAgICAgICAgICAgICBuc2l0aDogJzEnLFxuICAgICAgICAgICAgICAgIG5kaWdzOiB0aGlzLm5kaWdzLFxuICAgICAgICAgICAgICAgIGNvZGU6IE10ckRleC5CbGFrZTNfMjU2LFxuICAgICAgICAgICAgICAgIHRvYWQ6ICcwJyxcbiAgICAgICAgICAgICAgICB3aXRzOiBbXSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBTZXJkZXIoeyBzYWQ6IHN0YXRlLmNvbnRyb2xsZXJbJ2VlJ10gfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcm90YXRlKGJyYW4sIGFpZHMpIHtcbiAgICAgICAgY29uc3QgbmJyYW4gPSBNdHJEZXguU2FsdF8xMjggKyAnQScgKyBicmFuLnN1YnN0cmluZygwLCAyMSk7IC8vIHFiNjQgc2FsdCBmb3Igc2VlZFxuICAgICAgICBjb25zdCBuc2FsdGVyID0gbmV3IFNhbHRlcih7IHFiNjQ6IG5icmFuLCB0aWVyOiB0aGlzLnRpZXIgfSk7XG4gICAgICAgIGNvbnN0IG5zaWduZXIgPSB0aGlzLnNhbHRlci5zaWduZXIodW5kZWZpbmVkLCBmYWxzZSk7XG4gICAgICAgIGNvbnN0IGNyZWF0b3IgPSBuZXcgU2FsdHlDcmVhdG9yKHRoaXMuc2FsdGVyLnFiNjQsIHRoaXMudGllciwgdGhpcy5zdGVtKTtcbiAgICAgICAgY29uc3Qgc2lnbmVyID0gY3JlYXRvclxuICAgICAgICAgICAgLmNyZWF0ZSh1bmRlZmluZWQsIDEsIE10ckRleC5FZDI1NTE5X1NlZWQsIHRydWUsIDAsIHRoaXMucmlkeCArIDEsIDAsIGZhbHNlKVxuICAgICAgICAgICAgLnNpZ25lcnMucG9wKCk7XG4gICAgICAgIGNvbnN0IG5jcmVhdG9yID0gbmV3IFNhbHR5Q3JlYXRvcihuc2FsdGVyLnFiNjQsIHRoaXMudGllciwgdGhpcy5zdGVtKTtcbiAgICAgICAgdGhpcy5zaWduZXIgPSBuY3JlYXRvclxuICAgICAgICAgICAgLmNyZWF0ZSh1bmRlZmluZWQsIDEsIE10ckRleC5FZDI1NTE5X1NlZWQsIHRydWUsIDAsIHRoaXMucmlkeCwgMCwgZmFsc2UpXG4gICAgICAgICAgICAuc2lnbmVycy5wb3AoKTtcbiAgICAgICAgdGhpcy5uc2lnbmVyID0gbmNyZWF0b3JcbiAgICAgICAgICAgIC5jcmVhdGUodW5kZWZpbmVkLCAxLCBNdHJEZXguRWQyNTUxOV9TZWVkLCB0cnVlLCAwLCB0aGlzLnJpZHggKyAxLCAwLCBmYWxzZSlcbiAgICAgICAgICAgIC5zaWduZXJzLnBvcCgpO1xuICAgICAgICB0aGlzLmtleXMgPSBbdGhpcy5zaWduZXIudmVyZmVyLnFiNjQsIHNpZ25lciA9PT0gbnVsbCB8fCBzaWduZXIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHNpZ25lci52ZXJmZXIucWI2NF07XG4gICAgICAgIHRoaXMubmRpZ3MgPSBbbmV3IERpZ2VyKHt9LCB0aGlzLm5zaWduZXIudmVyZmVyLnFiNjRiKS5xYjY0XTtcbiAgICAgICAgY29uc3Qgcm90ID0gcm90YXRlKHtcbiAgICAgICAgICAgIHByZTogdGhpcy5wcmUsXG4gICAgICAgICAgICBrZXlzOiB0aGlzLmtleXMsXG4gICAgICAgICAgICBkaWc6IHRoaXMuc2VyZGVyLnNhZFsnZCddLFxuICAgICAgICAgICAgaXNpdGg6IFsnMScsICcwJ10sXG4gICAgICAgICAgICBuc2l0aDogJzEnLFxuICAgICAgICAgICAgbmRpZ3M6IHRoaXMubmRpZ3MsXG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCBzaWdzID0gW1xuICAgICAgICAgICAgc2lnbmVyID09PSBudWxsIHx8IHNpZ25lciA9PT0gdm9pZCAwID8gdm9pZCAwIDogc2lnbmVyLnNpZ24oYihyb3QucmF3KSwgMSwgZmFsc2UsIDApLnFiNjQsXG4gICAgICAgICAgICB0aGlzLnNpZ25lci5zaWduKHJvdC5yYXcsIDApLnFiNjQsXG4gICAgICAgIF07XG4gICAgICAgIGNvbnN0IGVuY3J5cHRlciA9IG5ldyBFbmNyeXB0ZXIoe30sIGIobnNpZ25lci52ZXJmZXIucWI2NCkpO1xuICAgICAgICBjb25zdCBkZWNyeXB0ZXIgPSBuZXcgRGVjcnlwdGVyKHt9LCBuc2lnbmVyLnFiNjRiKTtcbiAgICAgICAgY29uc3Qgc3hsdCA9IGVuY3J5cHRlci5lbmNyeXB0KGIodGhpcy5icmFuKSkucWI2NDtcbiAgICAgICAgY29uc3Qga2V5cyA9IHt9O1xuICAgICAgICBmb3IgKGNvbnN0IGFpZCBvZiBhaWRzKSB7XG4gICAgICAgICAgICBjb25zdCBwcmUgPSBhaWRbJ3ByZWZpeCddO1xuICAgICAgICAgICAgaWYgKCdzYWx0eScgaW4gYWlkKSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgc2FsdHkgPSBhaWRbJ3NhbHR5J107XG4gICAgICAgICAgICAgICAgY29uc3QgY2lwaGVyID0gbmV3IENpcGhlcih7IHFiNjQ6IHNhbHR5WydzeGx0J10gfSk7XG4gICAgICAgICAgICAgICAgY29uc3QgZG54dCA9IGRlY3J5cHRlci5kZWNyeXB0KG51bGwsIGNpcGhlcikucWI2NDtcbiAgICAgICAgICAgICAgICAvLyBOb3cgd2UgaGF2ZSB0aGUgQUlEIHNhbHQsIHVzZSBpdCB0byB2ZXJpZnkgYWdhaW5zdCB0aGUgY3VycmVudCBwdWJsaWMga2V5c1xuICAgICAgICAgICAgICAgIGNvbnN0IGFjcmVhdG9yID0gbmV3IFNhbHR5Q3JlYXRvcihkbnh0LCBzYWx0eVsndGllciddLCBzYWx0eVsnc3RlbSddKTtcbiAgICAgICAgICAgICAgICBjb25zdCBzaWduZXJzID0gYWNyZWF0b3IuY3JlYXRlKHNhbHR5WydpY29kZXMnXSwgdW5kZWZpbmVkLCBNdHJEZXguRWQyNTUxOV9TZWVkLCBzYWx0eVsndHJhbnNmZXJhYmxlJ10sIHNhbHR5WydwaWR4J10sIDAsIHNhbHR5WydraWR4J10sIGZhbHNlKTtcbiAgICAgICAgICAgICAgICBjb25zdCBfc2lnbmVycyA9IFtdO1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3Qgc2lnbmVyIG9mIHNpZ25lcnMuc2lnbmVycykge1xuICAgICAgICAgICAgICAgICAgICBfc2lnbmVycy5wdXNoKHNpZ25lci52ZXJmZXIucWI2NCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IHB1YnMgPSBhaWRbJ3N0YXRlJ11bJ2snXTtcbiAgICAgICAgICAgICAgICBpZiAocHVicy5qb2luKCcsJykgIT0gX3NpZ25lcnMuam9pbignLCcpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBTYWx0eSBBSUQnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3QgYXN4bHQgPSBlbmNyeXB0ZXIuZW5jcnlwdChiKGRueHQpKS5xYjY0O1xuICAgICAgICAgICAgICAgIGtleXNbcHJlXSA9IHtcbiAgICAgICAgICAgICAgICAgICAgc3hsdDogYXN4bHQsXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKCdyYW5keScgaW4gYWlkKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcmFuZHkgPSBhaWRbJ3JhbmR5J107XG4gICAgICAgICAgICAgICAgY29uc3QgcHJ4cyA9IHJhbmR5WydwcnhzJ107XG4gICAgICAgICAgICAgICAgY29uc3Qgbnh0cyA9IHJhbmR5WydueHRzJ107XG4gICAgICAgICAgICAgICAgY29uc3QgbnByeHMgPSBbXTtcbiAgICAgICAgICAgICAgICBjb25zdCBzaWduZXJzID0gW107XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBwcnggb2YgcHJ4cykge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBjaXBoZXIgPSBuZXcgQ2lwaGVyKHsgcWI2NDogcHJ4IH0pO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBkc2lnbmVyID0gZGVjcnlwdGVyLmRlY3J5cHQobnVsbCwgY2lwaGVyLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgc2lnbmVycy5wdXNoKGRzaWduZXIpO1xuICAgICAgICAgICAgICAgICAgICBucHJ4cy5wdXNoKGVuY3J5cHRlci5lbmNyeXB0KGIoZHNpZ25lci5xYjY0KSkucWI2NCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IHB1YnMgPSBhaWRbJ3N0YXRlJ11bJ2snXTtcbiAgICAgICAgICAgICAgICBjb25zdCBfc2lnbmVycyA9IFtdO1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3Qgc2lnbmVyIG9mIHNpZ25lcnMpIHtcbiAgICAgICAgICAgICAgICAgICAgX3NpZ25lcnMucHVzaChzaWduZXIudmVyZmVyLnFiNjQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAocHVicy5qb2luKCcsJykgIT0gX3NpZ25lcnMuam9pbignLCcpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgdW5hYmxlIHRvIHJvdGF0ZSwgdmFsaWRhdGlvbiBvZiBlbmNyeXB0ZWQgcHVibGljIGtleXMgJHtwdWJzfSBmYWlsZWRgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3Qgbm54dHMgPSBbXTtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IG54dCBvZiBueHRzKSB7XG4gICAgICAgICAgICAgICAgICAgIG5ueHRzLnB1c2godGhpcy5yZWNyeXB0KG54dCwgZGVjcnlwdGVyLCBlbmNyeXB0ZXIpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAga2V5c1twcmVdID0ge1xuICAgICAgICAgICAgICAgICAgICBwcnhzOiBucHJ4cyxcbiAgICAgICAgICAgICAgICAgICAgbnh0czogbm54dHMsXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignaW52YWxpZCBhaWQgdHlwZSAnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjb25zdCBkYXRhID0ge1xuICAgICAgICAgICAgcm90OiByb3Quc2FkLFxuICAgICAgICAgICAgc2lnczogc2lncyxcbiAgICAgICAgICAgIHN4bHQ6IHN4bHQsXG4gICAgICAgICAgICBrZXlzOiBrZXlzLFxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gZGF0YTtcbiAgICB9XG4gICAgcmVjcnlwdChlbmMsIGRlY3J5cHRlciwgZW5jcnlwdGVyKSB7XG4gICAgICAgIGNvbnN0IGNpcGhlciA9IG5ldyBDaXBoZXIoeyBxYjY0OiBlbmMgfSk7XG4gICAgICAgIGNvbnN0IGRueHQgPSBkZWNyeXB0ZXIuZGVjcnlwdChudWxsLCBjaXBoZXIpLnFiNjQ7XG4gICAgICAgIHJldHVybiBlbmNyeXB0ZXIuZW5jcnlwdChiKGRueHQpKS5xYjY0O1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/app/controller.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/app/coring.js":
/*!*********************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/app/coring.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Config: () => (/* binding */ Config),\n/* harmony export */   KeyEvents: () => (/* binding */ KeyEvents),\n/* harmony export */   KeyStates: () => (/* binding */ KeyStates),\n/* harmony export */   Oobis: () => (/* binding */ Oobis),\n/* harmony export */   Operations: () => (/* binding */ Operations),\n/* harmony export */   randomNonce: () => (/* binding */ randomNonce),\n/* harmony export */   randomPasscode: () => (/* binding */ randomPasscode)\n/* harmony export */ });\n/* harmony import */ var libsodium_wrappers_sumo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! libsodium-wrappers-sumo */ \"(ssr)/./node_modules/libsodium-wrappers-sumo/dist/modules-sumo/libsodium-wrappers.js\");\n/* harmony import */ var _core_salter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/salter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/salter.js\");\n/* harmony import */ var _core_matter_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/matter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/matter.js\");\n\n\n\nfunction randomPasscode() {\n    const raw = libsodium_wrappers_sumo__WEBPACK_IMPORTED_MODULE_0__.randombytes_buf(16);\n    const salter = new _core_salter_js__WEBPACK_IMPORTED_MODULE_1__.Salter({ raw: raw });\n    // https://github.com/WebOfTrust/signify-ts/issues/242\n    return salter.qb64.substring(2, 23);\n}\nfunction randomNonce() {\n    const seed = libsodium_wrappers_sumo__WEBPACK_IMPORTED_MODULE_0__.randombytes_buf(libsodium_wrappers_sumo__WEBPACK_IMPORTED_MODULE_0__.crypto_sign_SEEDBYTES);\n    const seedqb64 = new _core_matter_js__WEBPACK_IMPORTED_MODULE_2__.Matter({ raw: seed, code: _core_matter_js__WEBPACK_IMPORTED_MODULE_2__.MtrDex.Ed25519_Seed });\n    return seedqb64.qb64;\n}\nclass Oobis {\n    /**\n     * Oobis\n     * @param {SignifyClient} client\n     */\n    constructor(client) {\n        this.client = client;\n    }\n    /**\n     * Get the OOBI(s) for a managed indentifier for a given role\n     * @param {string} name Name or alias of the identifier\n     * @param {string} role Authorized role\n     * @returns {Promise<any>} A promise to the OOBI(s)\n     */\n    async get(name, role = 'agent') {\n        const path = `/identifiers/${name}/oobis?role=${role}`;\n        const method = 'GET';\n        const res = await this.client.fetch(path, method, null);\n        return await res.json();\n    }\n    /**\n     * Resolve an OOBI\n     * @async\n     * @param {string} oobi The OOBI to be resolver\n     * @param {string} [alias] Optional name or alias to link the OOBI resolution to a contact\n     * @returns {Promise<any>} A promise to the long-running operation\n     */\n    async resolve(oobi, alias) {\n        const path = `/oobis`;\n        const data = {\n            url: oobi,\n        };\n        if (alias !== undefined) {\n            data.oobialias = alias;\n        }\n        const method = 'POST';\n        const res = await this.client.fetch(path, method, data);\n        return await res.json();\n    }\n}\n/**\n * Operations\n * @remarks\n * Operations represent the status and result of long running tasks performed by KERIA agent\n */\nclass Operations {\n    /**\n     * Operations\n     * @param {SignifyClient} client\n     */\n    constructor(client) {\n        this.client = client;\n    }\n    /**\n     * Get operation status\n     * @async\n     * @param {string} name Name of the operation\n     * @returns {Promise<Operation>} A promise to the status of the operation\n     */\n    async get(name) {\n        const path = `/operations/${name}`;\n        const data = null;\n        const method = 'GET';\n        const res = await this.client.fetch(path, method, data);\n        return await res.json();\n    }\n    /**\n     * List operations\n     * @async\n     * @param {string} type Select operations by type\n     * @returns {Promise<Operation[]>} A list of operations\n     */\n    async list(type) {\n        const params = new URLSearchParams();\n        if (type !== undefined) {\n            params.append('type', type);\n        }\n        const path = `/operations?${params.toString()}`;\n        const data = null;\n        const method = 'GET';\n        const res = await this.client.fetch(path, method, data);\n        return await res.json();\n    }\n    /**\n     * Delete operation\n     * @async\n     * @param {string} name Name of the operation\n     */\n    async delete(name) {\n        const path = `/operations/${name}`;\n        const data = null;\n        const method = 'DELETE';\n        await this.client.fetch(path, method, data);\n    }\n    /**\n     * Poll for operation to become completed.\n     */\n    async wait(op, options = {}) {\n        var _a, _b, _c, _d, _e, _f;\n        const minSleep = (_a = options.minSleep) !== null && _a !== void 0 ? _a : 10;\n        const maxSleep = (_b = options.maxSleep) !== null && _b !== void 0 ? _b : 10000;\n        const increaseFactor = (_c = options.increaseFactor) !== null && _c !== void 0 ? _c : 50;\n        if (((_e = (_d = op.metadata) === null || _d === void 0 ? void 0 : _d.depends) === null || _e === void 0 ? void 0 : _e.done) === false) {\n            await this.wait(op.metadata.depends, options);\n        }\n        if (op.done === true) {\n            return op;\n        }\n        let retries = 0;\n        while (true) {\n            op = await this.get(op.name);\n            const delay = Math.max(minSleep, Math.min(maxSleep, 2 ** retries * increaseFactor));\n            retries++;\n            if (op.done === true) {\n                return op;\n            }\n            await new Promise((resolve) => setTimeout(resolve, delay));\n            (_f = options.signal) === null || _f === void 0 ? void 0 : _f.throwIfAborted();\n        }\n    }\n}\n/**\n * KeyEvents\n */\nclass KeyEvents {\n    /**\n     * KeyEvents\n     * @param {SignifyClient} client\n     */\n    constructor(client) {\n        this.client = client;\n    }\n    /**\n     * Retrieve key events for an identifier\n     * @async\n     * @param {string} pre Identifier prefix\n     * @returns {Promise<any>} A promise to the key events\n     */\n    async get(pre) {\n        const path = `/events?pre=${pre}`;\n        const data = null;\n        const method = 'GET';\n        const res = await this.client.fetch(path, method, data);\n        return await res.json();\n    }\n}\n/**\n * KeyStates\n */\nclass KeyStates {\n    /**\n     * KeyStates\n     * @param {SignifyClient} client\n     */\n    constructor(client) {\n        this.client = client;\n    }\n    /**\n     * Retriene the key state for an identifier\n     * @async\n     * @param {string} pre Identifier prefix\n     * @returns {Promise<any>} A promise to the key states\n     */\n    async get(pre) {\n        const path = `/states?pre=${pre}`;\n        const data = null;\n        const method = 'GET';\n        const res = await this.client.fetch(path, method, data);\n        return await res.json();\n    }\n    /**\n     * Retrieve the key state for a list of identifiers\n     * @async\n     * @param {Array<string>} pres List of identifier prefixes\n     * @returns {Promise<any>} A promise to the key states\n     */\n    async list(pres) {\n        const path = `/states?${pres.map((pre) => `pre=${pre}`).join('&')}`;\n        const data = null;\n        const method = 'GET';\n        const res = await this.client.fetch(path, method, data);\n        return await res.json();\n    }\n    /**\n     * Query the key state of an identifier for a given sequence number or anchor\n     * @async\n     * @param {string} pre Identifier prefix\n     * @param {number} [sn] Optional sequence number\n     * @param {any} [anchor] Optional anchor\n     * @returns {Promise<any>} A promise to the long-running operation\n     */\n    async query(pre, sn, anchor) {\n        const path = `/queries`;\n        const data = {\n            pre: pre,\n        };\n        if (sn !== undefined) {\n            data.sn = sn;\n        }\n        if (anchor !== undefined) {\n            data.anchor = anchor;\n        }\n        const method = 'POST';\n        const res = await this.client.fetch(path, method, data);\n        return await res.json();\n    }\n}\nclass Config {\n    /**\n     * Config\n     * @param {SignifyClient} client\n     */\n    constructor(client) {\n        this.client = client;\n    }\n    async get() {\n        const path = `/config`;\n        const method = 'GET';\n        const res = await this.client.fetch(path, method, null);\n        return await res.json();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/app/coring.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/app/credentialing.js":
/*!****************************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/app/credentialing.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CredentialTypes: () => (/* binding */ CredentialTypes),\n/* harmony export */   Credentials: () => (/* binding */ Credentials),\n/* harmony export */   Ipex: () => (/* binding */ Ipex),\n/* harmony export */   Registries: () => (/* binding */ Registries),\n/* harmony export */   RegistryResult: () => (/* binding */ RegistryResult),\n/* harmony export */   Schemas: () => (/* binding */ Schemas)\n/* harmony export */ });\n/* harmony import */ var _core_eventing_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/eventing.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/eventing.js\");\n/* harmony import */ var _core_vdring_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/vdring.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/vdring.js\");\n/* harmony import */ var _core_core_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/core.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/core.js\");\n/* harmony import */ var _core_saider_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/saider.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/saider.js\");\n/* harmony import */ var _core_serder_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/serder.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/serder.js\");\n/* harmony import */ var _core_siger_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/siger.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/siger.js\");\n/* harmony import */ var _habery_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./habery.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/app/habery.js\");\n/* harmony import */ var _core_utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/utils.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/utils.js\");\n\n\n\n\n\n\n\n\n/** Types of credentials */\nclass CredentialTypes {\n}\nCredentialTypes.issued = 'issued';\nCredentialTypes.received = 'received';\n/**\n * Credentials\n */\nclass Credentials {\n    /**\n     * Credentials\n     * @param {SignifyClient} client\n     */\n    constructor(client) {\n        this.client = client;\n    }\n    /**\n     * List credentials\n     * @async\n     * @param {CredentialFilter} [kargs] Optional parameters to filter the credentials\n     * @returns {Promise<CredentialResult[]>} A promise to the list of credentials\n     */\n    async list(kargs = {}) {\n        const path = `/credentials/query`;\n        const filtr = kargs.filter === undefined ? {} : kargs.filter;\n        const sort = kargs.sort === undefined ? [] : kargs.sort;\n        const limit = kargs.limit === undefined ? 25 : kargs.limit;\n        const skip = kargs.skip === undefined ? 0 : kargs.skip;\n        const data = {\n            filter: filtr,\n            sort: sort,\n            skip: skip,\n            limit: limit,\n        };\n        const method = 'POST';\n        const res = await this.client.fetch(path, method, data, undefined);\n        return await res.json();\n    }\n    async get(said, includeCESR = false) {\n        const path = `/credentials/${said}`;\n        const method = 'GET';\n        const headers = includeCESR\n            ? new Headers({ Accept: 'application/json+cesr' })\n            : new Headers({ Accept: 'application/json' });\n        const res = await this.client.fetch(path, method, null, headers);\n        return includeCESR ? await res.text() : await res.json();\n    }\n    /**\n     * Delete a credential from the DB\n     * @async\n     * @param {string} said - SAID of the credential\n     * @returns {Promise<void>}\n     */\n    async delete(said) {\n        const path = `/credentials/${said}`;\n        const method = 'DELETE';\n        await this.client.fetch(path, method, undefined);\n    }\n    /**\n     * Get the state of a credential\n     * @async\n     * @param {string} ri - management registry identifier\n     * @param {string} said - SAID of the credential\n     * @returns {Promise<CredentialState>} A promise to the credential registry state\n     */\n    async state(ri, said) {\n        const path = `/registries/${ri}/${said}`;\n        const method = 'GET';\n        const res = await this.client.fetch(path, method, null);\n        return res.json();\n    }\n    /**\n     * Creates a credential in the specified registry to be GRANTed with IPEX to the intended recipient\n     */\n    async issue(name, args) {\n        var _a, _b;\n        const hab = await this.client.identifiers().get(name);\n        const estOnly = hab.state.c !== undefined && hab.state.c.includes('EO');\n        if (estOnly) {\n            // TODO implement rotation event\n            throw new Error('Establishment only not implemented');\n        }\n        if (!this.client.manager) {\n            throw new Error('No manager on client');\n        }\n        const keeper = this.client.manager.get(hab);\n        const [, subject] = _core_saider_js__WEBPACK_IMPORTED_MODULE_3__.Saider.saidify(Object.assign(Object.assign({ d: '' }, args.a), { dt: (_a = args.a.dt) !== null && _a !== void 0 ? _a : new Date().toISOString().replace('Z', '000+00:00') }));\n        const [, acdc] = _core_saider_js__WEBPACK_IMPORTED_MODULE_3__.Saider.saidify({\n            v: (0,_core_core_js__WEBPACK_IMPORTED_MODULE_2__.versify)(_core_core_js__WEBPACK_IMPORTED_MODULE_2__.Protocols.ACDC, undefined, _core_core_js__WEBPACK_IMPORTED_MODULE_2__.Serials.JSON, 0),\n            d: '',\n            u: args.u,\n            i: (_b = args.i) !== null && _b !== void 0 ? _b : hab.prefix,\n            ri: args.ri,\n            s: args.s,\n            a: subject,\n            e: args.e,\n            r: args.r,\n        });\n        const [, iss] = _core_saider_js__WEBPACK_IMPORTED_MODULE_3__.Saider.saidify({\n            v: (0,_core_core_js__WEBPACK_IMPORTED_MODULE_2__.versify)(_core_core_js__WEBPACK_IMPORTED_MODULE_2__.Protocols.KERI, undefined, _core_core_js__WEBPACK_IMPORTED_MODULE_2__.Serials.JSON, 0),\n            t: _core_core_js__WEBPACK_IMPORTED_MODULE_2__.Ilks.iss,\n            d: '',\n            i: acdc.d,\n            s: '0',\n            ri: args.ri,\n            dt: subject.dt,\n        });\n        const sn = parseInt(hab.state.s, 16);\n        const anc = (0,_core_eventing_js__WEBPACK_IMPORTED_MODULE_0__.interact)({\n            pre: hab.prefix,\n            sn: sn + 1,\n            data: [\n                {\n                    i: iss.i,\n                    s: iss.s,\n                    d: iss.d,\n                },\n            ],\n            dig: hab.state.d,\n            version: undefined,\n            kind: undefined,\n        });\n        const sigs = await keeper.sign((0,_core_core_js__WEBPACK_IMPORTED_MODULE_2__.b)(anc.raw));\n        const path = `/identifiers/${hab.name}/credentials`;\n        const method = 'POST';\n        const body = {\n            acdc: acdc,\n            iss: iss,\n            ixn: anc.sad,\n            sigs,\n            [keeper.algo]: keeper.params(),\n        };\n        const res = await this.client.fetch(path, method, body);\n        const op = await res.json();\n        return {\n            acdc: new _core_serder_js__WEBPACK_IMPORTED_MODULE_4__.Serder(acdc),\n            iss: new _core_serder_js__WEBPACK_IMPORTED_MODULE_4__.Serder(iss),\n            anc,\n            op,\n        };\n    }\n    /**\n     * Revoke credential\n     * @async\n     * @param {string} name Name or alias of the identifier\n     * @param {string} said SAID of the credential\n     * @param {string} datetime date time of revocation\n     * @returns {Promise<RevokeCredentialResult>} A promise to the long-running operation\n     */\n    async revoke(name, said, datetime) {\n        const hab = await this.client.identifiers().get(name);\n        const pre = hab.prefix;\n        const vs = (0,_core_core_js__WEBPACK_IMPORTED_MODULE_2__.versify)(_core_core_js__WEBPACK_IMPORTED_MODULE_2__.Protocols.KERI, undefined, _core_core_js__WEBPACK_IMPORTED_MODULE_2__.Serials.JSON, 0);\n        const dt = datetime !== null && datetime !== void 0 ? datetime : new Date().toISOString().replace('Z', '000+00:00');\n        const cred = await this.get(said);\n        let registryId;\n        if ('ri' in cred.sad && cred.sad.ri !== undefined) {\n            registryId = cred.sad.ri;\n        }\n        else if ('rd' in cred.sad && cred.sad.rd !== undefined) {\n            registryId = cred.sad.rd;\n        }\n        else {\n            throw new Error('Neither ri nor rd property found in credential');\n        }\n        // Create rev\n        const _rev = {\n            v: vs,\n            t: _core_core_js__WEBPACK_IMPORTED_MODULE_2__.Ilks.rev,\n            d: '',\n            i: said,\n            s: '1',\n            ri: registryId,\n            p: cred.status.d,\n            dt: dt,\n        };\n        const [, rev] = _core_saider_js__WEBPACK_IMPORTED_MODULE_3__.Saider.saidify(_rev);\n        // create ixn\n        let ixn = {};\n        let sigs = [];\n        const state = hab.state;\n        if (state.c !== undefined && state.c.includes('EO')) {\n            var estOnly = true;\n        }\n        else {\n            var estOnly = false;\n        }\n        const sn = parseInt(state.s, 16);\n        const dig = state.d;\n        const data = [\n            {\n                i: rev.i,\n                s: rev.s,\n                d: rev.d,\n            },\n        ];\n        const keeper = this.client.manager.get(hab);\n        if (estOnly) {\n            // TODO implement rotation event\n            throw new Error('Establishment only not implemented');\n        }\n        else {\n            const serder = (0,_core_eventing_js__WEBPACK_IMPORTED_MODULE_0__.interact)({\n                pre: pre,\n                sn: sn + 1,\n                data: data,\n                dig: dig,\n                version: undefined,\n                kind: undefined,\n            });\n            sigs = await keeper.sign((0,_core_core_js__WEBPACK_IMPORTED_MODULE_2__.b)(serder.raw));\n            ixn = serder.sad;\n        }\n        const body = {\n            rev: rev,\n            ixn: ixn,\n            sigs: sigs,\n            [keeper.algo]: keeper.params(),\n        };\n        const path = `/identifiers/${name}/credentials/${said}`;\n        const method = 'DELETE';\n        const res = await this.client.fetch(path, method, body);\n        const op = await res.json();\n        return {\n            rev: new _core_serder_js__WEBPACK_IMPORTED_MODULE_4__.Serder(rev),\n            anc: new _core_serder_js__WEBPACK_IMPORTED_MODULE_4__.Serder(ixn),\n            op,\n        };\n    }\n}\nclass RegistryResult {\n    constructor(regser, serder, sigs, promise) {\n        this._regser = regser;\n        this._serder = serder;\n        this._sigs = sigs;\n        this.promise = promise;\n    }\n    get regser() {\n        return this._regser;\n    }\n    get serder() {\n        return this._serder;\n    }\n    get sigs() {\n        return this._sigs;\n    }\n    async op() {\n        const res = await this.promise;\n        return await res.json();\n    }\n}\n/**\n * Registries\n */\nclass Registries {\n    /**\n     * Registries\n     * @param {SignifyClient} client\n     */\n    constructor(client) {\n        this.client = client;\n    }\n    /**\n     * List registries\n     * @async\n     * @param {string} name Name or alias of the identifier\n     * @returns {Promise<Registry[]>} A promise to the list of registries\n     */\n    async list(name) {\n        const path = `/identifiers/${name}/registries`;\n        const method = 'GET';\n        const res = await this.client.fetch(path, method, null);\n        return await res.json();\n    }\n    /**\n     * Create a registry\n     * @async\n     * @param {CreateRegistryArgs}\n     * @returns {Promise<[any, Serder, any[], object]> } A promise to the long-running operation\n     */\n    async create({ name, registryName, noBackers = true, toad = 0, baks = [], nonce, }) {\n        const hab = await this.client.identifiers().get(name);\n        const pre = hab.prefix;\n        const cnfg = [];\n        if (noBackers) {\n            cnfg.push(_habery_js__WEBPACK_IMPORTED_MODULE_6__.TraitDex.NoBackers);\n        }\n        const state = hab.state;\n        const estOnly = state.c !== undefined && state.c.includes('EO');\n        if (estOnly) {\n            cnfg.push(_habery_js__WEBPACK_IMPORTED_MODULE_6__.TraitDex.EstOnly);\n        }\n        const regser = _core_vdring_js__WEBPACK_IMPORTED_MODULE_1__.vdr.incept({ pre, baks, toad, nonce, cnfg });\n        if (estOnly) {\n            throw new Error('establishment only not implemented');\n        }\n        else {\n            const state = hab.state;\n            const sn = parseInt(state.s, 16);\n            const dig = state.d;\n            const data = [\n                {\n                    i: regser.pre,\n                    s: '0',\n                    d: regser.pre,\n                },\n            ];\n            const serder = (0,_core_eventing_js__WEBPACK_IMPORTED_MODULE_0__.interact)({\n                pre: pre,\n                sn: sn + 1,\n                data: data,\n                dig: dig,\n                version: _core_core_js__WEBPACK_IMPORTED_MODULE_2__.Vrsn_1_0,\n                kind: _core_core_js__WEBPACK_IMPORTED_MODULE_2__.Serials.JSON,\n            });\n            const keeper = this.client.manager.get(hab);\n            const sigs = await keeper.sign((0,_core_core_js__WEBPACK_IMPORTED_MODULE_2__.b)(serder.raw));\n            const res = this.createFromEvents(hab, name, registryName, regser.sad, serder.sad, sigs);\n            return new RegistryResult(regser, serder, sigs, res);\n        }\n    }\n    createFromEvents(hab, name, registryName, vcp, ixn, sigs) {\n        const path = `/identifiers/${name}/registries`;\n        const method = 'POST';\n        const data = {\n            name: registryName,\n            vcp: vcp,\n            ixn: ixn,\n            sigs: sigs,\n        };\n        const keeper = this.client.manager.get(hab);\n        data[keeper.algo] = keeper.params();\n        return this.client.fetch(path, method, data);\n    }\n    /**\n     * Rename a registry\n     * @async\n     * @param {string} name Name or alias of the identifier\n     * @param {string} registryName Current registry name\n     * @param {string} newName New registry name\n     * @returns {Promise<Registry>} A promise to the registry record\n     */\n    async rename(name, registryName, newName) {\n        const path = `/identifiers/${name}/registries/${registryName}`;\n        const method = 'PUT';\n        const data = {\n            name: newName,\n        };\n        const res = await this.client.fetch(path, method, data);\n        return await res.json();\n    }\n}\n/**\n * Schemas\n */\nclass Schemas {\n    /**\n     * Schemas\n     * @param {SignifyClient} client\n     */\n    constructor(client) {\n        this.client = client;\n    }\n    /**\n     * Get a schema\n     * @async\n     * @param {string} said SAID of the schema\n     * @returns {Promise<Schema>} A promise to the schema\n     */\n    async get(said) {\n        const path = `/schema/${said}`;\n        const method = 'GET';\n        const res = await this.client.fetch(path, method, null);\n        return await res.json();\n    }\n    /**\n     * List schemas\n     * @async\n     * @returns {Promise<Schema[]>} A promise to the list of schemas\n     */\n    async list() {\n        const path = `/schema`;\n        const method = 'GET';\n        const res = await this.client.fetch(path, method, null);\n        return await res.json();\n    }\n}\n/**\n * Ipex\n */\nclass Ipex {\n    /**\n     * Schemas\n     * @param {SignifyClient} client\n     */\n    constructor(client) {\n        this.client = client;\n    }\n    /**\n     * Create an IPEX apply EXN message\n     */\n    async apply(args) {\n        var _a, _b;\n        const hab = await this.client.identifiers().get(args.senderName);\n        const data = {\n            m: (_a = args.message) !== null && _a !== void 0 ? _a : '',\n            s: args.schemaSaid,\n            a: (_b = args.attributes) !== null && _b !== void 0 ? _b : {},\n        };\n        return this.client\n            .exchanges()\n            .createExchangeMessage(hab, '/ipex/apply', data, {}, args.recipient, args.datetime, undefined);\n    }\n    async submitApply(name, exn, sigs, recp) {\n        const body = {\n            exn: exn.sad,\n            sigs,\n            rec: recp,\n        };\n        const response = await this.client.fetch(`/identifiers/${name}/ipex/apply`, 'POST', body);\n        return response.json();\n    }\n    /**\n     * Create an IPEX offer EXN message\n     */\n    async offer(args) {\n        var _a;\n        const hab = await this.client.identifiers().get(args.senderName);\n        const data = {\n            m: (_a = args.message) !== null && _a !== void 0 ? _a : '',\n        };\n        return this.client\n            .exchanges()\n            .createExchangeMessage(hab, '/ipex/offer', data, { acdc: [args.acdc, undefined] }, args.recipient, args.datetime, args.applySaid);\n    }\n    async submitOffer(name, exn, sigs, atc, recp) {\n        const body = {\n            exn: exn.sad,\n            sigs,\n            atc,\n            rec: recp,\n        };\n        const response = await this.client.fetch(`/identifiers/${name}/ipex/offer`, 'POST', body);\n        return response.json();\n    }\n    /**\n     * Create an IPEX agree EXN message\n     */\n    async agree(args) {\n        var _a;\n        const hab = await this.client.identifiers().get(args.senderName);\n        const data = {\n            m: (_a = args.message) !== null && _a !== void 0 ? _a : '',\n        };\n        return this.client\n            .exchanges()\n            .createExchangeMessage(hab, '/ipex/agree', data, {}, args.recipient, args.datetime, args.offerSaid);\n    }\n    async submitAgree(name, exn, sigs, recp) {\n        const body = {\n            exn: exn.sad,\n            sigs,\n            rec: recp,\n        };\n        const response = await this.client.fetch(`/identifiers/${name}/ipex/agree`, 'POST', body);\n        return response.json();\n    }\n    /**\n     * Create an IPEX grant EXN message\n     */\n    async grant(args) {\n        var _a;\n        const hab = await this.client.identifiers().get(args.senderName);\n        const data = {\n            m: (_a = args.message) !== null && _a !== void 0 ? _a : '',\n        };\n        let atc = args.ancAttachment;\n        if (atc === undefined) {\n            const keeper = this.client.manager.get(hab);\n            const sigs = await keeper.sign((0,_core_core_js__WEBPACK_IMPORTED_MODULE_2__.b)(args.anc.raw));\n            const sigers = sigs.map((sig) => new _core_siger_js__WEBPACK_IMPORTED_MODULE_5__.Siger({ qb64: sig }));\n            const ims = (0,_core_core_js__WEBPACK_IMPORTED_MODULE_2__.d)((0,_core_eventing_js__WEBPACK_IMPORTED_MODULE_0__.messagize)(args.anc, sigers));\n            atc = ims.substring(args.anc.size);\n        }\n        const acdcAtc = args.acdcAttachment === undefined\n            ? (0,_core_core_js__WEBPACK_IMPORTED_MODULE_2__.d)((0,_core_utils_js__WEBPACK_IMPORTED_MODULE_7__.serializeACDCAttachment)(args.iss))\n            : args.acdcAttachment;\n        const issAtc = args.issAttachment === undefined\n            ? (0,_core_core_js__WEBPACK_IMPORTED_MODULE_2__.d)((0,_core_utils_js__WEBPACK_IMPORTED_MODULE_7__.serializeIssExnAttachment)(args.anc))\n            : args.issAttachment;\n        const embeds = {\n            acdc: [args.acdc, acdcAtc],\n            iss: [args.iss, issAtc],\n            anc: [args.anc, atc],\n        };\n        return this.client\n            .exchanges()\n            .createExchangeMessage(hab, '/ipex/grant', data, embeds, args.recipient, args.datetime, args.agreeSaid);\n    }\n    async submitGrant(name, exn, sigs, atc, recp) {\n        const body = {\n            exn: exn.sad,\n            sigs: sigs,\n            atc: atc,\n            rec: recp,\n        };\n        const response = await this.client.fetch(`/identifiers/${name}/ipex/grant`, 'POST', body);\n        return response.json();\n    }\n    /**\n     * Create an IPEX admit EXN message\n     */\n    async admit(args) {\n        const hab = await this.client.identifiers().get(args.senderName);\n        const data = {\n            m: args.message,\n        };\n        return this.client\n            .exchanges()\n            .createExchangeMessage(hab, '/ipex/admit', data, {}, args.recipient, args.datetime, args.grantSaid);\n    }\n    async submitAdmit(name, exn, sigs, atc, recp) {\n        const body = {\n            exn: exn.sad,\n            sigs: sigs,\n            atc: atc,\n            rec: recp,\n        };\n        const response = await this.client.fetch(`/identifiers/${name}/ipex/admit`, 'POST', body);\n        return response.json();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/app/credentialing.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/app/delegating.js":
/*!*************************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/app/delegating.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Delegations: () => (/* binding */ Delegations)\n/* harmony export */ });\n/* harmony import */ var _aiding_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./aiding.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/app/aiding.js\");\n\nclass Delegations {\n    /**\n     * Delegations\n     * @param {SignifyClient} client\n     */\n    constructor(client) {\n        this.client = client;\n    }\n    /**\n     * Approve the delegation via interaction event\n     * @async\n     * @param {string} name Name or alias of the identifier\n     * @param {any} [data] The anchoring interaction event\n     * @returns {Promise<EventResult>} A promise to the delegated approval result\n     */\n    async approve(name, data) {\n        const { serder, sigs, jsondata } = await this.client\n            .identifiers()\n            .createInteract(name, data);\n        const res = await this.client.fetch('/identifiers/' + name + '/delegation', 'POST', jsondata);\n        return new _aiding_js__WEBPACK_IMPORTED_MODULE_0__.EventResult(serder, sigs, res);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2tlcmkvYXBwL2RlbGVnYXRpbmcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMEM7QUFDbkM7QUFDUDtBQUNBO0FBQ0EsZUFBZSxlQUFlO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsS0FBSztBQUNwQixpQkFBaUIsc0JBQXNCO0FBQ3ZDO0FBQ0E7QUFDQSxnQkFBZ0IseUJBQXlCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixtREFBVztBQUM5QjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RlbGxhci1wcm9jdXJlbWVudC1kYXBwLy4vbm9kZV9tb2R1bGVzL3NpZ25pZnktdHMvZGlzdC9rZXJpL2FwcC9kZWxlZ2F0aW5nLmpzP2E3MGYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRSZXN1bHQgfSBmcm9tIFwiLi9haWRpbmcuanNcIjtcbmV4cG9ydCBjbGFzcyBEZWxlZ2F0aW9ucyB7XG4gICAgLyoqXG4gICAgICogRGVsZWdhdGlvbnNcbiAgICAgKiBAcGFyYW0ge1NpZ25pZnlDbGllbnR9IGNsaWVudFxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGNsaWVudCkge1xuICAgICAgICB0aGlzLmNsaWVudCA9IGNsaWVudDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQXBwcm92ZSB0aGUgZGVsZWdhdGlvbiB2aWEgaW50ZXJhY3Rpb24gZXZlbnRcbiAgICAgKiBAYXN5bmNcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gbmFtZSBOYW1lIG9yIGFsaWFzIG9mIHRoZSBpZGVudGlmaWVyXG4gICAgICogQHBhcmFtIHthbnl9IFtkYXRhXSBUaGUgYW5jaG9yaW5nIGludGVyYWN0aW9uIGV2ZW50XG4gICAgICogQHJldHVybnMge1Byb21pc2U8RXZlbnRSZXN1bHQ+fSBBIHByb21pc2UgdG8gdGhlIGRlbGVnYXRlZCBhcHByb3ZhbCByZXN1bHRcbiAgICAgKi9cbiAgICBhc3luYyBhcHByb3ZlKG5hbWUsIGRhdGEpIHtcbiAgICAgICAgY29uc3QgeyBzZXJkZXIsIHNpZ3MsIGpzb25kYXRhIH0gPSBhd2FpdCB0aGlzLmNsaWVudFxuICAgICAgICAgICAgLmlkZW50aWZpZXJzKClcbiAgICAgICAgICAgIC5jcmVhdGVJbnRlcmFjdChuYW1lLCBkYXRhKTtcbiAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgdGhpcy5jbGllbnQuZmV0Y2goJy9pZGVudGlmaWVycy8nICsgbmFtZSArICcvZGVsZWdhdGlvbicsICdQT1NUJywganNvbmRhdGEpO1xuICAgICAgICByZXR1cm4gbmV3IEV2ZW50UmVzdWx0KHNlcmRlciwgc2lncywgcmVzKTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/app/delegating.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/app/escrowing.js":
/*!************************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/app/escrowing.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Escrows: () => (/* binding */ Escrows)\n/* harmony export */ });\n/**\n * Escrows\n */\nclass Escrows {\n    /**\n     * Escrows\n     * @param {SignifyClient} client\n     */\n    constructor(client) {\n        this.client = client;\n    }\n    /**\n     * List replay messages\n     * @async\n     * @param {string} [route] Optional route in the replay message\n     * @returns {Promise<any>} A promise to the list of replay messages\n     */\n    async listReply(route) {\n        const params = new URLSearchParams();\n        if (route !== undefined) {\n            params.append('route', route);\n        }\n        const path = `/escrows/rpy` + '?' + params.toString();\n        const method = 'GET';\n        const res = await this.client.fetch(path, method, null);\n        return await res.json();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2tlcmkvYXBwL2VzY3Jvd2luZy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsZUFBZSxlQUFlO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCLGlCQUFpQixjQUFjO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N0ZWxsYXItcHJvY3VyZW1lbnQtZGFwcC8uL25vZGVfbW9kdWxlcy9zaWduaWZ5LXRzL2Rpc3Qva2VyaS9hcHAvZXNjcm93aW5nLmpzP2RhMGUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFc2Nyb3dzXG4gKi9cbmV4cG9ydCBjbGFzcyBFc2Nyb3dzIHtcbiAgICAvKipcbiAgICAgKiBFc2Nyb3dzXG4gICAgICogQHBhcmFtIHtTaWduaWZ5Q2xpZW50fSBjbGllbnRcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihjbGllbnQpIHtcbiAgICAgICAgdGhpcy5jbGllbnQgPSBjbGllbnQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIExpc3QgcmVwbGF5IG1lc3NhZ2VzXG4gICAgICogQGFzeW5jXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IFtyb3V0ZV0gT3B0aW9uYWwgcm91dGUgaW4gdGhlIHJlcGxheSBtZXNzYWdlXG4gICAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn0gQSBwcm9taXNlIHRvIHRoZSBsaXN0IG9mIHJlcGxheSBtZXNzYWdlc1xuICAgICAqL1xuICAgIGFzeW5jIGxpc3RSZXBseShyb3V0ZSkge1xuICAgICAgICBjb25zdCBwYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKCk7XG4gICAgICAgIGlmIChyb3V0ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBwYXJhbXMuYXBwZW5kKCdyb3V0ZScsIHJvdXRlKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBwYXRoID0gYC9lc2Nyb3dzL3JweWAgKyAnPycgKyBwYXJhbXMudG9TdHJpbmcoKTtcbiAgICAgICAgY29uc3QgbWV0aG9kID0gJ0dFVCc7XG4gICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IHRoaXMuY2xpZW50LmZldGNoKHBhdGgsIG1ldGhvZCwgbnVsbCk7XG4gICAgICAgIHJldHVybiBhd2FpdCByZXMuanNvbigpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/app/escrowing.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/app/exchanging.js":
/*!*************************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/app/exchanging.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Exchanges: () => (/* binding */ Exchanges),\n/* harmony export */   exchange: () => (/* binding */ exchange)\n/* harmony export */ });\n/* harmony import */ var _core_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/core.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/core.js\");\n/* harmony import */ var _core_serder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/serder.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/serder.js\");\n/* harmony import */ var _core_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/utils.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/utils.js\");\n/* harmony import */ var _core_pather_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/pather.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/pather.js\");\n/* harmony import */ var _core_counter_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/counter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/counter.js\");\n/* harmony import */ var _core_saider_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/saider.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/saider.js\");\n\n\n\n\n\n\n/**\n * Exchanges\n */\nclass Exchanges {\n    /**\n     * Exchanges\n     * @param {SignifyClient} client\n     */\n    constructor(client) {\n        this.client = client;\n    }\n    /**\n     * Create exn message\n     * @async\n     * @returns {Promise<any>} A promise to the list of replay messages\n     * @param sender\n     * @param route\n     * @param payload\n     * @param embeds\n     * @param recipient\n     * @param datetime\n     * @param dig\n     */\n    async createExchangeMessage(sender, route, payload, embeds, recipient, datetime, dig) {\n        const keeper = this.client.manager.get(sender);\n        const [exn, end] = exchange(route, payload, sender['prefix'], recipient, datetime, dig, undefined, embeds);\n        const sigs = await keeper.sign((0,_core_core_js__WEBPACK_IMPORTED_MODULE_0__.b)(exn.raw));\n        return [exn, sigs, (0,_core_core_js__WEBPACK_IMPORTED_MODULE_0__.d)(end)];\n    }\n    /**\n     * Send exn messages to list of recipients\n     * @async\n     * @returns {Promise<any>} A promise to the list of replay messages\n     * @param name\n     * @param topic\n     * @param sender\n     * @param route\n     * @param payload\n     * @param embeds\n     * @param recipients\n     */\n    async send(name, topic, sender, route, payload, embeds, recipients) {\n        for (const recipient of recipients) {\n            const [exn, sigs, atc] = await this.createExchangeMessage(sender, route, payload, embeds, recipient);\n            return await this.sendFromEvents(name, topic, exn, sigs, atc, recipients);\n        }\n    }\n    /**\n     * Send exn messaget to list of recipients\n     * @async\n     * @returns {Promise<any>} A promise to the list of replay messages\n     * @param name\n     * @param topic\n     * @param exn\n     * @param sigs\n     * @param atc\n     * @param recipients\n     */\n    async sendFromEvents(name, topic, exn, sigs, atc, recipients) {\n        const path = `/identifiers/${name}/exchanges`;\n        const method = 'POST';\n        const data = {\n            tpc: topic,\n            exn: exn.sad,\n            sigs: sigs,\n            atc: atc,\n            rec: recipients,\n        };\n        const res = await this.client.fetch(path, method, data);\n        return await res.json();\n    }\n    /**\n     * Get exn message by said\n     * @async\n     * @returns A promise to the exn message\n     * @param said The said of the exn message\n     */\n    async get(said) {\n        const path = `/exchanges/${said}`;\n        const method = 'GET';\n        const res = await this.client.fetch(path, method, null);\n        return await res.json();\n    }\n}\nfunction exchange(route, payload, sender, recipient, date, dig, modifiers, embeds) {\n    const vs = (0,_core_core_js__WEBPACK_IMPORTED_MODULE_0__.versify)(_core_core_js__WEBPACK_IMPORTED_MODULE_0__.Protocols.KERI, undefined, _core_core_js__WEBPACK_IMPORTED_MODULE_0__.Serials.JSON, 0);\n    const ilk = _core_core_js__WEBPACK_IMPORTED_MODULE_0__.Ilks.exn;\n    const dt = date !== undefined\n        ? date\n        : (0,_core_utils_js__WEBPACK_IMPORTED_MODULE_2__.nowUTC)().toISOString().replace('Z', '000+00:00');\n    const p = dig !== undefined ? dig : '';\n    const q = modifiers !== undefined ? modifiers : {};\n    const ems = embeds != undefined ? embeds : {};\n    let e = {};\n    let end = '';\n    Object.entries(ems).forEach(([key, value]) => {\n        const serder = value[0];\n        const atc = value[1];\n        e[key] = serder.sad;\n        if (atc == undefined) {\n            return;\n        }\n        let pathed = '';\n        const pather = new _core_pather_js__WEBPACK_IMPORTED_MODULE_3__.Pather({}, undefined, ['e', key]);\n        pathed += pather.qb64;\n        pathed += atc;\n        const counter = new _core_counter_js__WEBPACK_IMPORTED_MODULE_4__.Counter({\n            code: _core_counter_js__WEBPACK_IMPORTED_MODULE_4__.CtrDex.PathedMaterialQuadlets,\n            count: Math.floor(pathed.length / 4),\n        });\n        end += counter.qb64;\n        end += pathed;\n    });\n    if (Object.keys(e).length > 0) {\n        e['d'] = '';\n        [, e] = _core_saider_js__WEBPACK_IMPORTED_MODULE_5__.Saider.saidify(e);\n    }\n    const attrs = {};\n    attrs['i'] = recipient;\n    const a = Object.assign(Object.assign({}, attrs), payload);\n    const _sad = {\n        v: vs,\n        t: ilk,\n        d: '',\n        i: sender,\n        rp: recipient,\n        p: p,\n        dt: dt,\n        r: route,\n        q: q,\n        a: a,\n        e: e,\n    };\n    const [, sad] = _core_saider_js__WEBPACK_IMPORTED_MODULE_5__.Saider.saidify(_sad);\n    const exn = new _core_serder_js__WEBPACK_IMPORTED_MODULE_1__.Serder(sad);\n    return [exn, (0,_core_core_js__WEBPACK_IMPORTED_MODULE_0__.b)(end)];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2tlcmkvYXBwL2V4Y2hhbmdpbmcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBMEU7QUFDL0I7QUFDRDtBQUNDO0FBQ1U7QUFDVjtBQUMzQztBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxlQUFlLGVBQWU7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsY0FBYztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLGdEQUFDO0FBQ3hDLDJCQUEyQixnREFBQztBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixjQUFjO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsY0FBYztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLEtBQUs7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLEtBQUs7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsZUFBZSxzREFBTyxDQUFDLG9EQUFTLGtCQUFrQixrREFBTztBQUN6RCxnQkFBZ0IsK0NBQUk7QUFDcEI7QUFDQTtBQUNBLFVBQVUsc0RBQU07QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsbURBQU0sR0FBRztBQUNwQztBQUNBO0FBQ0EsNEJBQTRCLHFEQUFPO0FBQ25DLGtCQUFrQixvREFBTTtBQUN4QjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxnQkFBZ0IsbURBQU07QUFDdEI7QUFDQTtBQUNBO0FBQ0EsNENBQTRDO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLG1EQUFNO0FBQzFCLG9CQUFvQixtREFBTTtBQUMxQixpQkFBaUIsZ0RBQUM7QUFDbEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdGVsbGFyLXByb2N1cmVtZW50LWRhcHAvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2tlcmkvYXBwL2V4Y2hhbmdpbmcuanM/OWE4NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBiLCBkLCBQcm90b2NvbHMsIElsa3MsIFNlcmlhbHMsIHZlcnNpZnkgfSBmcm9tIFwiLi4vY29yZS9jb3JlLmpzXCI7XG5pbXBvcnQgeyBTZXJkZXIgfSBmcm9tIFwiLi4vY29yZS9zZXJkZXIuanNcIjtcbmltcG9ydCB7IG5vd1VUQyB9IGZyb20gXCIuLi9jb3JlL3V0aWxzLmpzXCI7XG5pbXBvcnQgeyBQYXRoZXIgfSBmcm9tIFwiLi4vY29yZS9wYXRoZXIuanNcIjtcbmltcG9ydCB7IENvdW50ZXIsIEN0ckRleCB9IGZyb20gXCIuLi9jb3JlL2NvdW50ZXIuanNcIjtcbmltcG9ydCB7IFNhaWRlciB9IGZyb20gXCIuLi9jb3JlL3NhaWRlci5qc1wiO1xuLyoqXG4gKiBFeGNoYW5nZXNcbiAqL1xuZXhwb3J0IGNsYXNzIEV4Y2hhbmdlcyB7XG4gICAgLyoqXG4gICAgICogRXhjaGFuZ2VzXG4gICAgICogQHBhcmFtIHtTaWduaWZ5Q2xpZW50fSBjbGllbnRcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihjbGllbnQpIHtcbiAgICAgICAgdGhpcy5jbGllbnQgPSBjbGllbnQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBleG4gbWVzc2FnZVxuICAgICAqIEBhc3luY1xuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59IEEgcHJvbWlzZSB0byB0aGUgbGlzdCBvZiByZXBsYXkgbWVzc2FnZXNcbiAgICAgKiBAcGFyYW0gc2VuZGVyXG4gICAgICogQHBhcmFtIHJvdXRlXG4gICAgICogQHBhcmFtIHBheWxvYWRcbiAgICAgKiBAcGFyYW0gZW1iZWRzXG4gICAgICogQHBhcmFtIHJlY2lwaWVudFxuICAgICAqIEBwYXJhbSBkYXRldGltZVxuICAgICAqIEBwYXJhbSBkaWdcbiAgICAgKi9cbiAgICBhc3luYyBjcmVhdGVFeGNoYW5nZU1lc3NhZ2Uoc2VuZGVyLCByb3V0ZSwgcGF5bG9hZCwgZW1iZWRzLCByZWNpcGllbnQsIGRhdGV0aW1lLCBkaWcpIHtcbiAgICAgICAgY29uc3Qga2VlcGVyID0gdGhpcy5jbGllbnQubWFuYWdlci5nZXQoc2VuZGVyKTtcbiAgICAgICAgY29uc3QgW2V4biwgZW5kXSA9IGV4Y2hhbmdlKHJvdXRlLCBwYXlsb2FkLCBzZW5kZXJbJ3ByZWZpeCddLCByZWNpcGllbnQsIGRhdGV0aW1lLCBkaWcsIHVuZGVmaW5lZCwgZW1iZWRzKTtcbiAgICAgICAgY29uc3Qgc2lncyA9IGF3YWl0IGtlZXBlci5zaWduKGIoZXhuLnJhdykpO1xuICAgICAgICByZXR1cm4gW2V4biwgc2lncywgZChlbmQpXTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2VuZCBleG4gbWVzc2FnZXMgdG8gbGlzdCBvZiByZWNpcGllbnRzXG4gICAgICogQGFzeW5jXG4gICAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn0gQSBwcm9taXNlIHRvIHRoZSBsaXN0IG9mIHJlcGxheSBtZXNzYWdlc1xuICAgICAqIEBwYXJhbSBuYW1lXG4gICAgICogQHBhcmFtIHRvcGljXG4gICAgICogQHBhcmFtIHNlbmRlclxuICAgICAqIEBwYXJhbSByb3V0ZVxuICAgICAqIEBwYXJhbSBwYXlsb2FkXG4gICAgICogQHBhcmFtIGVtYmVkc1xuICAgICAqIEBwYXJhbSByZWNpcGllbnRzXG4gICAgICovXG4gICAgYXN5bmMgc2VuZChuYW1lLCB0b3BpYywgc2VuZGVyLCByb3V0ZSwgcGF5bG9hZCwgZW1iZWRzLCByZWNpcGllbnRzKSB7XG4gICAgICAgIGZvciAoY29uc3QgcmVjaXBpZW50IG9mIHJlY2lwaWVudHMpIHtcbiAgICAgICAgICAgIGNvbnN0IFtleG4sIHNpZ3MsIGF0Y10gPSBhd2FpdCB0aGlzLmNyZWF0ZUV4Y2hhbmdlTWVzc2FnZShzZW5kZXIsIHJvdXRlLCBwYXlsb2FkLCBlbWJlZHMsIHJlY2lwaWVudCk7XG4gICAgICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5zZW5kRnJvbUV2ZW50cyhuYW1lLCB0b3BpYywgZXhuLCBzaWdzLCBhdGMsIHJlY2lwaWVudHMpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNlbmQgZXhuIG1lc3NhZ2V0IHRvIGxpc3Qgb2YgcmVjaXBpZW50c1xuICAgICAqIEBhc3luY1xuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59IEEgcHJvbWlzZSB0byB0aGUgbGlzdCBvZiByZXBsYXkgbWVzc2FnZXNcbiAgICAgKiBAcGFyYW0gbmFtZVxuICAgICAqIEBwYXJhbSB0b3BpY1xuICAgICAqIEBwYXJhbSBleG5cbiAgICAgKiBAcGFyYW0gc2lnc1xuICAgICAqIEBwYXJhbSBhdGNcbiAgICAgKiBAcGFyYW0gcmVjaXBpZW50c1xuICAgICAqL1xuICAgIGFzeW5jIHNlbmRGcm9tRXZlbnRzKG5hbWUsIHRvcGljLCBleG4sIHNpZ3MsIGF0YywgcmVjaXBpZW50cykge1xuICAgICAgICBjb25zdCBwYXRoID0gYC9pZGVudGlmaWVycy8ke25hbWV9L2V4Y2hhbmdlc2A7XG4gICAgICAgIGNvbnN0IG1ldGhvZCA9ICdQT1NUJztcbiAgICAgICAgY29uc3QgZGF0YSA9IHtcbiAgICAgICAgICAgIHRwYzogdG9waWMsXG4gICAgICAgICAgICBleG46IGV4bi5zYWQsXG4gICAgICAgICAgICBzaWdzOiBzaWdzLFxuICAgICAgICAgICAgYXRjOiBhdGMsXG4gICAgICAgICAgICByZWM6IHJlY2lwaWVudHMsXG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IHRoaXMuY2xpZW50LmZldGNoKHBhdGgsIG1ldGhvZCwgZGF0YSk7XG4gICAgICAgIHJldHVybiBhd2FpdCByZXMuanNvbigpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgZXhuIG1lc3NhZ2UgYnkgc2FpZFxuICAgICAqIEBhc3luY1xuICAgICAqIEByZXR1cm5zIEEgcHJvbWlzZSB0byB0aGUgZXhuIG1lc3NhZ2VcbiAgICAgKiBAcGFyYW0gc2FpZCBUaGUgc2FpZCBvZiB0aGUgZXhuIG1lc3NhZ2VcbiAgICAgKi9cbiAgICBhc3luYyBnZXQoc2FpZCkge1xuICAgICAgICBjb25zdCBwYXRoID0gYC9leGNoYW5nZXMvJHtzYWlkfWA7XG4gICAgICAgIGNvbnN0IG1ldGhvZCA9ICdHRVQnO1xuICAgICAgICBjb25zdCByZXMgPSBhd2FpdCB0aGlzLmNsaWVudC5mZXRjaChwYXRoLCBtZXRob2QsIG51bGwpO1xuICAgICAgICByZXR1cm4gYXdhaXQgcmVzLmpzb24oKTtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gZXhjaGFuZ2Uocm91dGUsIHBheWxvYWQsIHNlbmRlciwgcmVjaXBpZW50LCBkYXRlLCBkaWcsIG1vZGlmaWVycywgZW1iZWRzKSB7XG4gICAgY29uc3QgdnMgPSB2ZXJzaWZ5KFByb3RvY29scy5LRVJJLCB1bmRlZmluZWQsIFNlcmlhbHMuSlNPTiwgMCk7XG4gICAgY29uc3QgaWxrID0gSWxrcy5leG47XG4gICAgY29uc3QgZHQgPSBkYXRlICE9PSB1bmRlZmluZWRcbiAgICAgICAgPyBkYXRlXG4gICAgICAgIDogbm93VVRDKCkudG9JU09TdHJpbmcoKS5yZXBsYWNlKCdaJywgJzAwMCswMDowMCcpO1xuICAgIGNvbnN0IHAgPSBkaWcgIT09IHVuZGVmaW5lZCA/IGRpZyA6ICcnO1xuICAgIGNvbnN0IHEgPSBtb2RpZmllcnMgIT09IHVuZGVmaW5lZCA/IG1vZGlmaWVycyA6IHt9O1xuICAgIGNvbnN0IGVtcyA9IGVtYmVkcyAhPSB1bmRlZmluZWQgPyBlbWJlZHMgOiB7fTtcbiAgICBsZXQgZSA9IHt9O1xuICAgIGxldCBlbmQgPSAnJztcbiAgICBPYmplY3QuZW50cmllcyhlbXMpLmZvckVhY2goKFtrZXksIHZhbHVlXSkgPT4ge1xuICAgICAgICBjb25zdCBzZXJkZXIgPSB2YWx1ZVswXTtcbiAgICAgICAgY29uc3QgYXRjID0gdmFsdWVbMV07XG4gICAgICAgIGVba2V5XSA9IHNlcmRlci5zYWQ7XG4gICAgICAgIGlmIChhdGMgPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHBhdGhlZCA9ICcnO1xuICAgICAgICBjb25zdCBwYXRoZXIgPSBuZXcgUGF0aGVyKHt9LCB1bmRlZmluZWQsIFsnZScsIGtleV0pO1xuICAgICAgICBwYXRoZWQgKz0gcGF0aGVyLnFiNjQ7XG4gICAgICAgIHBhdGhlZCArPSBhdGM7XG4gICAgICAgIGNvbnN0IGNvdW50ZXIgPSBuZXcgQ291bnRlcih7XG4gICAgICAgICAgICBjb2RlOiBDdHJEZXguUGF0aGVkTWF0ZXJpYWxRdWFkbGV0cyxcbiAgICAgICAgICAgIGNvdW50OiBNYXRoLmZsb29yKHBhdGhlZC5sZW5ndGggLyA0KSxcbiAgICAgICAgfSk7XG4gICAgICAgIGVuZCArPSBjb3VudGVyLnFiNjQ7XG4gICAgICAgIGVuZCArPSBwYXRoZWQ7XG4gICAgfSk7XG4gICAgaWYgKE9iamVjdC5rZXlzKGUpLmxlbmd0aCA+IDApIHtcbiAgICAgICAgZVsnZCddID0gJyc7XG4gICAgICAgIFssIGVdID0gU2FpZGVyLnNhaWRpZnkoZSk7XG4gICAgfVxuICAgIGNvbnN0IGF0dHJzID0ge307XG4gICAgYXR0cnNbJ2knXSA9IHJlY2lwaWVudDtcbiAgICBjb25zdCBhID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBhdHRycyksIHBheWxvYWQpO1xuICAgIGNvbnN0IF9zYWQgPSB7XG4gICAgICAgIHY6IHZzLFxuICAgICAgICB0OiBpbGssXG4gICAgICAgIGQ6ICcnLFxuICAgICAgICBpOiBzZW5kZXIsXG4gICAgICAgIHJwOiByZWNpcGllbnQsXG4gICAgICAgIHA6IHAsXG4gICAgICAgIGR0OiBkdCxcbiAgICAgICAgcjogcm91dGUsXG4gICAgICAgIHE6IHEsXG4gICAgICAgIGE6IGEsXG4gICAgICAgIGU6IGUsXG4gICAgfTtcbiAgICBjb25zdCBbLCBzYWRdID0gU2FpZGVyLnNhaWRpZnkoX3NhZCk7XG4gICAgY29uc3QgZXhuID0gbmV3IFNlcmRlcihzYWQpO1xuICAgIHJldHVybiBbZXhuLCBiKGVuZCldO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/app/exchanging.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/app/grouping.js":
/*!***********************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/app/grouping.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Groups: () => (/* binding */ Groups)\n/* harmony export */ });\n/**\n * Groups\n */\nclass Groups {\n    /**\n     * Groups\n     * @param {SignifyClient} client\n     */\n    constructor(client) {\n        this.client = client;\n    }\n    /**\n     * Get group request messages\n     * @async\n     * @param {string} [said] SAID of exn message to load\n     * @returns {Promise<any>} A promise to the list of replay messages\n     */\n    async getRequest(said) {\n        const path = `/multisig/request/` + said;\n        const method = 'GET';\n        const res = await this.client.fetch(path, method, null);\n        return await res.json();\n    }\n    /**\n     * Send multisig exn request  messages to other group members\n     * @async\n     * @param {string} [name] human readable name of group AID\n     * @param {Dict<any>} [exn] exn message to send to other members\n     * @param {string[]} [sigs] signature of the participant over the exn\n     * @param {string} [atc] additional attachments from embedded events in exn\n     * @returns {Promise<any>} A promise to the list of replay messages\n     */\n    async sendRequest(name, exn, sigs, atc) {\n        const path = `/identifiers/${name}/multisig/request`;\n        const method = 'POST';\n        const data = {\n            exn: exn,\n            sigs: sigs,\n            atc: atc,\n        };\n        const res = await this.client.fetch(path, method, data);\n        return await res.json();\n    }\n    /**\n     * Join multisig group using rotation event.\n     * This can be used by participants being asked to contribute keys to a rotation event to join an existing group.\n     * @async\n     * @param {string} [name] human readable name of group AID\n     * @param {any} [rot] rotation event\n     * @param {any} [sigs] signatures\n     * @param {string} [gid] prefix\n     * @param {string[]} [smids] array of particpants\n     * @param {string[]} [rmids] array of particpants\n     * @returns {Promise<any>} A promise to the list of replay messages\n     */\n    async join(name, rot, sigs, //string[],\n    gid, smids, rmids) {\n        const path = `/identifiers/${name}/multisig/join`;\n        const method = 'POST';\n        const data = {\n            tpc: 'multisig',\n            rot: rot.sad,\n            sigs: sigs,\n            gid: gid,\n            smids: smids,\n            rmids: rmids,\n        };\n        const res = await this.client.fetch(path, method, data);\n        return await res.json();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2tlcmkvYXBwL2dyb3VwaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxlQUFlLGVBQWU7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkIsaUJBQWlCLGNBQWM7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkIsZUFBZSxXQUFXO0FBQzFCLGVBQWUsVUFBVTtBQUN6QixlQUFlLFFBQVE7QUFDdkIsaUJBQWlCLGNBQWM7QUFDL0I7QUFDQTtBQUNBLHFDQUFxQyxLQUFLO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsS0FBSztBQUNwQixlQUFlLEtBQUs7QUFDcEIsZUFBZSxRQUFRO0FBQ3ZCLGVBQWUsVUFBVTtBQUN6QixlQUFlLFVBQVU7QUFDekIsaUJBQWlCLGNBQWM7QUFDL0I7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLEtBQUs7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdGVsbGFyLXByb2N1cmVtZW50LWRhcHAvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2tlcmkvYXBwL2dyb3VwaW5nLmpzP2ZkNDgiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBHcm91cHNcbiAqL1xuZXhwb3J0IGNsYXNzIEdyb3VwcyB7XG4gICAgLyoqXG4gICAgICogR3JvdXBzXG4gICAgICogQHBhcmFtIHtTaWduaWZ5Q2xpZW50fSBjbGllbnRcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihjbGllbnQpIHtcbiAgICAgICAgdGhpcy5jbGllbnQgPSBjbGllbnQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCBncm91cCByZXF1ZXN0IG1lc3NhZ2VzXG4gICAgICogQGFzeW5jXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IFtzYWlkXSBTQUlEIG9mIGV4biBtZXNzYWdlIHRvIGxvYWRcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fSBBIHByb21pc2UgdG8gdGhlIGxpc3Qgb2YgcmVwbGF5IG1lc3NhZ2VzXG4gICAgICovXG4gICAgYXN5bmMgZ2V0UmVxdWVzdChzYWlkKSB7XG4gICAgICAgIGNvbnN0IHBhdGggPSBgL211bHRpc2lnL3JlcXVlc3QvYCArIHNhaWQ7XG4gICAgICAgIGNvbnN0IG1ldGhvZCA9ICdHRVQnO1xuICAgICAgICBjb25zdCByZXMgPSBhd2FpdCB0aGlzLmNsaWVudC5mZXRjaChwYXRoLCBtZXRob2QsIG51bGwpO1xuICAgICAgICByZXR1cm4gYXdhaXQgcmVzLmpzb24oKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2VuZCBtdWx0aXNpZyBleG4gcmVxdWVzdCAgbWVzc2FnZXMgdG8gb3RoZXIgZ3JvdXAgbWVtYmVyc1xuICAgICAqIEBhc3luY1xuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBbbmFtZV0gaHVtYW4gcmVhZGFibGUgbmFtZSBvZiBncm91cCBBSURcbiAgICAgKiBAcGFyYW0ge0RpY3Q8YW55Pn0gW2V4bl0gZXhuIG1lc3NhZ2UgdG8gc2VuZCB0byBvdGhlciBtZW1iZXJzXG4gICAgICogQHBhcmFtIHtzdHJpbmdbXX0gW3NpZ3NdIHNpZ25hdHVyZSBvZiB0aGUgcGFydGljaXBhbnQgb3ZlciB0aGUgZXhuXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IFthdGNdIGFkZGl0aW9uYWwgYXR0YWNobWVudHMgZnJvbSBlbWJlZGRlZCBldmVudHMgaW4gZXhuXG4gICAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn0gQSBwcm9taXNlIHRvIHRoZSBsaXN0IG9mIHJlcGxheSBtZXNzYWdlc1xuICAgICAqL1xuICAgIGFzeW5jIHNlbmRSZXF1ZXN0KG5hbWUsIGV4biwgc2lncywgYXRjKSB7XG4gICAgICAgIGNvbnN0IHBhdGggPSBgL2lkZW50aWZpZXJzLyR7bmFtZX0vbXVsdGlzaWcvcmVxdWVzdGA7XG4gICAgICAgIGNvbnN0IG1ldGhvZCA9ICdQT1NUJztcbiAgICAgICAgY29uc3QgZGF0YSA9IHtcbiAgICAgICAgICAgIGV4bjogZXhuLFxuICAgICAgICAgICAgc2lnczogc2lncyxcbiAgICAgICAgICAgIGF0YzogYXRjLFxuICAgICAgICB9O1xuICAgICAgICBjb25zdCByZXMgPSBhd2FpdCB0aGlzLmNsaWVudC5mZXRjaChwYXRoLCBtZXRob2QsIGRhdGEpO1xuICAgICAgICByZXR1cm4gYXdhaXQgcmVzLmpzb24oKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogSm9pbiBtdWx0aXNpZyBncm91cCB1c2luZyByb3RhdGlvbiBldmVudC5cbiAgICAgKiBUaGlzIGNhbiBiZSB1c2VkIGJ5IHBhcnRpY2lwYW50cyBiZWluZyBhc2tlZCB0byBjb250cmlidXRlIGtleXMgdG8gYSByb3RhdGlvbiBldmVudCB0byBqb2luIGFuIGV4aXN0aW5nIGdyb3VwLlxuICAgICAqIEBhc3luY1xuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBbbmFtZV0gaHVtYW4gcmVhZGFibGUgbmFtZSBvZiBncm91cCBBSURcbiAgICAgKiBAcGFyYW0ge2FueX0gW3JvdF0gcm90YXRpb24gZXZlbnRcbiAgICAgKiBAcGFyYW0ge2FueX0gW3NpZ3NdIHNpZ25hdHVyZXNcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gW2dpZF0gcHJlZml4XG4gICAgICogQHBhcmFtIHtzdHJpbmdbXX0gW3NtaWRzXSBhcnJheSBvZiBwYXJ0aWNwYW50c1xuICAgICAqIEBwYXJhbSB7c3RyaW5nW119IFtybWlkc10gYXJyYXkgb2YgcGFydGljcGFudHNcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fSBBIHByb21pc2UgdG8gdGhlIGxpc3Qgb2YgcmVwbGF5IG1lc3NhZ2VzXG4gICAgICovXG4gICAgYXN5bmMgam9pbihuYW1lLCByb3QsIHNpZ3MsIC8vc3RyaW5nW10sXG4gICAgZ2lkLCBzbWlkcywgcm1pZHMpIHtcbiAgICAgICAgY29uc3QgcGF0aCA9IGAvaWRlbnRpZmllcnMvJHtuYW1lfS9tdWx0aXNpZy9qb2luYDtcbiAgICAgICAgY29uc3QgbWV0aG9kID0gJ1BPU1QnO1xuICAgICAgICBjb25zdCBkYXRhID0ge1xuICAgICAgICAgICAgdHBjOiAnbXVsdGlzaWcnLFxuICAgICAgICAgICAgcm90OiByb3Quc2FkLFxuICAgICAgICAgICAgc2lnczogc2lncyxcbiAgICAgICAgICAgIGdpZDogZ2lkLFxuICAgICAgICAgICAgc21pZHM6IHNtaWRzLFxuICAgICAgICAgICAgcm1pZHM6IHJtaWRzLFxuICAgICAgICB9O1xuICAgICAgICBjb25zdCByZXMgPSBhd2FpdCB0aGlzLmNsaWVudC5mZXRjaChwYXRoLCBtZXRob2QsIGRhdGEpO1xuICAgICAgICByZXR1cm4gYXdhaXQgcmVzLmpzb24oKTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/app/grouping.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/app/habery.js":
/*!*********************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/app/habery.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Hab: () => (/* binding */ Hab),\n/* harmony export */   Habery: () => (/* binding */ Habery),\n/* harmony export */   TraitCodex: () => (/* binding */ TraitCodex),\n/* harmony export */   TraitDex: () => (/* binding */ TraitDex)\n/* harmony export */ });\n/* harmony import */ var _core_manager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/manager.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/manager.js\");\n/* harmony import */ var _core_matter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/matter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/matter.js\");\n/* harmony import */ var _core_salter_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/salter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/salter.js\");\n/* harmony import */ var _core_eventing_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/eventing.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/eventing.js\");\n\n\n\n\nclass TraitCodex {\n    constructor() {\n        this.EstOnly = 'EO'; // Only allow establishment events\n        this.DoNotDelegate = 'DND'; // Dot not allow delegated identifiers\n        this.NoBackers = 'NB'; // Do not allow backers\n    }\n}\nconst TraitDex = new TraitCodex();\nclass Hab {\n    constructor(name, icp) {\n        this.name = name;\n        this.serder = icp;\n    }\n    get pre() {\n        return this.serder.sad['i'];\n    }\n}\nclass Habery {\n    constructor({ name, passcode, seed, aeid, pidx, salt }) {\n        this._habs = new Map();\n        this._name = name;\n        if (passcode != undefined && seed == undefined) {\n            if (passcode.length < 21) {\n                throw new Error('Bran (passcode seed material) too short.');\n            }\n            const bran = _core_matter_js__WEBPACK_IMPORTED_MODULE_1__.MtrDex.Salt_128 + 'A' + passcode.substring(0, 21); // qb64 salt for seed\n            const signer = new _core_salter_js__WEBPACK_IMPORTED_MODULE_2__.Salter({ qb64: bran }).signer(_core_matter_js__WEBPACK_IMPORTED_MODULE_1__.MtrDex.Ed25519_Seed, false);\n            seed = signer.qb64;\n            if (aeid == undefined) {\n                aeid = signer.verfer.qb64; // lest it remove encryption\n            }\n        }\n        let algo;\n        const salter = salt != undefined ? new _core_salter_js__WEBPACK_IMPORTED_MODULE_2__.Salter({ qb64: salt }) : undefined;\n        if (salt != undefined) {\n            algo = _core_manager_js__WEBPACK_IMPORTED_MODULE_0__.Algos.salty;\n        }\n        else {\n            algo = _core_manager_js__WEBPACK_IMPORTED_MODULE_0__.Algos.randy;\n        }\n        this._mgr = new _core_manager_js__WEBPACK_IMPORTED_MODULE_0__.Manager({\n            seed: seed,\n            aeid: aeid,\n            pidx: pidx,\n            algo: algo,\n            salter: salter,\n        });\n    }\n    get mgr() {\n        return this._mgr;\n    }\n    get habs() {\n        return Array.from(this._habs.values());\n    }\n    habByName(name) {\n        return this._habs.get(name);\n    }\n    makeHab(name, { code = _core_matter_js__WEBPACK_IMPORTED_MODULE_1__.MtrDex.Blake3_256, transferable = true, isith = undefined, icount = 1, nsith = undefined, ncount = undefined, toad = undefined, wits = undefined, delpre = undefined, estOnly = false, DnD = false, data = undefined, }) {\n        if (nsith == undefined) {\n            nsith = isith;\n        }\n        if (ncount == undefined) {\n            ncount = icount;\n        }\n        if (!transferable) {\n            ncount = 0;\n            nsith = '0';\n            code = _core_matter_js__WEBPACK_IMPORTED_MODULE_1__.MtrDex.Ed25519N;\n        }\n        const [verfers, digers] = this._mgr.incept({\n            icount: icount,\n            ncount: ncount,\n            stem: this.name,\n            transferable: transferable,\n            temp: false,\n        });\n        icount = verfers.length;\n        ncount = digers != undefined ? digers.length : 0;\n        if (isith == undefined) {\n            isith = `${Math.max(1, Math.ceil(icount / 2)).toString(16)}`;\n        }\n        if (nsith == undefined) {\n            nsith = `${Math.max(1, Math.ceil(ncount / 2)).toString(16)}`;\n        }\n        const cnfg = new Array();\n        if (estOnly) {\n            cnfg.push(TraitDex.EstOnly);\n        }\n        if (DnD) {\n            cnfg.push(TraitDex.DoNotDelegate);\n        }\n        const keys = Array.from(verfers, (verfer) => verfer.qb64);\n        const ndigs = Array.from(digers, (diger) => diger.qb64);\n        const icp = (0,_core_eventing_js__WEBPACK_IMPORTED_MODULE_3__.incept)({\n            keys,\n            isith,\n            ndigs,\n            nsith,\n            toad,\n            wits,\n            cnfg,\n            data,\n            code,\n            delpre,\n        });\n        const hab = new Hab(name, icp);\n        this._habs.set(name, hab);\n        return hab;\n    }\n    get name() {\n        return this._name;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2tlcmkvYXBwL2hhYmVyeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFvRDtBQUNUO0FBQ0E7QUFDRTtBQUN0QztBQUNQO0FBQ0EsNkJBQTZCO0FBQzdCLG9DQUFvQztBQUNwQywrQkFBK0I7QUFDL0I7QUFDQTtBQUNPO0FBQ0E7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxrQkFBa0Isd0NBQXdDO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixtREFBTSw2Q0FBNkM7QUFDNUUsK0JBQStCLG1EQUFNLEdBQUcsWUFBWSxTQUFTLG1EQUFNO0FBQ25FO0FBQ0E7QUFDQSwyQ0FBMkM7QUFDM0M7QUFDQTtBQUNBO0FBQ0EsK0NBQStDLG1EQUFNLEdBQUcsWUFBWTtBQUNwRTtBQUNBLG1CQUFtQixtREFBSztBQUN4QjtBQUNBO0FBQ0EsbUJBQW1CLG1EQUFLO0FBQ3hCO0FBQ0Esd0JBQXdCLHFEQUFPO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsT0FBTyxtREFBTSxpTkFBaU47QUFDbFA7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLG1EQUFNO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixnREFBZ0Q7QUFDdkU7QUFDQTtBQUNBLHVCQUF1QixnREFBZ0Q7QUFDdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IseURBQU07QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N0ZWxsYXItcHJvY3VyZW1lbnQtZGFwcC8uL25vZGVfbW9kdWxlcy9zaWduaWZ5LXRzL2Rpc3Qva2VyaS9hcHAvaGFiZXJ5LmpzP2QzNDciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWxnb3MsIE1hbmFnZXIgfSBmcm9tIFwiLi4vY29yZS9tYW5hZ2VyLmpzXCI7XG5pbXBvcnQgeyBNdHJEZXggfSBmcm9tIFwiLi4vY29yZS9tYXR0ZXIuanNcIjtcbmltcG9ydCB7IFNhbHRlciB9IGZyb20gXCIuLi9jb3JlL3NhbHRlci5qc1wiO1xuaW1wb3J0IHsgaW5jZXB0IH0gZnJvbSBcIi4uL2NvcmUvZXZlbnRpbmcuanNcIjtcbmV4cG9ydCBjbGFzcyBUcmFpdENvZGV4IHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5Fc3RPbmx5ID0gJ0VPJzsgLy8gT25seSBhbGxvdyBlc3RhYmxpc2htZW50IGV2ZW50c1xuICAgICAgICB0aGlzLkRvTm90RGVsZWdhdGUgPSAnRE5EJzsgLy8gRG90IG5vdCBhbGxvdyBkZWxlZ2F0ZWQgaWRlbnRpZmllcnNcbiAgICAgICAgdGhpcy5Ob0JhY2tlcnMgPSAnTkInOyAvLyBEbyBub3QgYWxsb3cgYmFja2Vyc1xuICAgIH1cbn1cbmV4cG9ydCBjb25zdCBUcmFpdERleCA9IG5ldyBUcmFpdENvZGV4KCk7XG5leHBvcnQgY2xhc3MgSGFiIHtcbiAgICBjb25zdHJ1Y3RvcihuYW1lLCBpY3ApIHtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5zZXJkZXIgPSBpY3A7XG4gICAgfVxuICAgIGdldCBwcmUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNlcmRlci5zYWRbJ2knXTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgSGFiZXJ5IHtcbiAgICBjb25zdHJ1Y3Rvcih7IG5hbWUsIHBhc3Njb2RlLCBzZWVkLCBhZWlkLCBwaWR4LCBzYWx0IH0pIHtcbiAgICAgICAgdGhpcy5faGFicyA9IG5ldyBNYXAoKTtcbiAgICAgICAgdGhpcy5fbmFtZSA9IG5hbWU7XG4gICAgICAgIGlmIChwYXNzY29kZSAhPSB1bmRlZmluZWQgJiYgc2VlZCA9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGlmIChwYXNzY29kZS5sZW5ndGggPCAyMSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQnJhbiAocGFzc2NvZGUgc2VlZCBtYXRlcmlhbCkgdG9vIHNob3J0LicpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgYnJhbiA9IE10ckRleC5TYWx0XzEyOCArICdBJyArIHBhc3Njb2RlLnN1YnN0cmluZygwLCAyMSk7IC8vIHFiNjQgc2FsdCBmb3Igc2VlZFxuICAgICAgICAgICAgY29uc3Qgc2lnbmVyID0gbmV3IFNhbHRlcih7IHFiNjQ6IGJyYW4gfSkuc2lnbmVyKE10ckRleC5FZDI1NTE5X1NlZWQsIGZhbHNlKTtcbiAgICAgICAgICAgIHNlZWQgPSBzaWduZXIucWI2NDtcbiAgICAgICAgICAgIGlmIChhZWlkID09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIGFlaWQgPSBzaWduZXIudmVyZmVyLnFiNjQ7IC8vIGxlc3QgaXQgcmVtb3ZlIGVuY3J5cHRpb25cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBsZXQgYWxnbztcbiAgICAgICAgY29uc3Qgc2FsdGVyID0gc2FsdCAhPSB1bmRlZmluZWQgPyBuZXcgU2FsdGVyKHsgcWI2NDogc2FsdCB9KSA6IHVuZGVmaW5lZDtcbiAgICAgICAgaWYgKHNhbHQgIT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBhbGdvID0gQWxnb3Muc2FsdHk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBhbGdvID0gQWxnb3MucmFuZHk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fbWdyID0gbmV3IE1hbmFnZXIoe1xuICAgICAgICAgICAgc2VlZDogc2VlZCxcbiAgICAgICAgICAgIGFlaWQ6IGFlaWQsXG4gICAgICAgICAgICBwaWR4OiBwaWR4LFxuICAgICAgICAgICAgYWxnbzogYWxnbyxcbiAgICAgICAgICAgIHNhbHRlcjogc2FsdGVyLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgZ2V0IG1ncigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX21ncjtcbiAgICB9XG4gICAgZ2V0IGhhYnMoKSB7XG4gICAgICAgIHJldHVybiBBcnJheS5mcm9tKHRoaXMuX2hhYnMudmFsdWVzKCkpO1xuICAgIH1cbiAgICBoYWJCeU5hbWUobmFtZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5faGFicy5nZXQobmFtZSk7XG4gICAgfVxuICAgIG1ha2VIYWIobmFtZSwgeyBjb2RlID0gTXRyRGV4LkJsYWtlM18yNTYsIHRyYW5zZmVyYWJsZSA9IHRydWUsIGlzaXRoID0gdW5kZWZpbmVkLCBpY291bnQgPSAxLCBuc2l0aCA9IHVuZGVmaW5lZCwgbmNvdW50ID0gdW5kZWZpbmVkLCB0b2FkID0gdW5kZWZpbmVkLCB3aXRzID0gdW5kZWZpbmVkLCBkZWxwcmUgPSB1bmRlZmluZWQsIGVzdE9ubHkgPSBmYWxzZSwgRG5EID0gZmFsc2UsIGRhdGEgPSB1bmRlZmluZWQsIH0pIHtcbiAgICAgICAgaWYgKG5zaXRoID09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgbnNpdGggPSBpc2l0aDtcbiAgICAgICAgfVxuICAgICAgICBpZiAobmNvdW50ID09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgbmNvdW50ID0gaWNvdW50O1xuICAgICAgICB9XG4gICAgICAgIGlmICghdHJhbnNmZXJhYmxlKSB7XG4gICAgICAgICAgICBuY291bnQgPSAwO1xuICAgICAgICAgICAgbnNpdGggPSAnMCc7XG4gICAgICAgICAgICBjb2RlID0gTXRyRGV4LkVkMjU1MTlOO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IFt2ZXJmZXJzLCBkaWdlcnNdID0gdGhpcy5fbWdyLmluY2VwdCh7XG4gICAgICAgICAgICBpY291bnQ6IGljb3VudCxcbiAgICAgICAgICAgIG5jb3VudDogbmNvdW50LFxuICAgICAgICAgICAgc3RlbTogdGhpcy5uYW1lLFxuICAgICAgICAgICAgdHJhbnNmZXJhYmxlOiB0cmFuc2ZlcmFibGUsXG4gICAgICAgICAgICB0ZW1wOiBmYWxzZSxcbiAgICAgICAgfSk7XG4gICAgICAgIGljb3VudCA9IHZlcmZlcnMubGVuZ3RoO1xuICAgICAgICBuY291bnQgPSBkaWdlcnMgIT0gdW5kZWZpbmVkID8gZGlnZXJzLmxlbmd0aCA6IDA7XG4gICAgICAgIGlmIChpc2l0aCA9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGlzaXRoID0gYCR7TWF0aC5tYXgoMSwgTWF0aC5jZWlsKGljb3VudCAvIDIpKS50b1N0cmluZygxNil9YDtcbiAgICAgICAgfVxuICAgICAgICBpZiAobnNpdGggPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBuc2l0aCA9IGAke01hdGgubWF4KDEsIE1hdGguY2VpbChuY291bnQgLyAyKSkudG9TdHJpbmcoMTYpfWA7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgY25mZyA9IG5ldyBBcnJheSgpO1xuICAgICAgICBpZiAoZXN0T25seSkge1xuICAgICAgICAgICAgY25mZy5wdXNoKFRyYWl0RGV4LkVzdE9ubHkpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChEbkQpIHtcbiAgICAgICAgICAgIGNuZmcucHVzaChUcmFpdERleC5Eb05vdERlbGVnYXRlKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBrZXlzID0gQXJyYXkuZnJvbSh2ZXJmZXJzLCAodmVyZmVyKSA9PiB2ZXJmZXIucWI2NCk7XG4gICAgICAgIGNvbnN0IG5kaWdzID0gQXJyYXkuZnJvbShkaWdlcnMsIChkaWdlcikgPT4gZGlnZXIucWI2NCk7XG4gICAgICAgIGNvbnN0IGljcCA9IGluY2VwdCh7XG4gICAgICAgICAgICBrZXlzLFxuICAgICAgICAgICAgaXNpdGgsXG4gICAgICAgICAgICBuZGlncyxcbiAgICAgICAgICAgIG5zaXRoLFxuICAgICAgICAgICAgdG9hZCxcbiAgICAgICAgICAgIHdpdHMsXG4gICAgICAgICAgICBjbmZnLFxuICAgICAgICAgICAgZGF0YSxcbiAgICAgICAgICAgIGNvZGUsXG4gICAgICAgICAgICBkZWxwcmUsXG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCBoYWIgPSBuZXcgSGFiKG5hbWUsIGljcCk7XG4gICAgICAgIHRoaXMuX2hhYnMuc2V0KG5hbWUsIGhhYik7XG4gICAgICAgIHJldHVybiBoYWI7XG4gICAgfVxuICAgIGdldCBuYW1lKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fbmFtZTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/app/habery.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/app/notifying.js":
/*!************************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/app/notifying.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Notifications: () => (/* binding */ Notifications)\n/* harmony export */ });\n/* harmony import */ var _core_httping_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/httping.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/httping.js\");\n\n/**\n * Notifications\n */\nclass Notifications {\n    /**\n     * Notifications\n     * @param {SignifyClient} client\n     */\n    constructor(client) {\n        this.client = client;\n    }\n    /**\n     * List notifications\n     * @async\n     * @param {number} [start=0] Start index of list of notifications, defaults to 0\n     * @param {number} [end=24] End index of list of notifications, defaults to 24\n     * @returns {Promise<any>} A promise to the list of notifications\n     */\n    async list(start = 0, end = 24) {\n        const extraHeaders = new Headers();\n        extraHeaders.append('Range', `notes=${start}-${end}`);\n        const path = `/notifications`;\n        const method = 'GET';\n        const res = await this.client.fetch(path, method, null, extraHeaders);\n        const cr = res.headers.get('content-range');\n        const range = (0,_core_httping_js__WEBPACK_IMPORTED_MODULE_0__.parseRangeHeaders)(cr, 'notes');\n        const notes = await res.json();\n        return {\n            start: range.start,\n            end: range.end,\n            total: range.total,\n            notes: notes,\n        };\n    }\n    /**\n     * Mark a notification as read\n     * @async\n     * @param {string} said SAID of the notification\n     * @returns {Promise<string>} A promise to the result of the marking\n     */\n    async mark(said) {\n        const path = `/notifications/` + said;\n        const method = 'PUT';\n        const res = await this.client.fetch(path, method, null);\n        return await res.text();\n    }\n    /**\n     * Delete a notification\n     * @async\n     * @param {string} said SAID of the notification\n     * @returns {Promise<void>}\n     */\n    async delete(said) {\n        const path = `/notifications/` + said;\n        const method = 'DELETE';\n        await this.client.fetch(path, method, undefined);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2tlcmkvYXBwL25vdGlmeWluZy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF1RDtBQUN2RDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxlQUFlLGVBQWU7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCLGlCQUFpQixjQUFjO0FBQy9CO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxNQUFNLEdBQUcsSUFBSTtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixtRUFBaUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QixpQkFBaUIsaUJBQWlCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxRQUFRO0FBQ3ZCLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N0ZWxsYXItcHJvY3VyZW1lbnQtZGFwcC8uL25vZGVfbW9kdWxlcy9zaWduaWZ5LXRzL2Rpc3Qva2VyaS9hcHAvbm90aWZ5aW5nLmpzPzQ2YWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGFyc2VSYW5nZUhlYWRlcnMgfSBmcm9tIFwiLi4vY29yZS9odHRwaW5nLmpzXCI7XG4vKipcbiAqIE5vdGlmaWNhdGlvbnNcbiAqL1xuZXhwb3J0IGNsYXNzIE5vdGlmaWNhdGlvbnMge1xuICAgIC8qKlxuICAgICAqIE5vdGlmaWNhdGlvbnNcbiAgICAgKiBAcGFyYW0ge1NpZ25pZnlDbGllbnR9IGNsaWVudFxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGNsaWVudCkge1xuICAgICAgICB0aGlzLmNsaWVudCA9IGNsaWVudDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogTGlzdCBub3RpZmljYXRpb25zXG4gICAgICogQGFzeW5jXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IFtzdGFydD0wXSBTdGFydCBpbmRleCBvZiBsaXN0IG9mIG5vdGlmaWNhdGlvbnMsIGRlZmF1bHRzIHRvIDBcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gW2VuZD0yNF0gRW5kIGluZGV4IG9mIGxpc3Qgb2Ygbm90aWZpY2F0aW9ucywgZGVmYXVsdHMgdG8gMjRcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fSBBIHByb21pc2UgdG8gdGhlIGxpc3Qgb2Ygbm90aWZpY2F0aW9uc1xuICAgICAqL1xuICAgIGFzeW5jIGxpc3Qoc3RhcnQgPSAwLCBlbmQgPSAyNCkge1xuICAgICAgICBjb25zdCBleHRyYUhlYWRlcnMgPSBuZXcgSGVhZGVycygpO1xuICAgICAgICBleHRyYUhlYWRlcnMuYXBwZW5kKCdSYW5nZScsIGBub3Rlcz0ke3N0YXJ0fS0ke2VuZH1gKTtcbiAgICAgICAgY29uc3QgcGF0aCA9IGAvbm90aWZpY2F0aW9uc2A7XG4gICAgICAgIGNvbnN0IG1ldGhvZCA9ICdHRVQnO1xuICAgICAgICBjb25zdCByZXMgPSBhd2FpdCB0aGlzLmNsaWVudC5mZXRjaChwYXRoLCBtZXRob2QsIG51bGwsIGV4dHJhSGVhZGVycyk7XG4gICAgICAgIGNvbnN0IGNyID0gcmVzLmhlYWRlcnMuZ2V0KCdjb250ZW50LXJhbmdlJyk7XG4gICAgICAgIGNvbnN0IHJhbmdlID0gcGFyc2VSYW5nZUhlYWRlcnMoY3IsICdub3RlcycpO1xuICAgICAgICBjb25zdCBub3RlcyA9IGF3YWl0IHJlcy5qc29uKCk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzdGFydDogcmFuZ2Uuc3RhcnQsXG4gICAgICAgICAgICBlbmQ6IHJhbmdlLmVuZCxcbiAgICAgICAgICAgIHRvdGFsOiByYW5nZS50b3RhbCxcbiAgICAgICAgICAgIG5vdGVzOiBub3RlcyxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogTWFyayBhIG5vdGlmaWNhdGlvbiBhcyByZWFkXG4gICAgICogQGFzeW5jXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHNhaWQgU0FJRCBvZiB0aGUgbm90aWZpY2F0aW9uXG4gICAgICogQHJldHVybnMge1Byb21pc2U8c3RyaW5nPn0gQSBwcm9taXNlIHRvIHRoZSByZXN1bHQgb2YgdGhlIG1hcmtpbmdcbiAgICAgKi9cbiAgICBhc3luYyBtYXJrKHNhaWQpIHtcbiAgICAgICAgY29uc3QgcGF0aCA9IGAvbm90aWZpY2F0aW9ucy9gICsgc2FpZDtcbiAgICAgICAgY29uc3QgbWV0aG9kID0gJ1BVVCc7XG4gICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IHRoaXMuY2xpZW50LmZldGNoKHBhdGgsIG1ldGhvZCwgbnVsbCk7XG4gICAgICAgIHJldHVybiBhd2FpdCByZXMudGV4dCgpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZWxldGUgYSBub3RpZmljYXRpb25cbiAgICAgKiBAYXN5bmNcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gc2FpZCBTQUlEIG9mIHRoZSBub3RpZmljYXRpb25cbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTx2b2lkPn1cbiAgICAgKi9cbiAgICBhc3luYyBkZWxldGUoc2FpZCkge1xuICAgICAgICBjb25zdCBwYXRoID0gYC9ub3RpZmljYXRpb25zL2AgKyBzYWlkO1xuICAgICAgICBjb25zdCBtZXRob2QgPSAnREVMRVRFJztcbiAgICAgICAgYXdhaXQgdGhpcy5jbGllbnQuZmV0Y2gocGF0aCwgbWV0aG9kLCB1bmRlZmluZWQpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/app/notifying.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/core/authing.js":
/*!***********************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/core/authing.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Authenticater: () => (/* binding */ Authenticater)\n/* harmony export */ });\n/* harmony import */ var _httping_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./httping.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/httping.js\");\n/* harmony import */ var _end_ending_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../end/ending.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/end/ending.js\");\n\n\nclass Authenticater {\n    constructor(csig, verfer) {\n        this._csig = csig;\n        this._verfer = verfer;\n    }\n    verify(headers, method, path) {\n        const siginput = headers.get(_httping_js__WEBPACK_IMPORTED_MODULE_0__.HEADER_SIG_INPUT);\n        if (siginput == null) {\n            return false;\n        }\n        const signature = headers.get('Signature');\n        if (signature == null) {\n            return false;\n        }\n        let inputs = (0,_httping_js__WEBPACK_IMPORTED_MODULE_0__.desiginput)(siginput);\n        inputs = inputs.filter((input) => input.name == 'signify');\n        if (inputs.length == 0) {\n            return false;\n        }\n        inputs.forEach((input) => {\n            const items = new Array();\n            input.fields.forEach((field) => {\n                if (field.startsWith('@')) {\n                    if (field == '@method') {\n                        items.push(`\"${field}\": ${method}`);\n                    }\n                    else if (field == '@path') {\n                        items.push(`\"${field}\": ${path}`);\n                    }\n                }\n                else {\n                    if (headers.has(field)) {\n                        const value = (0,_httping_js__WEBPACK_IMPORTED_MODULE_0__.normalize)(headers.get(field));\n                        items.push(`\"${field}\": ${value}`);\n                    }\n                }\n            });\n            const values = new Array();\n            values.push(`(${input.fields.join(' ')})`);\n            values.push(`created=${input.created}`);\n            if (input.expires != undefined) {\n                values.push(`expires=${input.expires}`);\n            }\n            if (input.nonce != undefined) {\n                values.push(`nonce=${input.nonce}`);\n            }\n            if (input.keyid != undefined) {\n                values.push(`keyid=${input.keyid}`);\n            }\n            if (input.context != undefined) {\n                values.push(`context=${input.context}`);\n            }\n            if (input.alg != undefined) {\n                values.push(`alg=${input.alg}`);\n            }\n            const params = values.join(';');\n            items.push(`\"@signature-params: ${params}\"`);\n            const ser = items.join('\\n');\n            const signage = (0,_end_ending_js__WEBPACK_IMPORTED_MODULE_1__.designature)(signature);\n            const markers = signage[0].markers;\n            const cig = markers.get(input.name);\n            if (!cig || !this._verfer.verify(cig.raw, ser)) {\n                throw new Error(`Signature for ${input.keyid} invalid.`);\n            }\n        });\n        return true;\n    }\n    sign(headers, method, path, fields) {\n        if (fields == undefined) {\n            fields = Authenticater.DefaultFields;\n        }\n        const [header, sig] = (0,_httping_js__WEBPACK_IMPORTED_MODULE_0__.siginput)(this._csig, {\n            name: 'signify',\n            method,\n            path,\n            headers,\n            fields,\n            alg: 'ed25519',\n            keyid: this._csig.verfer.qb64,\n        });\n        header.forEach((value, key) => {\n            headers.append(key, value);\n        });\n        const markers = new Map();\n        markers.set('signify', sig);\n        const signage = new _end_ending_js__WEBPACK_IMPORTED_MODULE_1__.Signage(markers, false);\n        const signed = (0,_end_ending_js__WEBPACK_IMPORTED_MODULE_1__.signature)([signage]);\n        signed.forEach((value, key) => {\n            headers.append(key, value);\n        });\n        return headers;\n    }\n}\nAuthenticater.DefaultFields = [\n    '@method',\n    '@path',\n    'signify-resource',\n    _httping_js__WEBPACK_IMPORTED_MODULE_0__.HEADER_SIG_TIME.toLowerCase(),\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2tlcmkvY29yZS9hdXRoaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFtRztBQUNoQztBQUM1RDtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMseURBQWdCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHVEQUFVO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxNQUFNLEtBQUssT0FBTztBQUN6RDtBQUNBO0FBQ0EsdUNBQXVDLE1BQU0sS0FBSyxLQUFLO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLHNEQUFTO0FBQy9DLHVDQUF1QyxNQUFNLEtBQUssTUFBTTtBQUN4RDtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsNEJBQTRCLHVCQUF1QjtBQUNuRCxtQ0FBbUMsY0FBYztBQUNqRDtBQUNBLHVDQUF1QyxjQUFjO0FBQ3JEO0FBQ0E7QUFDQSxxQ0FBcUMsWUFBWTtBQUNqRDtBQUNBO0FBQ0EscUNBQXFDLFlBQVk7QUFDakQ7QUFDQTtBQUNBLHVDQUF1QyxjQUFjO0FBQ3JEO0FBQ0E7QUFDQSxtQ0FBbUMsVUFBVTtBQUM3QztBQUNBLHlDQUF5QztBQUN6Qyw4Q0FBOEMsT0FBTztBQUNyRDtBQUNBLDRCQUE0QiwyREFBVztBQUN2QztBQUNBO0FBQ0E7QUFDQSxpREFBaUQsYUFBYTtBQUM5RDtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIscURBQVE7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsNEJBQTRCLG1EQUFPO0FBQ25DLHVCQUF1Qix5REFBUztBQUNoQztBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSx3REFBZTtBQUNuQiIsInNvdXJjZXMiOlsid2VicGFjazovL3N0ZWxsYXItcHJvY3VyZW1lbnQtZGFwcC8uL25vZGVfbW9kdWxlcy9zaWduaWZ5LXRzL2Rpc3Qva2VyaS9jb3JlL2F1dGhpbmcuanM/M2ZiMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZXNpZ2lucHV0LCBIRUFERVJfU0lHX0lOUFVULCBIRUFERVJfU0lHX1RJTUUsIG5vcm1hbGl6ZSwgc2lnaW5wdXQsIH0gZnJvbSBcIi4vaHR0cGluZy5qc1wiO1xuaW1wb3J0IHsgU2lnbmFnZSwgc2lnbmF0dXJlLCBkZXNpZ25hdHVyZSB9IGZyb20gXCIuLi9lbmQvZW5kaW5nLmpzXCI7XG5leHBvcnQgY2xhc3MgQXV0aGVudGljYXRlciB7XG4gICAgY29uc3RydWN0b3IoY3NpZywgdmVyZmVyKSB7XG4gICAgICAgIHRoaXMuX2NzaWcgPSBjc2lnO1xuICAgICAgICB0aGlzLl92ZXJmZXIgPSB2ZXJmZXI7XG4gICAgfVxuICAgIHZlcmlmeShoZWFkZXJzLCBtZXRob2QsIHBhdGgpIHtcbiAgICAgICAgY29uc3Qgc2lnaW5wdXQgPSBoZWFkZXJzLmdldChIRUFERVJfU0lHX0lOUFVUKTtcbiAgICAgICAgaWYgKHNpZ2lucHV0ID09IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBzaWduYXR1cmUgPSBoZWFkZXJzLmdldCgnU2lnbmF0dXJlJyk7XG4gICAgICAgIGlmIChzaWduYXR1cmUgPT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGxldCBpbnB1dHMgPSBkZXNpZ2lucHV0KHNpZ2lucHV0KTtcbiAgICAgICAgaW5wdXRzID0gaW5wdXRzLmZpbHRlcigoaW5wdXQpID0+IGlucHV0Lm5hbWUgPT0gJ3NpZ25pZnknKTtcbiAgICAgICAgaWYgKGlucHV0cy5sZW5ndGggPT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGlucHV0cy5mb3JFYWNoKChpbnB1dCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgaXRlbXMgPSBuZXcgQXJyYXkoKTtcbiAgICAgICAgICAgIGlucHV0LmZpZWxkcy5mb3JFYWNoKChmaWVsZCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChmaWVsZC5zdGFydHNXaXRoKCdAJykpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGZpZWxkID09ICdAbWV0aG9kJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgaXRlbXMucHVzaChgXCIke2ZpZWxkfVwiOiAke21ldGhvZH1gKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChmaWVsZCA9PSAnQHBhdGgnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpdGVtcy5wdXNoKGBcIiR7ZmllbGR9XCI6ICR7cGF0aH1gKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGhlYWRlcnMuaGFzKGZpZWxkKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBub3JtYWxpemUoaGVhZGVycy5nZXQoZmllbGQpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW1zLnB1c2goYFwiJHtmaWVsZH1cIjogJHt2YWx1ZX1gKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgY29uc3QgdmFsdWVzID0gbmV3IEFycmF5KCk7XG4gICAgICAgICAgICB2YWx1ZXMucHVzaChgKCR7aW5wdXQuZmllbGRzLmpvaW4oJyAnKX0pYCk7XG4gICAgICAgICAgICB2YWx1ZXMucHVzaChgY3JlYXRlZD0ke2lucHV0LmNyZWF0ZWR9YCk7XG4gICAgICAgICAgICBpZiAoaW5wdXQuZXhwaXJlcyAhPSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICB2YWx1ZXMucHVzaChgZXhwaXJlcz0ke2lucHV0LmV4cGlyZXN9YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaW5wdXQubm9uY2UgIT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgdmFsdWVzLnB1c2goYG5vbmNlPSR7aW5wdXQubm9uY2V9YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaW5wdXQua2V5aWQgIT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgdmFsdWVzLnB1c2goYGtleWlkPSR7aW5wdXQua2V5aWR9YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaW5wdXQuY29udGV4dCAhPSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICB2YWx1ZXMucHVzaChgY29udGV4dD0ke2lucHV0LmNvbnRleHR9YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaW5wdXQuYWxnICE9IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHZhbHVlcy5wdXNoKGBhbGc9JHtpbnB1dC5hbGd9YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBwYXJhbXMgPSB2YWx1ZXMuam9pbignOycpO1xuICAgICAgICAgICAgaXRlbXMucHVzaChgXCJAc2lnbmF0dXJlLXBhcmFtczogJHtwYXJhbXN9XCJgKTtcbiAgICAgICAgICAgIGNvbnN0IHNlciA9IGl0ZW1zLmpvaW4oJ1xcbicpO1xuICAgICAgICAgICAgY29uc3Qgc2lnbmFnZSA9IGRlc2lnbmF0dXJlKHNpZ25hdHVyZSk7XG4gICAgICAgICAgICBjb25zdCBtYXJrZXJzID0gc2lnbmFnZVswXS5tYXJrZXJzO1xuICAgICAgICAgICAgY29uc3QgY2lnID0gbWFya2Vycy5nZXQoaW5wdXQubmFtZSk7XG4gICAgICAgICAgICBpZiAoIWNpZyB8fCAhdGhpcy5fdmVyZmVyLnZlcmlmeShjaWcucmF3LCBzZXIpKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBTaWduYXR1cmUgZm9yICR7aW5wdXQua2V5aWR9IGludmFsaWQuYCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgc2lnbihoZWFkZXJzLCBtZXRob2QsIHBhdGgsIGZpZWxkcykge1xuICAgICAgICBpZiAoZmllbGRzID09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgZmllbGRzID0gQXV0aGVudGljYXRlci5EZWZhdWx0RmllbGRzO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IFtoZWFkZXIsIHNpZ10gPSBzaWdpbnB1dCh0aGlzLl9jc2lnLCB7XG4gICAgICAgICAgICBuYW1lOiAnc2lnbmlmeScsXG4gICAgICAgICAgICBtZXRob2QsXG4gICAgICAgICAgICBwYXRoLFxuICAgICAgICAgICAgaGVhZGVycyxcbiAgICAgICAgICAgIGZpZWxkcyxcbiAgICAgICAgICAgIGFsZzogJ2VkMjU1MTknLFxuICAgICAgICAgICAga2V5aWQ6IHRoaXMuX2NzaWcudmVyZmVyLnFiNjQsXG4gICAgICAgIH0pO1xuICAgICAgICBoZWFkZXIuZm9yRWFjaCgodmFsdWUsIGtleSkgPT4ge1xuICAgICAgICAgICAgaGVhZGVycy5hcHBlbmQoa2V5LCB2YWx1ZSk7XG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCBtYXJrZXJzID0gbmV3IE1hcCgpO1xuICAgICAgICBtYXJrZXJzLnNldCgnc2lnbmlmeScsIHNpZyk7XG4gICAgICAgIGNvbnN0IHNpZ25hZ2UgPSBuZXcgU2lnbmFnZShtYXJrZXJzLCBmYWxzZSk7XG4gICAgICAgIGNvbnN0IHNpZ25lZCA9IHNpZ25hdHVyZShbc2lnbmFnZV0pO1xuICAgICAgICBzaWduZWQuZm9yRWFjaCgodmFsdWUsIGtleSkgPT4ge1xuICAgICAgICAgICAgaGVhZGVycy5hcHBlbmQoa2V5LCB2YWx1ZSk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gaGVhZGVycztcbiAgICB9XG59XG5BdXRoZW50aWNhdGVyLkRlZmF1bHRGaWVsZHMgPSBbXG4gICAgJ0BtZXRob2QnLFxuICAgICdAcGF0aCcsXG4gICAgJ3NpZ25pZnktcmVzb3VyY2UnLFxuICAgIEhFQURFUl9TSUdfVElNRS50b0xvd2VyQ2FzZSgpLFxuXTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/core/authing.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/core/base64.js":
/*!**********************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/core/base64.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeBase64Url: () => (/* binding */ decodeBase64Url),\n/* harmony export */   encodeBase64Url: () => (/* binding */ encodeBase64Url)\n/* harmony export */ });\n/* harmony import */ var base64_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! base64-js */ \"(ssr)/./node_modules/base64-js/index.js\");\n\nfunction encodeBase64Url(input) {\n    return (0,base64_js__WEBPACK_IMPORTED_MODULE_0__.fromByteArray)(input)\n        .replace(/\\+/g, '-')\n        .replace(/\\//g, '_')\n        .replace(/=+/, '');\n}\nfunction decodeBase64Url(input) {\n    if (!(typeof input === 'string')) {\n        throw new TypeError('`input` must be a string.');\n    }\n    const n = input.length % 4;\n    const padded = input + '='.repeat(n > 0 ? 4 - n : n);\n    const base64String = padded.replace(/-/g, '+').replace(/_/g, '/');\n    return (0,base64_js__WEBPACK_IMPORTED_MODULE_0__.toByteArray)(base64String);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2tlcmkvY29yZS9iYXNlNjQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXVEO0FBQ2hEO0FBQ1AsV0FBVyx3REFBYTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxzREFBVztBQUN0QiIsInNvdXJjZXMiOlsid2VicGFjazovL3N0ZWxsYXItcHJvY3VyZW1lbnQtZGFwcC8uL25vZGVfbW9kdWxlcy9zaWduaWZ5LXRzL2Rpc3Qva2VyaS9jb3JlL2Jhc2U2NC5qcz9hODBjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZyb21CeXRlQXJyYXksIHRvQnl0ZUFycmF5IH0gZnJvbSAnYmFzZTY0LWpzJztcbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVCYXNlNjRVcmwoaW5wdXQpIHtcbiAgICByZXR1cm4gZnJvbUJ5dGVBcnJheShpbnB1dClcbiAgICAgICAgLnJlcGxhY2UoL1xcKy9nLCAnLScpXG4gICAgICAgIC5yZXBsYWNlKC9cXC8vZywgJ18nKVxuICAgICAgICAucmVwbGFjZSgvPSsvLCAnJyk7XG59XG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQmFzZTY0VXJsKGlucHV0KSB7XG4gICAgaWYgKCEodHlwZW9mIGlucHV0ID09PSAnc3RyaW5nJykpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignYGlucHV0YCBtdXN0IGJlIGEgc3RyaW5nLicpO1xuICAgIH1cbiAgICBjb25zdCBuID0gaW5wdXQubGVuZ3RoICUgNDtcbiAgICBjb25zdCBwYWRkZWQgPSBpbnB1dCArICc9Jy5yZXBlYXQobiA+IDAgPyA0IC0gbiA6IG4pO1xuICAgIGNvbnN0IGJhc2U2NFN0cmluZyA9IHBhZGRlZC5yZXBsYWNlKC8tL2csICcrJykucmVwbGFjZSgvXy9nLCAnLycpO1xuICAgIHJldHVybiB0b0J5dGVBcnJheShiYXNlNjRTdHJpbmcpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/core/base64.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/core/bexter.js":
/*!**********************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/core/bexter.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Bexter: () => (/* binding */ Bexter),\n/* harmony export */   Reb64: () => (/* binding */ Reb64)\n/* harmony export */ });\n/* harmony import */ var _matter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./matter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/matter.js\");\n/* harmony import */ var _kering_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kering.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/kering.js\");\n/* harmony import */ var _base64_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base64.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/base64.js\");\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./core.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/core.js\");\n\n\n\n\nconst B64REX = '^[A-Za-z0-9\\\\-_]*$';\nconst Reb64 = new RegExp(B64REX);\n/*\n\n    Bexter is subclass of Matter, cryptographic material, for variable length\n    strings that only contain Base64 URL safe characters, i.e. Base64 text (bext).\n    When created using the 'bext' paramaeter, the encoded matter in qb64 format\n    in the text domain is more compact than would be the case if the string were\n    passed in as raw bytes. The text is used as is to form the value part of the\n    qb64 version not including the leader.\n\n    Due to ambiguity that arises from pre-padding bext whose length is a multiple of\n    three with one or more 'A' chars. Any bext that starts with an 'A' and whose length\n    is either a multiple of 3 or 4 may not round trip. Bext with a leading 'A'\n    whose length is a multiple of four may have the leading 'A' stripped when\n    round tripping.\n\n        Bexter(bext='ABBB').bext == 'BBB'\n        Bexter(bext='BBB').bext == 'BBB'\n        Bexter(bext='ABBB').qb64 == '4AABABBB' == Bexter(bext='BBB').qb64\n\n    To avoid this problem, only use for applications of base 64 strings that\n    never start with 'A'\n\n    Examples: base64 text strings:\n\n    bext = \"\"\n    qb64 = '4AAA'\n\n    bext = \"-\"\n    qb64 = '6AABAAA-'\n\n    bext = \"-A\"\n    qb64 = '5AABAA-A'\n\n    bext = \"-A-\"\n    qb64 = '4AABA-A-'\n\n    bext = \"-A-B\"\n    qb64 = '4AAB-A-B'\n\n\n    Example uses:\n        CESR encoded paths for nested SADs and SAIDs\n        CESR encoded fractionally weighted threshold expressions\n\n\n    Attributes:\n\n    Inherited Properties:  (See Matter)\n        .pad  is int number of pad chars given raw\n\n        .code is  str derivation code to indicate cypher suite\n        .raw is bytes crypto material only without code\n        .index is int count of attached crypto material by context (receipts)\n        .qb64 is str in Base64 fully qualified with derivation code + crypto mat\n        .qb64b is bytes in Base64 fully qualified with derivation code + crypto mat\n        .qb2  is bytes in binary with derivation code + crypto material\n        .transferable is Boolean, True when transferable derivation code False otherwise\n\n    Properties:\n        .text is the Base64 text value, .qb64 with text code and leader removed.\n\n    Hidden:\n        ._pad is method to compute  .pad property\n        ._code is str value for .code property\n        ._raw is bytes value for .raw property\n        ._index is int value for .index property\n        ._infil is method to compute fully qualified Base64 from .raw and .code\n        ._exfil is method to extract .code and .raw from fully qualified Base64\n\n    Methods:\n\n\n\n\n */\nclass Bexter extends _matter_js__WEBPACK_IMPORTED_MODULE_0__.Matter {\n    constructor({ raw, code = _matter_js__WEBPACK_IMPORTED_MODULE_0__.MtrDex.StrB64_L0, qb64b, qb64, qb2 }, bext) {\n        if (raw === undefined &&\n            qb64b === undefined &&\n            qb64 === undefined &&\n            qb2 === undefined) {\n            if (bext === undefined)\n                throw new _kering_js__WEBPACK_IMPORTED_MODULE_1__.EmptyMaterialError('Missing bext string.');\n            const match = Reb64.exec(bext);\n            if (!match)\n                throw new Error('Invalid Base64.');\n            raw = Bexter._rawify(bext);\n        }\n        super({ raw, code, qb64b, qb64, qb2 });\n        if (!_matter_js__WEBPACK_IMPORTED_MODULE_0__.BexDex.has(this.code))\n            throw new Error(`Invalid code = ${this.code} for Bexter.`);\n    }\n    static _rawify(bext) {\n        const ts = bext.length % 4; // bext size mod 4\n        const ws = (4 - ts) % 4; // pre conv wad size in chars\n        const ls = (3 - ts) % 3; // post conv lead size in bytes\n        const wad = new Array(ws);\n        wad.fill('A');\n        const base = wad.join('') + bext; // pre pad with wad of zeros in Base64 == 'A'\n        const raw = (0,_base64_js__WEBPACK_IMPORTED_MODULE_2__.decodeBase64Url)(base); // [ls:]  // convert and remove leader\n        return Uint8Array.from(raw).subarray(ls); // raw binary equivalent of text\n    }\n    get bext() {\n        const sizage = _matter_js__WEBPACK_IMPORTED_MODULE_0__.Matter.Sizes.get(this.code);\n        const wad = Uint8Array.from(new Array(sizage === null || sizage === void 0 ? void 0 : sizage.ls).fill(0));\n        const bext = (0,_base64_js__WEBPACK_IMPORTED_MODULE_2__.encodeBase64Url)((0,_core_js__WEBPACK_IMPORTED_MODULE_3__.concat)(wad, this.raw));\n        let ws = 0;\n        if ((sizage === null || sizage === void 0 ? void 0 : sizage.ls) === 0 && bext !== undefined) {\n            if (bext[0] === 'A') {\n                ws = 1;\n            }\n        }\n        else {\n            ws = ((sizage === null || sizage === void 0 ? void 0 : sizage.ls) + 1) % 4;\n        }\n        return bext.substring(ws);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2tlcmkvY29yZS9iZXh0ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXFEO0FBQ0o7QUFDYztBQUM1QjtBQUNuQztBQUNPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7OztBQUdBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7QUFLQTtBQUNPLHFCQUFxQiw4Q0FBTTtBQUNsQyxrQkFBa0IsWUFBWSw4Q0FBTSw4QkFBOEI7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiwwREFBa0I7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiw2QkFBNkI7QUFDN0MsYUFBYSw4Q0FBTTtBQUNuQiw4Q0FBOEMsV0FBVztBQUN6RDtBQUNBO0FBQ0Esb0NBQW9DO0FBQ3BDLGlDQUFpQztBQUNqQyxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBLDBDQUEwQztBQUMxQyxvQkFBb0IsMkRBQWUsUUFBUTtBQUMzQyxrREFBa0Q7QUFDbEQ7QUFDQTtBQUNBLHVCQUF1Qiw4Q0FBTTtBQUM3QjtBQUNBLHFCQUFxQiwyREFBZSxDQUFDLGdEQUFNO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N0ZWxsYXItcHJvY3VyZW1lbnQtZGFwcC8uL25vZGVfbW9kdWxlcy9zaWduaWZ5LXRzL2Rpc3Qva2VyaS9jb3JlL2JleHRlci5qcz8wZDk0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJleERleCwgTWF0dGVyLCBNdHJEZXggfSBmcm9tIFwiLi9tYXR0ZXIuanNcIjtcbmltcG9ydCB7IEVtcHR5TWF0ZXJpYWxFcnJvciB9IGZyb20gXCIuL2tlcmluZy5qc1wiO1xuaW1wb3J0IHsgZGVjb2RlQmFzZTY0VXJsLCBlbmNvZGVCYXNlNjRVcmwgfSBmcm9tIFwiLi9iYXNlNjQuanNcIjtcbmltcG9ydCB7IGNvbmNhdCB9IGZyb20gXCIuL2NvcmUuanNcIjtcbmNvbnN0IEI2NFJFWCA9ICdeW0EtWmEtejAtOVxcXFwtX10qJCc7XG5leHBvcnQgY29uc3QgUmViNjQgPSBuZXcgUmVnRXhwKEI2NFJFWCk7XG4vKlxuXG4gICAgQmV4dGVyIGlzIHN1YmNsYXNzIG9mIE1hdHRlciwgY3J5cHRvZ3JhcGhpYyBtYXRlcmlhbCwgZm9yIHZhcmlhYmxlIGxlbmd0aFxuICAgIHN0cmluZ3MgdGhhdCBvbmx5IGNvbnRhaW4gQmFzZTY0IFVSTCBzYWZlIGNoYXJhY3RlcnMsIGkuZS4gQmFzZTY0IHRleHQgKGJleHQpLlxuICAgIFdoZW4gY3JlYXRlZCB1c2luZyB0aGUgJ2JleHQnIHBhcmFtYWV0ZXIsIHRoZSBlbmNvZGVkIG1hdHRlciBpbiBxYjY0IGZvcm1hdFxuICAgIGluIHRoZSB0ZXh0IGRvbWFpbiBpcyBtb3JlIGNvbXBhY3QgdGhhbiB3b3VsZCBiZSB0aGUgY2FzZSBpZiB0aGUgc3RyaW5nIHdlcmVcbiAgICBwYXNzZWQgaW4gYXMgcmF3IGJ5dGVzLiBUaGUgdGV4dCBpcyB1c2VkIGFzIGlzIHRvIGZvcm0gdGhlIHZhbHVlIHBhcnQgb2YgdGhlXG4gICAgcWI2NCB2ZXJzaW9uIG5vdCBpbmNsdWRpbmcgdGhlIGxlYWRlci5cblxuICAgIER1ZSB0byBhbWJpZ3VpdHkgdGhhdCBhcmlzZXMgZnJvbSBwcmUtcGFkZGluZyBiZXh0IHdob3NlIGxlbmd0aCBpcyBhIG11bHRpcGxlIG9mXG4gICAgdGhyZWUgd2l0aCBvbmUgb3IgbW9yZSAnQScgY2hhcnMuIEFueSBiZXh0IHRoYXQgc3RhcnRzIHdpdGggYW4gJ0EnIGFuZCB3aG9zZSBsZW5ndGhcbiAgICBpcyBlaXRoZXIgYSBtdWx0aXBsZSBvZiAzIG9yIDQgbWF5IG5vdCByb3VuZCB0cmlwLiBCZXh0IHdpdGggYSBsZWFkaW5nICdBJ1xuICAgIHdob3NlIGxlbmd0aCBpcyBhIG11bHRpcGxlIG9mIGZvdXIgbWF5IGhhdmUgdGhlIGxlYWRpbmcgJ0EnIHN0cmlwcGVkIHdoZW5cbiAgICByb3VuZCB0cmlwcGluZy5cblxuICAgICAgICBCZXh0ZXIoYmV4dD0nQUJCQicpLmJleHQgPT0gJ0JCQidcbiAgICAgICAgQmV4dGVyKGJleHQ9J0JCQicpLmJleHQgPT0gJ0JCQidcbiAgICAgICAgQmV4dGVyKGJleHQ9J0FCQkInKS5xYjY0ID09ICc0QUFCQUJCQicgPT0gQmV4dGVyKGJleHQ9J0JCQicpLnFiNjRcblxuICAgIFRvIGF2b2lkIHRoaXMgcHJvYmxlbSwgb25seSB1c2UgZm9yIGFwcGxpY2F0aW9ucyBvZiBiYXNlIDY0IHN0cmluZ3MgdGhhdFxuICAgIG5ldmVyIHN0YXJ0IHdpdGggJ0EnXG5cbiAgICBFeGFtcGxlczogYmFzZTY0IHRleHQgc3RyaW5nczpcblxuICAgIGJleHQgPSBcIlwiXG4gICAgcWI2NCA9ICc0QUFBJ1xuXG4gICAgYmV4dCA9IFwiLVwiXG4gICAgcWI2NCA9ICc2QUFCQUFBLSdcblxuICAgIGJleHQgPSBcIi1BXCJcbiAgICBxYjY0ID0gJzVBQUJBQS1BJ1xuXG4gICAgYmV4dCA9IFwiLUEtXCJcbiAgICBxYjY0ID0gJzRBQUJBLUEtJ1xuXG4gICAgYmV4dCA9IFwiLUEtQlwiXG4gICAgcWI2NCA9ICc0QUFCLUEtQidcblxuXG4gICAgRXhhbXBsZSB1c2VzOlxuICAgICAgICBDRVNSIGVuY29kZWQgcGF0aHMgZm9yIG5lc3RlZCBTQURzIGFuZCBTQUlEc1xuICAgICAgICBDRVNSIGVuY29kZWQgZnJhY3Rpb25hbGx5IHdlaWdodGVkIHRocmVzaG9sZCBleHByZXNzaW9uc1xuXG5cbiAgICBBdHRyaWJ1dGVzOlxuXG4gICAgSW5oZXJpdGVkIFByb3BlcnRpZXM6ICAoU2VlIE1hdHRlcilcbiAgICAgICAgLnBhZCAgaXMgaW50IG51bWJlciBvZiBwYWQgY2hhcnMgZ2l2ZW4gcmF3XG5cbiAgICAgICAgLmNvZGUgaXMgIHN0ciBkZXJpdmF0aW9uIGNvZGUgdG8gaW5kaWNhdGUgY3lwaGVyIHN1aXRlXG4gICAgICAgIC5yYXcgaXMgYnl0ZXMgY3J5cHRvIG1hdGVyaWFsIG9ubHkgd2l0aG91dCBjb2RlXG4gICAgICAgIC5pbmRleCBpcyBpbnQgY291bnQgb2YgYXR0YWNoZWQgY3J5cHRvIG1hdGVyaWFsIGJ5IGNvbnRleHQgKHJlY2VpcHRzKVxuICAgICAgICAucWI2NCBpcyBzdHIgaW4gQmFzZTY0IGZ1bGx5IHF1YWxpZmllZCB3aXRoIGRlcml2YXRpb24gY29kZSArIGNyeXB0byBtYXRcbiAgICAgICAgLnFiNjRiIGlzIGJ5dGVzIGluIEJhc2U2NCBmdWxseSBxdWFsaWZpZWQgd2l0aCBkZXJpdmF0aW9uIGNvZGUgKyBjcnlwdG8gbWF0XG4gICAgICAgIC5xYjIgIGlzIGJ5dGVzIGluIGJpbmFyeSB3aXRoIGRlcml2YXRpb24gY29kZSArIGNyeXB0byBtYXRlcmlhbFxuICAgICAgICAudHJhbnNmZXJhYmxlIGlzIEJvb2xlYW4sIFRydWUgd2hlbiB0cmFuc2ZlcmFibGUgZGVyaXZhdGlvbiBjb2RlIEZhbHNlIG90aGVyd2lzZVxuXG4gICAgUHJvcGVydGllczpcbiAgICAgICAgLnRleHQgaXMgdGhlIEJhc2U2NCB0ZXh0IHZhbHVlLCAucWI2NCB3aXRoIHRleHQgY29kZSBhbmQgbGVhZGVyIHJlbW92ZWQuXG5cbiAgICBIaWRkZW46XG4gICAgICAgIC5fcGFkIGlzIG1ldGhvZCB0byBjb21wdXRlICAucGFkIHByb3BlcnR5XG4gICAgICAgIC5fY29kZSBpcyBzdHIgdmFsdWUgZm9yIC5jb2RlIHByb3BlcnR5XG4gICAgICAgIC5fcmF3IGlzIGJ5dGVzIHZhbHVlIGZvciAucmF3IHByb3BlcnR5XG4gICAgICAgIC5faW5kZXggaXMgaW50IHZhbHVlIGZvciAuaW5kZXggcHJvcGVydHlcbiAgICAgICAgLl9pbmZpbCBpcyBtZXRob2QgdG8gY29tcHV0ZSBmdWxseSBxdWFsaWZpZWQgQmFzZTY0IGZyb20gLnJhdyBhbmQgLmNvZGVcbiAgICAgICAgLl9leGZpbCBpcyBtZXRob2QgdG8gZXh0cmFjdCAuY29kZSBhbmQgLnJhdyBmcm9tIGZ1bGx5IHF1YWxpZmllZCBCYXNlNjRcblxuICAgIE1ldGhvZHM6XG5cblxuXG5cbiAqL1xuZXhwb3J0IGNsYXNzIEJleHRlciBleHRlbmRzIE1hdHRlciB7XG4gICAgY29uc3RydWN0b3IoeyByYXcsIGNvZGUgPSBNdHJEZXguU3RyQjY0X0wwLCBxYjY0YiwgcWI2NCwgcWIyIH0sIGJleHQpIHtcbiAgICAgICAgaWYgKHJhdyA9PT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICBxYjY0YiA9PT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICBxYjY0ID09PSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgIHFiMiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBpZiAoYmV4dCA9PT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFbXB0eU1hdGVyaWFsRXJyb3IoJ01pc3NpbmcgYmV4dCBzdHJpbmcuJyk7XG4gICAgICAgICAgICBjb25zdCBtYXRjaCA9IFJlYjY0LmV4ZWMoYmV4dCk7XG4gICAgICAgICAgICBpZiAoIW1hdGNoKVxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBCYXNlNjQuJyk7XG4gICAgICAgICAgICByYXcgPSBCZXh0ZXIuX3Jhd2lmeShiZXh0KTtcbiAgICAgICAgfVxuICAgICAgICBzdXBlcih7IHJhdywgY29kZSwgcWI2NGIsIHFiNjQsIHFiMiB9KTtcbiAgICAgICAgaWYgKCFCZXhEZXguaGFzKHRoaXMuY29kZSkpXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgY29kZSA9ICR7dGhpcy5jb2RlfSBmb3IgQmV4dGVyLmApO1xuICAgIH1cbiAgICBzdGF0aWMgX3Jhd2lmeShiZXh0KSB7XG4gICAgICAgIGNvbnN0IHRzID0gYmV4dC5sZW5ndGggJSA0OyAvLyBiZXh0IHNpemUgbW9kIDRcbiAgICAgICAgY29uc3Qgd3MgPSAoNCAtIHRzKSAlIDQ7IC8vIHByZSBjb252IHdhZCBzaXplIGluIGNoYXJzXG4gICAgICAgIGNvbnN0IGxzID0gKDMgLSB0cykgJSAzOyAvLyBwb3N0IGNvbnYgbGVhZCBzaXplIGluIGJ5dGVzXG4gICAgICAgIGNvbnN0IHdhZCA9IG5ldyBBcnJheSh3cyk7XG4gICAgICAgIHdhZC5maWxsKCdBJyk7XG4gICAgICAgIGNvbnN0IGJhc2UgPSB3YWQuam9pbignJykgKyBiZXh0OyAvLyBwcmUgcGFkIHdpdGggd2FkIG9mIHplcm9zIGluIEJhc2U2NCA9PSAnQSdcbiAgICAgICAgY29uc3QgcmF3ID0gZGVjb2RlQmFzZTY0VXJsKGJhc2UpOyAvLyBbbHM6XSAgLy8gY29udmVydCBhbmQgcmVtb3ZlIGxlYWRlclxuICAgICAgICByZXR1cm4gVWludDhBcnJheS5mcm9tKHJhdykuc3ViYXJyYXkobHMpOyAvLyByYXcgYmluYXJ5IGVxdWl2YWxlbnQgb2YgdGV4dFxuICAgIH1cbiAgICBnZXQgYmV4dCgpIHtcbiAgICAgICAgY29uc3Qgc2l6YWdlID0gTWF0dGVyLlNpemVzLmdldCh0aGlzLmNvZGUpO1xuICAgICAgICBjb25zdCB3YWQgPSBVaW50OEFycmF5LmZyb20obmV3IEFycmF5KHNpemFnZSA9PT0gbnVsbCB8fCBzaXphZ2UgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHNpemFnZS5scykuZmlsbCgwKSk7XG4gICAgICAgIGNvbnN0IGJleHQgPSBlbmNvZGVCYXNlNjRVcmwoY29uY2F0KHdhZCwgdGhpcy5yYXcpKTtcbiAgICAgICAgbGV0IHdzID0gMDtcbiAgICAgICAgaWYgKChzaXphZ2UgPT09IG51bGwgfHwgc2l6YWdlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBzaXphZ2UubHMpID09PSAwICYmIGJleHQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgaWYgKGJleHRbMF0gPT09ICdBJykge1xuICAgICAgICAgICAgICAgIHdzID0gMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHdzID0gKChzaXphZ2UgPT09IG51bGwgfHwgc2l6YWdlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBzaXphZ2UubHMpICsgMSkgJSA0O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBiZXh0LnN1YnN0cmluZyh3cyk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/core/bexter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/core/cigar.js":
/*!*********************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/core/cigar.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Cigar: () => (/* binding */ Cigar)\n/* harmony export */ });\n/* harmony import */ var _matter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./matter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/matter.js\");\n\nclass Cigar extends _matter_js__WEBPACK_IMPORTED_MODULE_0__.Matter {\n    constructor({ raw, code, qb64, qb64b, qb2 }, verfer) {\n        super({ raw, code, qb64, qb64b, qb2 });\n        this._verfer = verfer;\n    }\n    get verfer() {\n        return this._verfer;\n    }\n    set verfer(verfer) {\n        this._verfer = verfer;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2tlcmkvY29yZS9jaWdhci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFxQztBQUM5QixvQkFBb0IsOENBQU07QUFDakMsa0JBQWtCLDZCQUE2QjtBQUMvQyxnQkFBZ0IsNkJBQTZCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N0ZWxsYXItcHJvY3VyZW1lbnQtZGFwcC8uL25vZGVfbW9kdWxlcy9zaWduaWZ5LXRzL2Rpc3Qva2VyaS9jb3JlL2NpZ2FyLmpzPzk1MDQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTWF0dGVyIH0gZnJvbSBcIi4vbWF0dGVyLmpzXCI7XG5leHBvcnQgY2xhc3MgQ2lnYXIgZXh0ZW5kcyBNYXR0ZXIge1xuICAgIGNvbnN0cnVjdG9yKHsgcmF3LCBjb2RlLCBxYjY0LCBxYjY0YiwgcWIyIH0sIHZlcmZlcikge1xuICAgICAgICBzdXBlcih7IHJhdywgY29kZSwgcWI2NCwgcWI2NGIsIHFiMiB9KTtcbiAgICAgICAgdGhpcy5fdmVyZmVyID0gdmVyZmVyO1xuICAgIH1cbiAgICBnZXQgdmVyZmVyKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fdmVyZmVyO1xuICAgIH1cbiAgICBzZXQgdmVyZmVyKHZlcmZlcikge1xuICAgICAgICB0aGlzLl92ZXJmZXIgPSB2ZXJmZXI7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/core/cigar.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/core/cipher.js":
/*!**********************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/core/cipher.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Cipher: () => (/* binding */ Cipher)\n/* harmony export */ });\n/* harmony import */ var _matter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./matter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/matter.js\");\n/* harmony import */ var _decrypter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./decrypter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/decrypter.js\");\n\n\nclass Cipher extends _matter_js__WEBPACK_IMPORTED_MODULE_0__.Matter {\n    constructor({ raw, code, qb64, qb64b, qb2 }) {\n        if (raw != undefined && code == undefined) {\n            if (raw.length == _matter_js__WEBPACK_IMPORTED_MODULE_0__.Matter._rawSize(_matter_js__WEBPACK_IMPORTED_MODULE_0__.MtrDex.X25519_Cipher_Salt)) {\n                code = _matter_js__WEBPACK_IMPORTED_MODULE_0__.MtrDex.X25519_Cipher_Salt;\n            }\n            else if (raw.length == _matter_js__WEBPACK_IMPORTED_MODULE_0__.Matter._rawSize(_matter_js__WEBPACK_IMPORTED_MODULE_0__.MtrDex.X25519_Cipher_Seed)) {\n                code = _matter_js__WEBPACK_IMPORTED_MODULE_0__.MtrDex.X25519_Cipher_Salt;\n            }\n        }\n        super({ raw: raw, code: code, qb64b: qb64b, qb64: qb64, qb2: qb2 });\n        if (!Array.from([\n            _matter_js__WEBPACK_IMPORTED_MODULE_0__.MtrDex.X25519_Cipher_Salt,\n            _matter_js__WEBPACK_IMPORTED_MODULE_0__.MtrDex.X25519_Cipher_Seed,\n        ]).includes(this.code)) {\n            throw new Error(`Unsupported Cipher code == ${this.code}`);\n        }\n    }\n    decrypt(prikey = undefined, seed = undefined) {\n        const decrypter = new _decrypter_js__WEBPACK_IMPORTED_MODULE_1__.Decrypter({ qb64b: prikey }, seed);\n        return decrypter.decrypt(this.qb64b);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2tlcmkvY29yZS9jaXBoZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTZDO0FBQ0Y7QUFDcEMscUJBQXFCLDhDQUFNO0FBQ2xDLGtCQUFrQiw2QkFBNkI7QUFDL0M7QUFDQSw4QkFBOEIsOENBQU0sVUFBVSw4Q0FBTTtBQUNwRCx1QkFBdUIsOENBQU07QUFDN0I7QUFDQSxtQ0FBbUMsOENBQU0sVUFBVSw4Q0FBTTtBQUN6RCx1QkFBdUIsOENBQU07QUFDN0I7QUFDQTtBQUNBLGdCQUFnQiwwREFBMEQ7QUFDMUU7QUFDQSxZQUFZLDhDQUFNO0FBQ2xCLFlBQVksOENBQU07QUFDbEI7QUFDQSwwREFBMEQsVUFBVTtBQUNwRTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsb0RBQVMsR0FBRyxlQUFlO0FBQ3pEO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N0ZWxsYXItcHJvY3VyZW1lbnQtZGFwcC8uL25vZGVfbW9kdWxlcy9zaWduaWZ5LXRzL2Rpc3Qva2VyaS9jb3JlL2NpcGhlci5qcz9kNDcxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1hdHRlciwgTXRyRGV4IH0gZnJvbSBcIi4vbWF0dGVyLmpzXCI7XG5pbXBvcnQgeyBEZWNyeXB0ZXIgfSBmcm9tIFwiLi9kZWNyeXB0ZXIuanNcIjtcbmV4cG9ydCBjbGFzcyBDaXBoZXIgZXh0ZW5kcyBNYXR0ZXIge1xuICAgIGNvbnN0cnVjdG9yKHsgcmF3LCBjb2RlLCBxYjY0LCBxYjY0YiwgcWIyIH0pIHtcbiAgICAgICAgaWYgKHJhdyAhPSB1bmRlZmluZWQgJiYgY29kZSA9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGlmIChyYXcubGVuZ3RoID09IE1hdHRlci5fcmF3U2l6ZShNdHJEZXguWDI1NTE5X0NpcGhlcl9TYWx0KSkge1xuICAgICAgICAgICAgICAgIGNvZGUgPSBNdHJEZXguWDI1NTE5X0NpcGhlcl9TYWx0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAocmF3Lmxlbmd0aCA9PSBNYXR0ZXIuX3Jhd1NpemUoTXRyRGV4LlgyNTUxOV9DaXBoZXJfU2VlZCkpIHtcbiAgICAgICAgICAgICAgICBjb2RlID0gTXRyRGV4LlgyNTUxOV9DaXBoZXJfU2FsdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBzdXBlcih7IHJhdzogcmF3LCBjb2RlOiBjb2RlLCBxYjY0YjogcWI2NGIsIHFiNjQ6IHFiNjQsIHFiMjogcWIyIH0pO1xuICAgICAgICBpZiAoIUFycmF5LmZyb20oW1xuICAgICAgICAgICAgTXRyRGV4LlgyNTUxOV9DaXBoZXJfU2FsdCxcbiAgICAgICAgICAgIE10ckRleC5YMjU1MTlfQ2lwaGVyX1NlZWQsXG4gICAgICAgIF0pLmluY2x1ZGVzKHRoaXMuY29kZSkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5zdXBwb3J0ZWQgQ2lwaGVyIGNvZGUgPT0gJHt0aGlzLmNvZGV9YCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZGVjcnlwdChwcmlrZXkgPSB1bmRlZmluZWQsIHNlZWQgPSB1bmRlZmluZWQpIHtcbiAgICAgICAgY29uc3QgZGVjcnlwdGVyID0gbmV3IERlY3J5cHRlcih7IHFiNjRiOiBwcmlrZXkgfSwgc2VlZCk7XG4gICAgICAgIHJldHVybiBkZWNyeXB0ZXIuZGVjcnlwdCh0aGlzLnFiNjRiKTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/core/cipher.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/core/core.js":
/*!********************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/core/core.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   B64ChrByIdx: () => (/* binding */ B64ChrByIdx),\n/* harmony export */   B64IdxByChr: () => (/* binding */ B64IdxByChr),\n/* harmony export */   DipLabels: () => (/* binding */ DipLabels),\n/* harmony export */   DrtLabels: () => (/* binding */ DrtLabels),\n/* harmony export */   IcpLabels: () => (/* binding */ IcpLabels),\n/* harmony export */   Ilks: () => (/* binding */ Ilks),\n/* harmony export */   IxnLabels: () => (/* binding */ IxnLabels),\n/* harmony export */   KsnLabels: () => (/* binding */ KsnLabels),\n/* harmony export */   MINSIGSIZE: () => (/* binding */ MINSIGSIZE),\n/* harmony export */   MINSNIFFSIZE: () => (/* binding */ MINSNIFFSIZE),\n/* harmony export */   Protocols: () => (/* binding */ Protocols),\n/* harmony export */   RotLabels: () => (/* binding */ RotLabels),\n/* harmony export */   RpyLabels: () => (/* binding */ RpyLabels),\n/* harmony export */   Serials: () => (/* binding */ Serials),\n/* harmony export */   VEREX: () => (/* binding */ VEREX),\n/* harmony export */   VERFULLSIZE: () => (/* binding */ VERFULLSIZE),\n/* harmony export */   Version: () => (/* binding */ Version),\n/* harmony export */   Vrsn_1_0: () => (/* binding */ Vrsn_1_0),\n/* harmony export */   b: () => (/* binding */ b),\n/* harmony export */   b64ToInt: () => (/* binding */ b64ToInt),\n/* harmony export */   concat: () => (/* binding */ concat),\n/* harmony export */   d: () => (/* binding */ d),\n/* harmony export */   deversify: () => (/* binding */ deversify),\n/* harmony export */   intToB64: () => (/* binding */ intToB64),\n/* harmony export */   intToB64b: () => (/* binding */ intToB64b),\n/* harmony export */   readInt: () => (/* binding */ readInt),\n/* harmony export */   versify: () => (/* binding */ versify)\n/* harmony export */ });\n/**\n * Serialization types supported by the KERI and ACDC protocols and this Signify implementation.\n */\nvar Serials;\n(function (Serials) {\n    Serials[\"JSON\"] = \"JSON\";\n})(Serials || (Serials = {}));\n/**\n * Protocol types supported by the KERI and ACDC protocols and this Signify implementation.\n */\nvar Protocols;\n(function (Protocols) {\n    Protocols[\"KERI\"] = \"KERI\";\n    Protocols[\"ACDC\"] = \"ACDC\";\n})(Protocols || (Protocols = {}));\n/**\n * Represents a protocol version of the KERI, ACDC, or other protocol specified in a CESR version string.\n */\nclass Version {\n    constructor(major = 1, minor = 0) {\n        this.major = major;\n        this.minor = minor;\n    }\n}\n/**\n * Denotes version 1.0 of a protocol.\n */\nconst Vrsn_1_0 = new Version();\n/**\n * Types of KERI and ACDC events.\n */\nconst Ilks = {\n    icp: 'icp',\n    rot: 'rot',\n    ixn: 'ixn',\n    dip: 'dip',\n    drt: 'drt',\n    rct: 'rct',\n    vrc: 'vrc',\n    rpy: 'rpy',\n    exn: 'exn',\n    vcp: 'vcp',\n    iss: 'iss',\n    rev: 'rev',\n    bis: 'bis',\n    brv: 'brv',\n};\n/**\n * Field labels for an inception event in V1 of the KERI protocol.\n */\nconst IcpLabels = [\n    'v',\n    'i',\n    's',\n    't',\n    'kt',\n    'k',\n    'n',\n    'bt',\n    'b',\n    'c',\n    'a',\n];\n/**\n * Field labels for an delegated inception event in V1 of the KERI protocol.\n */\nconst DipLabels = [\n    'v',\n    'i',\n    's',\n    't',\n    'kt',\n    'k',\n    'n',\n    'bt',\n    'b',\n    'c',\n    'a',\n    'di',\n];\n/**\n * Field labels for a rotation event in V1 of the KERI protocol.\n */\nconst RotLabels = [\n    'v',\n    'i',\n    's',\n    't',\n    'p',\n    'kt',\n    'k',\n    'n',\n    'bt',\n    'br',\n    'ba',\n    'a',\n];\n/**\n * Field labels for an delegated rotation event in V1 of the KERI protocol.\n */\nconst DrtLabels = [\n    'v',\n    'i',\n    's',\n    't',\n    'p',\n    'kt',\n    'k',\n    'n',\n    'bt',\n    'br',\n    'ba',\n    'a',\n];\n/**\n * Field labels for an interaction event in V1 of the KERI protocol.\n */\nconst IxnLabels = ['v', 'i', 's', 't', 'p', 'a'];\n/**\n * Field labels for a key state notice event in V1 of the KERI protocol.\n */\nconst KsnLabels = [\n    'v',\n    'i',\n    's',\n    't',\n    'p',\n    'd',\n    'f',\n    'dt',\n    'et',\n    'kt',\n    'k',\n    'n',\n    'bt',\n    'b',\n    'c',\n    'ee',\n    'di',\n    'r',\n];\n/**\n * Field labels for a reply event in V1 of the KERI protocol.\n */\nconst RpyLabels = ['v', 't', 'd', 'dt', 'r', 'a'];\n/**\n * Full size of a CESR version string in bytes.\n */\nconst VERFULLSIZE = 17;\n/**\n * Minimum number of bytes a CESR parser must sniff to receive the entire version string.\n */\nconst MINSNIFFSIZE = 12 + VERFULLSIZE;\nconst MINSIGSIZE = 4;\n// const version_pattern = 'KERI(?P<major>[0-9a-f])(?P<minor>[0-9a-f])\n// (?P<kind>[A-Z]{4})(?P<size>[0-9a-f]{6})'\n// const version_pattern1 = `KERI\\(\\?P<major>\\[0\\-9a\\-f\\]\\)\\(\\?P<minor>\\[0\\-9a\\-f\\]\\)\\\n// (\\?P<kind>\\[A\\-Z\\]\\{4\\}\\)\\(\\?P<size>\\[0\\-9a\\-f\\]\\{6\\}\\)_`\n/**\n * Regular expression for a version 1 CESR object version string.\n */\nconst VEREX = '(KERI|ACDC)([0-9a-f])([0-9a-f])([A-Z]{4})([0-9a-f]{6})_';\n/**\n * Parses a serialization version string into the protocol, protocol version, serialization type, and raw size.\n * Uses regex matchers to validate and extract version string parts.\n * @param {string} versionString version string\n * @return {Object} tuple of prototol (KERI or ACDC), kind of serialization like cbor,json, or mgpk,\n *                  protocol version, and raw size of serialization\n */\nfunction deversify(versionString) {\n    let kind;\n    let size;\n    let proto;\n    const version = Vrsn_1_0;\n    // we need to identify how to match the buffers pattern ,like we do regex matching for strings\n    const re = new RegExp(VEREX);\n    // Regex pattern matching\n    const match = re.exec(versionString);\n    if (match) {\n        [proto, version.major, version.minor, kind, size] = [\n            match[1],\n            +match[2],\n            +match[3],\n            match[4],\n            match[5],\n        ];\n        if (!Object.values(Serials).includes(kind)) {\n            throw new Error(`Invalid serialization kind = ${kind}`);\n        }\n        if (!Object.values(Protocols).includes(proto)) {\n            throw new Error(`Invalid serialization kind = ${kind}`);\n        }\n        const ta = kind;\n        kind = Serials[ta];\n        const pa = proto;\n        proto = Protocols[pa];\n        return [proto, kind, version, size];\n    }\n    throw new Error(`Invalid version string = ${versionString}`);\n}\n/**\n * Returns a valid KERI serialization version string specifying the protocol,\n * protocol version, serialization type, and raw byte size of the serialization.\n *\n * Defaults to version 1.0.\n * @param ident\n * @param version\n * @param kind\n * @param size\n */\nfunction versify(ident = Protocols.KERI, version, kind = Serials.JSON, size = 0) {\n    version = version == undefined ? Vrsn_1_0 : version; // defaults to Version 1\n    const major = version.major.toString(16); // hex digits\n    const minor = version.minor.toString(16); // hex digits\n    // raw size in hex digits zero padded to 6 characters\n    const rawSize = size.toString(16).padStart(6, '0');\n    const terminationChar = '_'; // v1 termination character\n    return `${ident}${major}${minor}${kind}${rawSize}${terminationChar}`;\n}\n/**\n * Map allowing lookup of Base64URLSafe characters by index.\n */\nconst B64ChrByIdx = new Map([\n    [0, 'A'],\n    [1, 'B'],\n    [2, 'C'],\n    [3, 'D'],\n    [4, 'E'],\n    [5, 'F'],\n    [6, 'G'],\n    [7, 'H'],\n    [8, 'I'],\n    [9, 'J'],\n    [10, 'K'],\n    [11, 'L'],\n    [12, 'M'],\n    [13, 'N'],\n    [14, 'O'],\n    [15, 'P'],\n    [16, 'Q'],\n    [17, 'R'],\n    [18, 'S'],\n    [19, 'T'],\n    [20, 'U'],\n    [21, 'V'],\n    [22, 'W'],\n    [23, 'X'],\n    [24, 'Y'],\n    [25, 'Z'],\n    [26, 'a'],\n    [27, 'b'],\n    [28, 'c'],\n    [29, 'd'],\n    [30, 'e'],\n    [31, 'f'],\n    [32, 'g'],\n    [33, 'h'],\n    [34, 'i'],\n    [35, 'j'],\n    [36, 'k'],\n    [37, 'l'],\n    [38, 'm'],\n    [39, 'n'],\n    [40, 'o'],\n    [41, 'p'],\n    [42, 'q'],\n    [43, 'r'],\n    [44, 's'],\n    [45, 't'],\n    [46, 'u'],\n    [47, 'v'],\n    [48, 'w'],\n    [49, 'x'],\n    [50, 'y'],\n    [51, 'z'],\n    [52, '0'],\n    [53, '1'],\n    [54, '2'],\n    [55, '3'],\n    [56, '4'],\n    [57, '5'],\n    [58, '6'],\n    [59, '7'],\n    [60, '8'],\n    [61, '9'],\n    [62, '-'],\n    [63, '_'],\n]);\n/**\n * Map allowing lookup of Base64URLSafe index by character.\n */\nconst B64IdxByChr = new Map(Array.from(B64ChrByIdx, (entry) => [entry[1], entry[0]]));\n/**\n * Converts an integer to a Base64URLSafe encoded string, left padded as specified.\n * @param i integer to convert\n * @param l minimum length of Base64 digits left padded with Base64 0 == 'A' character.\n */\nfunction intToB64(i, l = 1) {\n    let out = '';\n    while (l != 0) {\n        out = B64ChrByIdx.get(i % 64) + out;\n        i = Math.floor(i / 64);\n        if (i == 0) {\n            break;\n        }\n    }\n    const x = l - out.length;\n    for (let i = 0; i < x; i++) {\n        out = 'A' + out;\n    }\n    return out;\n}\n/**\n * Converts an integer to a Base64URLSafe encoded string to a byte array, left padded as specified.\n * @param i integer to convert\n * @param l minimum length of Base64 digits left padded with Base64 0 == 'A' character.\n */\nfunction intToB64b(n, l = 1) {\n    const s = intToB64(n, l);\n    return b(s);\n}\n/**\n * Converts a Base64URLSafe encoded string to an integer.\n * @param s string to convert\n */\nfunction b64ToInt(s) {\n    if (s.length == 0) {\n        throw new Error('Empty string, conversion undefined.');\n    }\n    let i = 0;\n    const rev = s.split('').reverse();\n    rev.forEach((c, e) => {\n        i |= B64IdxByChr.get(c) << (e * 6);\n    });\n    return i;\n}\n// Built in encoder and decoder for converting to and from UTF-8 strings and Uint8Array byte arrays.\nconst encoder = new TextEncoder();\nconst decoder = new TextDecoder();\n/**\n * Converts a UTF-8 string to bytes.\n * Output is an encoded array of bytes. Assumes UTF-8 encoding.\n * @param s string to be encoded as an array of bytes\n */\nfunction b(s) {\n    return encoder.encode(s);\n}\n/**\n * Convert bytes to UTF-8 string.\n * @param u array of bytes to be converted to UTF-8 string.\n */\nfunction d(u) {\n    return decoder.decode(u);\n}\n/**\n * Concatenates two byte arrays together in a new byte array.\n * @param one first byte array to be concatenated\n * @param two second byte array to be concatenated\n */\nfunction concat(one, two) {\n    const out = new Uint8Array(one.length + two.length);\n    out.set(one);\n    out.set(two, one.length);\n    return out;\n}\n/**\n * Converts a big-endian byte array into an integer.\n *\n * @param array - A `Uint8Array` of bytes representing a big-endian integer.\n * @returns The integer represented by the byte array.\n *\n * Example:\n *   readInt(Uint8Array([0x01, 0x02, 0x03])) // returns 66051\n *\n * How it works:\n * - The function interprets the array as a big-endian number.\n * - Each byte is added to the integer after shifting the previous value left by 8 bits (multiplying by 256).\n */\nfunction readInt(array) {\n    let value = 0;\n    for (let i = 0; i < array.length; i++) {\n        value = value * 256 + array[i];\n    }\n    return value;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/core/core.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/core/counter.js":
/*!***********************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/core/counter.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Counter: () => (/* binding */ Counter),\n/* harmony export */   CounterCodex: () => (/* binding */ CounterCodex),\n/* harmony export */   CtrDex: () => (/* binding */ CtrDex)\n/* harmony export */ });\n/* harmony import */ var _matter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./matter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/matter.js\");\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./core.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/core.js\");\n\n\nclass CounterCodex extends _matter_js__WEBPACK_IMPORTED_MODULE_0__.Codex {\n    constructor() {\n        super(...arguments);\n        this.ControllerIdxSigs = '-A'; // Qualified Base64 Indexed Signature.\n        this.WitnessIdxSigs = '-B'; // Qualified Base64 Indexed Signature.\n        this.NonTransReceiptCouples = '-C'; // Composed Base64 Couple, pre+cig.\n        this.TransReceiptQuadruples = '-D'; // Composed Base64 Quadruple, pre+snu+dig+sig.\n        this.FirstSeenReplayCouples = '-E'; // Composed Base64 Couple, fnu+dts.\n        this.TransIdxSigGroups = '-F'; // Composed Base64 Group, pre+snu+dig+ControllerIdxSigs group.\n        this.SealSourceCouples = '-G'; // Composed Base64 couple, snu+dig of given delegators or issuers event\n        this.TransLastIdxSigGroups = '-H'; // Composed Base64 Group, pre+ControllerIdxSigs group.\n        this.SealSourceTriples = '-I'; // Composed Base64 triple, pre+snu+dig of anchoring source event\n        this.SadPathSig = '-J'; // Composed Base64 Group path+TransIdxSigGroup of SAID of content\n        this.SadPathSigGroup = '-K'; // Composed Base64 Group, root(path)+SaidPathCouples\n        this.PathedMaterialQuadlets = '-L'; // Composed Grouped Pathed Material Quadlet (4 char each)\n        this.AttachedMaterialQuadlets = '-V'; // Composed Grouped Attached Material Quadlet (4 char each)\n        this.BigAttachedMaterialQuadlets = '-0V'; // Composed Grouped Attached Material Quadlet (4 char each)\n        this.KERIProtocolStack = '--AAA'; // KERI ACDC Protocol Stack CESR Version\n    }\n}\nconst CtrDex = new CounterCodex();\nclass Counter {\n    constructor({ code, count, countB64, qb64b, qb64, qb2 }) {\n        this._code = '';\n        this._count = -1;\n        if (code != undefined) {\n            if (!Counter.Sizes.has(code)) {\n                throw new Error(`\"Unsupported code=${code}.`);\n            }\n            const sizage = Counter.Sizes.get(code);\n            const cs = sizage.hs + sizage.ss;\n            if (sizage.fs != cs || cs % 4 != 0) {\n                throw new Error(`Whole code size not full size or not multiple of 4. cs=${cs} fs=${sizage.fs}.`);\n            }\n            if (count == undefined) {\n                count = countB64 == undefined ? 1 : (0,_core_js__WEBPACK_IMPORTED_MODULE_1__.b64ToInt)(countB64);\n            }\n            if (count < 0 || count > 64 ** sizage.ss - 1) {\n                throw new Error(`Invalid count=${count} for code=${code}.`);\n            }\n            this._code = code;\n            this._count = count;\n        }\n        else if (qb64b != undefined) {\n            const qb64 = (0,_core_js__WEBPACK_IMPORTED_MODULE_1__.d)(qb64b);\n            this._exfil(qb64);\n        }\n        else if (qb64 != undefined) {\n            this._exfil(qb64);\n        }\n        else if (qb2 != undefined) {\n        }\n        else {\n            throw new Error(`Improper initialization need either (code and count) or qb64b or qb64 or qb2.`);\n        }\n    }\n    get code() {\n        return this._code;\n    }\n    get count() {\n        return this._count;\n    }\n    get qb64() {\n        return this._infil();\n    }\n    get qb64b() {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_1__.b)(this.qb64);\n    }\n    countToB64(l) {\n        if (l == undefined) {\n            const sizage = Counter.Sizes.get(this.code);\n            l = sizage.ss;\n        }\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_1__.intToB64)(this.count, l);\n    }\n    static semVerToB64(version = '', major = 0, minor = 0, patch = 0) {\n        let parts = [major, minor, patch];\n        if (version != '') {\n            const ssplits = version.split('.');\n            const splits = ssplits.map((x) => {\n                if (x == '')\n                    return 0;\n                return parseInt(x);\n            });\n            const off = splits.length;\n            const x = 3 - off;\n            for (let i = 0; i < x; i++) {\n                splits.push(parts[i + off]);\n            }\n            parts = splits;\n        }\n        parts.forEach((p) => {\n            if (p < 0 || p > 63) {\n                throw new Error(`Out of bounds semantic version. Part=${p} is < 0 or > 63.`);\n            }\n        });\n        return parts\n            .map((p) => {\n            return (0,_core_js__WEBPACK_IMPORTED_MODULE_1__.intToB64)(p, 1);\n        })\n            .join('');\n    }\n    _infil() {\n        const code = this.code;\n        const count = this.count;\n        const sizage = Counter.Sizes.get(code);\n        const cs = sizage.hs + sizage.ss;\n        if (sizage.fs != cs || cs % 4 != 0) {\n            throw new Error(`Whole code size not full size or not multiple of 4. cs=${cs} fs=${sizage.fs}.`);\n        }\n        if (count < 0 || count > 64 ** sizage.ss - 1) {\n            throw new Error(`Invalid count=${count} for code=${code}.`);\n        }\n        const both = `${code}${(0,_core_js__WEBPACK_IMPORTED_MODULE_1__.intToB64)(count, sizage.ss)}`;\n        if (both.length % 4) {\n            throw new Error(`Invalid size = ${both.length} of ${both} not a multiple of 4.`);\n        }\n        return both;\n    }\n    _exfil(qb64) {\n        if (qb64.length == 0) {\n            throw new Error('Empty Material');\n        }\n        const first = qb64.slice(0, 2);\n        if (!Counter.Hards.has(first)) {\n            throw new Error(`Unexpected code ${first}`);\n        }\n        const hs = Counter.Hards.get(first);\n        if (qb64.length < hs) {\n            throw new Error(`Need ${hs - qb64.length} more characters.`);\n        }\n        const hard = qb64.slice(0, hs);\n        if (!Counter.Sizes.has(hard)) {\n            throw new Error(`Unsupported code ${hard}`);\n        }\n        const sizage = Counter.Sizes.get(hard);\n        const cs = sizage.hs + sizage.ss;\n        if (qb64.length < cs) {\n            throw new Error(`Need ${cs - qb64.length} more chars.`);\n        }\n        const scount = qb64.slice(sizage.hs, sizage.hs + sizage.ss);\n        const count = (0,_core_js__WEBPACK_IMPORTED_MODULE_1__.b64ToInt)(scount);\n        this._code = hard;\n        this._count = count;\n    }\n}\nCounter.Sizes = new Map(Object.entries({\n    '-A': new _matter_js__WEBPACK_IMPORTED_MODULE_0__.Sizage(2, 2, 4, 0),\n    '-B': new _matter_js__WEBPACK_IMPORTED_MODULE_0__.Sizage(2, 2, 4, 0),\n    '-C': new _matter_js__WEBPACK_IMPORTED_MODULE_0__.Sizage(2, 2, 4, 0),\n    '-D': new _matter_js__WEBPACK_IMPORTED_MODULE_0__.Sizage(2, 2, 4, 0),\n    '-E': new _matter_js__WEBPACK_IMPORTED_MODULE_0__.Sizage(2, 2, 4, 0),\n    '-F': new _matter_js__WEBPACK_IMPORTED_MODULE_0__.Sizage(2, 2, 4, 0),\n    '-G': new _matter_js__WEBPACK_IMPORTED_MODULE_0__.Sizage(2, 2, 4, 0),\n    '-H': new _matter_js__WEBPACK_IMPORTED_MODULE_0__.Sizage(2, 2, 4, 0),\n    '-I': new _matter_js__WEBPACK_IMPORTED_MODULE_0__.Sizage(2, 2, 4, 0),\n    '-J': new _matter_js__WEBPACK_IMPORTED_MODULE_0__.Sizage(2, 2, 4, 0),\n    '-K': new _matter_js__WEBPACK_IMPORTED_MODULE_0__.Sizage(2, 2, 4, 0),\n    '-L': new _matter_js__WEBPACK_IMPORTED_MODULE_0__.Sizage(2, 2, 4, 0),\n    '-V': new _matter_js__WEBPACK_IMPORTED_MODULE_0__.Sizage(2, 2, 4, 0),\n    '-0V': new _matter_js__WEBPACK_IMPORTED_MODULE_0__.Sizage(3, 5, 8, 0),\n    '--AAA': new _matter_js__WEBPACK_IMPORTED_MODULE_0__.Sizage(5, 3, 8, 0),\n}));\nCounter.Hards = new Map([\n    ['-A', 2],\n    ['-B', 2],\n    ['-C', 2],\n    ['-D', 2],\n    ['-E', 2],\n    ['-F', 2],\n    ['-G', 2],\n    ['-H', 2],\n    ['-I', 2],\n    ['-J', 2],\n    ['-K', 2],\n    ['-L', 2],\n    ['-M', 2],\n    ['-N', 2],\n    ['-O', 2],\n    ['-P', 2],\n    ['-Q', 2],\n    ['-R', 2],\n    ['-S', 2],\n    ['-T', 2],\n    ['-U', 2],\n    ['-V', 2],\n    ['-W', 2],\n    ['-X', 2],\n    ['-Y', 2],\n    ['-Z', 2],\n    ['-a', 2],\n    ['-b', 2],\n    ['-c', 2],\n    ['-d', 2],\n    ['-e', 2],\n    ['-f', 2],\n    ['-g', 2],\n    ['-h', 2],\n    ['-i', 2],\n    ['-j', 2],\n    ['-k', 2],\n    ['-l', 2],\n    ['-m', 2],\n    ['-n', 2],\n    ['-o', 2],\n    ['-p', 2],\n    ['-q', 2],\n    ['-r', 2],\n    ['-s', 2],\n    ['-t', 2],\n    ['-u', 2],\n    ['-v', 2],\n    ['-w', 2],\n    ['-x', 2],\n    ['-y', 2],\n    ['-z', 2],\n    ['-0', 3],\n    ['--', 5],\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2tlcmkvY29yZS9jb3VudGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTRDO0FBQ1M7QUFDOUMsMkJBQTJCLDZDQUFLO0FBQ3ZDO0FBQ0E7QUFDQSx1Q0FBdUM7QUFDdkMsb0NBQW9DO0FBQ3BDLDRDQUE0QztBQUM1Qyw0Q0FBNEM7QUFDNUMsNENBQTRDO0FBQzVDLHVDQUF1QztBQUN2Qyx1Q0FBdUM7QUFDdkMsMkNBQTJDO0FBQzNDLHVDQUF1QztBQUN2QyxnQ0FBZ0M7QUFDaEMscUNBQXFDO0FBQ3JDLDRDQUE0QztBQUM1Qyw4Q0FBOEM7QUFDOUMsa0RBQWtEO0FBQ2xELDBDQUEwQztBQUMxQztBQUNBO0FBQ087QUFDQTtBQUNQLGtCQUFrQix5Q0FBeUM7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQsS0FBSztBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBGQUEwRixJQUFJLEtBQUssVUFBVTtBQUM3RztBQUNBO0FBQ0Esb0RBQW9ELGtEQUFRO0FBQzVEO0FBQ0E7QUFDQSxpREFBaUQsT0FBTyxXQUFXLEtBQUs7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QiwyQ0FBQztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLDJDQUFDO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsa0RBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSw0QkFBNEIsT0FBTztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3RUFBd0UsR0FBRztBQUMzRTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsbUJBQW1CLGtEQUFRO0FBQzNCLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0ZBQXNGLElBQUksS0FBSyxVQUFVO0FBQ3pHO0FBQ0E7QUFDQSw2Q0FBNkMsT0FBTyxXQUFXLEtBQUs7QUFDcEU7QUFDQSx3QkFBd0IsS0FBSyxFQUFFLGtEQUFRLG1CQUFtQjtBQUMxRDtBQUNBLDhDQUE4QyxhQUFhLEtBQUssTUFBTTtBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0MsTUFBTTtBQUNyRDtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0Msa0JBQWtCO0FBQ3REO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRCxLQUFLO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLGtCQUFrQjtBQUN0RDtBQUNBO0FBQ0Esc0JBQXNCLGtEQUFRO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLDhDQUFNO0FBQ3BCLGNBQWMsOENBQU07QUFDcEIsY0FBYyw4Q0FBTTtBQUNwQixjQUFjLDhDQUFNO0FBQ3BCLGNBQWMsOENBQU07QUFDcEIsY0FBYyw4Q0FBTTtBQUNwQixjQUFjLDhDQUFNO0FBQ3BCLGNBQWMsOENBQU07QUFDcEIsY0FBYyw4Q0FBTTtBQUNwQixjQUFjLDhDQUFNO0FBQ3BCLGNBQWMsOENBQU07QUFDcEIsY0FBYyw4Q0FBTTtBQUNwQixjQUFjLDhDQUFNO0FBQ3BCLGVBQWUsOENBQU07QUFDckIsaUJBQWlCLDhDQUFNO0FBQ3ZCLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RlbGxhci1wcm9jdXJlbWVudC1kYXBwLy4vbm9kZV9tb2R1bGVzL3NpZ25pZnktdHMvZGlzdC9rZXJpL2NvcmUvY291bnRlci5qcz9iNDMyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvZGV4LCBTaXphZ2UgfSBmcm9tIFwiLi9tYXR0ZXIuanNcIjtcbmltcG9ydCB7IGIsIGI2NFRvSW50LCBkLCBpbnRUb0I2NCB9IGZyb20gXCIuL2NvcmUuanNcIjtcbmV4cG9ydCBjbGFzcyBDb3VudGVyQ29kZXggZXh0ZW5kcyBDb2RleCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMuQ29udHJvbGxlcklkeFNpZ3MgPSAnLUEnOyAvLyBRdWFsaWZpZWQgQmFzZTY0IEluZGV4ZWQgU2lnbmF0dXJlLlxuICAgICAgICB0aGlzLldpdG5lc3NJZHhTaWdzID0gJy1CJzsgLy8gUXVhbGlmaWVkIEJhc2U2NCBJbmRleGVkIFNpZ25hdHVyZS5cbiAgICAgICAgdGhpcy5Ob25UcmFuc1JlY2VpcHRDb3VwbGVzID0gJy1DJzsgLy8gQ29tcG9zZWQgQmFzZTY0IENvdXBsZSwgcHJlK2NpZy5cbiAgICAgICAgdGhpcy5UcmFuc1JlY2VpcHRRdWFkcnVwbGVzID0gJy1EJzsgLy8gQ29tcG9zZWQgQmFzZTY0IFF1YWRydXBsZSwgcHJlK3NudStkaWcrc2lnLlxuICAgICAgICB0aGlzLkZpcnN0U2VlblJlcGxheUNvdXBsZXMgPSAnLUUnOyAvLyBDb21wb3NlZCBCYXNlNjQgQ291cGxlLCBmbnUrZHRzLlxuICAgICAgICB0aGlzLlRyYW5zSWR4U2lnR3JvdXBzID0gJy1GJzsgLy8gQ29tcG9zZWQgQmFzZTY0IEdyb3VwLCBwcmUrc251K2RpZytDb250cm9sbGVySWR4U2lncyBncm91cC5cbiAgICAgICAgdGhpcy5TZWFsU291cmNlQ291cGxlcyA9ICctRyc7IC8vIENvbXBvc2VkIEJhc2U2NCBjb3VwbGUsIHNudStkaWcgb2YgZ2l2ZW4gZGVsZWdhdG9ycyBvciBpc3N1ZXJzIGV2ZW50XG4gICAgICAgIHRoaXMuVHJhbnNMYXN0SWR4U2lnR3JvdXBzID0gJy1IJzsgLy8gQ29tcG9zZWQgQmFzZTY0IEdyb3VwLCBwcmUrQ29udHJvbGxlcklkeFNpZ3MgZ3JvdXAuXG4gICAgICAgIHRoaXMuU2VhbFNvdXJjZVRyaXBsZXMgPSAnLUknOyAvLyBDb21wb3NlZCBCYXNlNjQgdHJpcGxlLCBwcmUrc251K2RpZyBvZiBhbmNob3Jpbmcgc291cmNlIGV2ZW50XG4gICAgICAgIHRoaXMuU2FkUGF0aFNpZyA9ICctSic7IC8vIENvbXBvc2VkIEJhc2U2NCBHcm91cCBwYXRoK1RyYW5zSWR4U2lnR3JvdXAgb2YgU0FJRCBvZiBjb250ZW50XG4gICAgICAgIHRoaXMuU2FkUGF0aFNpZ0dyb3VwID0gJy1LJzsgLy8gQ29tcG9zZWQgQmFzZTY0IEdyb3VwLCByb290KHBhdGgpK1NhaWRQYXRoQ291cGxlc1xuICAgICAgICB0aGlzLlBhdGhlZE1hdGVyaWFsUXVhZGxldHMgPSAnLUwnOyAvLyBDb21wb3NlZCBHcm91cGVkIFBhdGhlZCBNYXRlcmlhbCBRdWFkbGV0ICg0IGNoYXIgZWFjaClcbiAgICAgICAgdGhpcy5BdHRhY2hlZE1hdGVyaWFsUXVhZGxldHMgPSAnLVYnOyAvLyBDb21wb3NlZCBHcm91cGVkIEF0dGFjaGVkIE1hdGVyaWFsIFF1YWRsZXQgKDQgY2hhciBlYWNoKVxuICAgICAgICB0aGlzLkJpZ0F0dGFjaGVkTWF0ZXJpYWxRdWFkbGV0cyA9ICctMFYnOyAvLyBDb21wb3NlZCBHcm91cGVkIEF0dGFjaGVkIE1hdGVyaWFsIFF1YWRsZXQgKDQgY2hhciBlYWNoKVxuICAgICAgICB0aGlzLktFUklQcm90b2NvbFN0YWNrID0gJy0tQUFBJzsgLy8gS0VSSSBBQ0RDIFByb3RvY29sIFN0YWNrIENFU1IgVmVyc2lvblxuICAgIH1cbn1cbmV4cG9ydCBjb25zdCBDdHJEZXggPSBuZXcgQ291bnRlckNvZGV4KCk7XG5leHBvcnQgY2xhc3MgQ291bnRlciB7XG4gICAgY29uc3RydWN0b3IoeyBjb2RlLCBjb3VudCwgY291bnRCNjQsIHFiNjRiLCBxYjY0LCBxYjIgfSkge1xuICAgICAgICB0aGlzLl9jb2RlID0gJyc7XG4gICAgICAgIHRoaXMuX2NvdW50ID0gLTE7XG4gICAgICAgIGlmIChjb2RlICE9IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgaWYgKCFDb3VudGVyLlNpemVzLmhhcyhjb2RlKSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgXCJVbnN1cHBvcnRlZCBjb2RlPSR7Y29kZX0uYCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBzaXphZ2UgPSBDb3VudGVyLlNpemVzLmdldChjb2RlKTtcbiAgICAgICAgICAgIGNvbnN0IGNzID0gc2l6YWdlLmhzICsgc2l6YWdlLnNzO1xuICAgICAgICAgICAgaWYgKHNpemFnZS5mcyAhPSBjcyB8fCBjcyAlIDQgIT0gMCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgV2hvbGUgY29kZSBzaXplIG5vdCBmdWxsIHNpemUgb3Igbm90IG11bHRpcGxlIG9mIDQuIGNzPSR7Y3N9IGZzPSR7c2l6YWdlLmZzfS5gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChjb3VudCA9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBjb3VudCA9IGNvdW50QjY0ID09IHVuZGVmaW5lZCA/IDEgOiBiNjRUb0ludChjb3VudEI2NCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoY291bnQgPCAwIHx8IGNvdW50ID4gNjQgKiogc2l6YWdlLnNzIC0gMSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBjb3VudD0ke2NvdW50fSBmb3IgY29kZT0ke2NvZGV9LmApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5fY29kZSA9IGNvZGU7XG4gICAgICAgICAgICB0aGlzLl9jb3VudCA9IGNvdW50O1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHFiNjRiICE9IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgY29uc3QgcWI2NCA9IGQocWI2NGIpO1xuICAgICAgICAgICAgdGhpcy5fZXhmaWwocWI2NCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAocWI2NCAhPSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRoaXMuX2V4ZmlsKHFiNjQpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHFiMiAhPSB1bmRlZmluZWQpIHtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW1wcm9wZXIgaW5pdGlhbGl6YXRpb24gbmVlZCBlaXRoZXIgKGNvZGUgYW5kIGNvdW50KSBvciBxYjY0YiBvciBxYjY0IG9yIHFiMi5gKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXQgY29kZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NvZGU7XG4gICAgfVxuICAgIGdldCBjb3VudCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NvdW50O1xuICAgIH1cbiAgICBnZXQgcWI2NCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2luZmlsKCk7XG4gICAgfVxuICAgIGdldCBxYjY0YigpIHtcbiAgICAgICAgcmV0dXJuIGIodGhpcy5xYjY0KTtcbiAgICB9XG4gICAgY291bnRUb0I2NChsKSB7XG4gICAgICAgIGlmIChsID09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgY29uc3Qgc2l6YWdlID0gQ291bnRlci5TaXplcy5nZXQodGhpcy5jb2RlKTtcbiAgICAgICAgICAgIGwgPSBzaXphZ2Uuc3M7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGludFRvQjY0KHRoaXMuY291bnQsIGwpO1xuICAgIH1cbiAgICBzdGF0aWMgc2VtVmVyVG9CNjQodmVyc2lvbiA9ICcnLCBtYWpvciA9IDAsIG1pbm9yID0gMCwgcGF0Y2ggPSAwKSB7XG4gICAgICAgIGxldCBwYXJ0cyA9IFttYWpvciwgbWlub3IsIHBhdGNoXTtcbiAgICAgICAgaWYgKHZlcnNpb24gIT0gJycpIHtcbiAgICAgICAgICAgIGNvbnN0IHNzcGxpdHMgPSB2ZXJzaW9uLnNwbGl0KCcuJyk7XG4gICAgICAgICAgICBjb25zdCBzcGxpdHMgPSBzc3BsaXRzLm1hcCgoeCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICh4ID09ICcnKVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgICAgICAgICByZXR1cm4gcGFyc2VJbnQoeCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGNvbnN0IG9mZiA9IHNwbGl0cy5sZW5ndGg7XG4gICAgICAgICAgICBjb25zdCB4ID0gMyAtIG9mZjtcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgeDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgc3BsaXRzLnB1c2gocGFydHNbaSArIG9mZl0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcGFydHMgPSBzcGxpdHM7XG4gICAgICAgIH1cbiAgICAgICAgcGFydHMuZm9yRWFjaCgocCkgPT4ge1xuICAgICAgICAgICAgaWYgKHAgPCAwIHx8IHAgPiA2Mykge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgT3V0IG9mIGJvdW5kcyBzZW1hbnRpYyB2ZXJzaW9uLiBQYXJ0PSR7cH0gaXMgPCAwIG9yID4gNjMuYCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gcGFydHNcbiAgICAgICAgICAgIC5tYXAoKHApID0+IHtcbiAgICAgICAgICAgIHJldHVybiBpbnRUb0I2NChwLCAxKTtcbiAgICAgICAgfSlcbiAgICAgICAgICAgIC5qb2luKCcnKTtcbiAgICB9XG4gICAgX2luZmlsKCkge1xuICAgICAgICBjb25zdCBjb2RlID0gdGhpcy5jb2RlO1xuICAgICAgICBjb25zdCBjb3VudCA9IHRoaXMuY291bnQ7XG4gICAgICAgIGNvbnN0IHNpemFnZSA9IENvdW50ZXIuU2l6ZXMuZ2V0KGNvZGUpO1xuICAgICAgICBjb25zdCBjcyA9IHNpemFnZS5ocyArIHNpemFnZS5zcztcbiAgICAgICAgaWYgKHNpemFnZS5mcyAhPSBjcyB8fCBjcyAlIDQgIT0gMCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBXaG9sZSBjb2RlIHNpemUgbm90IGZ1bGwgc2l6ZSBvciBub3QgbXVsdGlwbGUgb2YgNC4gY3M9JHtjc30gZnM9JHtzaXphZ2UuZnN9LmApO1xuICAgICAgICB9XG4gICAgICAgIGlmIChjb3VudCA8IDAgfHwgY291bnQgPiA2NCAqKiBzaXphZ2Uuc3MgLSAxKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgY291bnQ9JHtjb3VudH0gZm9yIGNvZGU9JHtjb2RlfS5gKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBib3RoID0gYCR7Y29kZX0ke2ludFRvQjY0KGNvdW50LCBzaXphZ2Uuc3MpfWA7XG4gICAgICAgIGlmIChib3RoLmxlbmd0aCAlIDQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBzaXplID0gJHtib3RoLmxlbmd0aH0gb2YgJHtib3RofSBub3QgYSBtdWx0aXBsZSBvZiA0LmApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBib3RoO1xuICAgIH1cbiAgICBfZXhmaWwocWI2NCkge1xuICAgICAgICBpZiAocWI2NC5sZW5ndGggPT0gMCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdFbXB0eSBNYXRlcmlhbCcpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGZpcnN0ID0gcWI2NC5zbGljZSgwLCAyKTtcbiAgICAgICAgaWYgKCFDb3VudGVyLkhhcmRzLmhhcyhmaXJzdCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5leHBlY3RlZCBjb2RlICR7Zmlyc3R9YCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgaHMgPSBDb3VudGVyLkhhcmRzLmdldChmaXJzdCk7XG4gICAgICAgIGlmIChxYjY0Lmxlbmd0aCA8IGhzKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYE5lZWQgJHtocyAtIHFiNjQubGVuZ3RofSBtb3JlIGNoYXJhY3RlcnMuYCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgaGFyZCA9IHFiNjQuc2xpY2UoMCwgaHMpO1xuICAgICAgICBpZiAoIUNvdW50ZXIuU2l6ZXMuaGFzKGhhcmQpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuc3VwcG9ydGVkIGNvZGUgJHtoYXJkfWApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHNpemFnZSA9IENvdW50ZXIuU2l6ZXMuZ2V0KGhhcmQpO1xuICAgICAgICBjb25zdCBjcyA9IHNpemFnZS5ocyArIHNpemFnZS5zcztcbiAgICAgICAgaWYgKHFiNjQubGVuZ3RoIDwgY3MpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgTmVlZCAke2NzIC0gcWI2NC5sZW5ndGh9IG1vcmUgY2hhcnMuYCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgc2NvdW50ID0gcWI2NC5zbGljZShzaXphZ2UuaHMsIHNpemFnZS5ocyArIHNpemFnZS5zcyk7XG4gICAgICAgIGNvbnN0IGNvdW50ID0gYjY0VG9JbnQoc2NvdW50KTtcbiAgICAgICAgdGhpcy5fY29kZSA9IGhhcmQ7XG4gICAgICAgIHRoaXMuX2NvdW50ID0gY291bnQ7XG4gICAgfVxufVxuQ291bnRlci5TaXplcyA9IG5ldyBNYXAoT2JqZWN0LmVudHJpZXMoe1xuICAgICctQSc6IG5ldyBTaXphZ2UoMiwgMiwgNCwgMCksXG4gICAgJy1CJzogbmV3IFNpemFnZSgyLCAyLCA0LCAwKSxcbiAgICAnLUMnOiBuZXcgU2l6YWdlKDIsIDIsIDQsIDApLFxuICAgICctRCc6IG5ldyBTaXphZ2UoMiwgMiwgNCwgMCksXG4gICAgJy1FJzogbmV3IFNpemFnZSgyLCAyLCA0LCAwKSxcbiAgICAnLUYnOiBuZXcgU2l6YWdlKDIsIDIsIDQsIDApLFxuICAgICctRyc6IG5ldyBTaXphZ2UoMiwgMiwgNCwgMCksXG4gICAgJy1IJzogbmV3IFNpemFnZSgyLCAyLCA0LCAwKSxcbiAgICAnLUknOiBuZXcgU2l6YWdlKDIsIDIsIDQsIDApLFxuICAgICctSic6IG5ldyBTaXphZ2UoMiwgMiwgNCwgMCksXG4gICAgJy1LJzogbmV3IFNpemFnZSgyLCAyLCA0LCAwKSxcbiAgICAnLUwnOiBuZXcgU2l6YWdlKDIsIDIsIDQsIDApLFxuICAgICctVic6IG5ldyBTaXphZ2UoMiwgMiwgNCwgMCksXG4gICAgJy0wVic6IG5ldyBTaXphZ2UoMywgNSwgOCwgMCksXG4gICAgJy0tQUFBJzogbmV3IFNpemFnZSg1LCAzLCA4LCAwKSxcbn0pKTtcbkNvdW50ZXIuSGFyZHMgPSBuZXcgTWFwKFtcbiAgICBbJy1BJywgMl0sXG4gICAgWyctQicsIDJdLFxuICAgIFsnLUMnLCAyXSxcbiAgICBbJy1EJywgMl0sXG4gICAgWyctRScsIDJdLFxuICAgIFsnLUYnLCAyXSxcbiAgICBbJy1HJywgMl0sXG4gICAgWyctSCcsIDJdLFxuICAgIFsnLUknLCAyXSxcbiAgICBbJy1KJywgMl0sXG4gICAgWyctSycsIDJdLFxuICAgIFsnLUwnLCAyXSxcbiAgICBbJy1NJywgMl0sXG4gICAgWyctTicsIDJdLFxuICAgIFsnLU8nLCAyXSxcbiAgICBbJy1QJywgMl0sXG4gICAgWyctUScsIDJdLFxuICAgIFsnLVInLCAyXSxcbiAgICBbJy1TJywgMl0sXG4gICAgWyctVCcsIDJdLFxuICAgIFsnLVUnLCAyXSxcbiAgICBbJy1WJywgMl0sXG4gICAgWyctVycsIDJdLFxuICAgIFsnLVgnLCAyXSxcbiAgICBbJy1ZJywgMl0sXG4gICAgWyctWicsIDJdLFxuICAgIFsnLWEnLCAyXSxcbiAgICBbJy1iJywgMl0sXG4gICAgWyctYycsIDJdLFxuICAgIFsnLWQnLCAyXSxcbiAgICBbJy1lJywgMl0sXG4gICAgWyctZicsIDJdLFxuICAgIFsnLWcnLCAyXSxcbiAgICBbJy1oJywgMl0sXG4gICAgWyctaScsIDJdLFxuICAgIFsnLWonLCAyXSxcbiAgICBbJy1rJywgMl0sXG4gICAgWyctbCcsIDJdLFxuICAgIFsnLW0nLCAyXSxcbiAgICBbJy1uJywgMl0sXG4gICAgWyctbycsIDJdLFxuICAgIFsnLXAnLCAyXSxcbiAgICBbJy1xJywgMl0sXG4gICAgWyctcicsIDJdLFxuICAgIFsnLXMnLCAyXSxcbiAgICBbJy10JywgMl0sXG4gICAgWyctdScsIDJdLFxuICAgIFsnLXYnLCAyXSxcbiAgICBbJy13JywgMl0sXG4gICAgWycteCcsIDJdLFxuICAgIFsnLXknLCAyXSxcbiAgICBbJy16JywgMl0sXG4gICAgWyctMCcsIDNdLFxuICAgIFsnLS0nLCA1XSxcbl0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/core/counter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/core/decrypter.js":
/*!*************************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/core/decrypter.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Decrypter: () => (/* binding */ Decrypter)\n/* harmony export */ });\n/* harmony import */ var libsodium_wrappers_sumo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! libsodium-wrappers-sumo */ \"(ssr)/./node_modules/libsodium-wrappers-sumo/dist/modules-sumo/libsodium-wrappers.js\");\n/* harmony import */ var _matter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./matter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/matter.js\");\n/* harmony import */ var _signer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./signer.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/signer.js\");\n/* harmony import */ var _cipher_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cipher.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/cipher.js\");\n/* harmony import */ var _kering_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./kering.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/kering.js\");\n/* harmony import */ var _salter_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./salter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/salter.js\");\n\n\n\n\n\n\nclass Decrypter extends _matter_js__WEBPACK_IMPORTED_MODULE_1__.Matter {\n    constructor({ raw, code = _matter_js__WEBPACK_IMPORTED_MODULE_1__.MtrDex.X25519_Private, qb64, qb64b, qb2 }, seed = undefined) {\n        try {\n            super({ raw, code, qb64, qb64b, qb2 });\n        }\n        catch (e) {\n            if (e instanceof _kering_js__WEBPACK_IMPORTED_MODULE_4__.EmptyMaterialError) {\n                if (seed != undefined) {\n                    const signer = new _signer_js__WEBPACK_IMPORTED_MODULE_2__.Signer({ qb64b: seed });\n                    if (signer.code != _matter_js__WEBPACK_IMPORTED_MODULE_1__.MtrDex.Ed25519_Seed) {\n                        throw new Error(`Unsupported signing seed derivation code ${signer.code}`);\n                    }\n                    const sigkey = new Uint8Array(signer.raw.length + signer.verfer.raw.length);\n                    sigkey.set(signer.raw);\n                    sigkey.set(signer.verfer.raw, signer.raw.length);\n                    raw =\n                        libsodium_wrappers_sumo__WEBPACK_IMPORTED_MODULE_0__.crypto_sign_ed25519_sk_to_curve25519(sigkey);\n                    super({ raw, code, qb64, qb64b, qb2 });\n                }\n                else {\n                    throw e;\n                }\n            }\n            else {\n                throw e;\n            }\n        }\n        if (this.code == _matter_js__WEBPACK_IMPORTED_MODULE_1__.MtrDex.X25519_Private) {\n            this._decrypt = this._x25519;\n        }\n        else {\n            throw new Error(`Unsupported decrypter code = ${this.code}.`);\n        }\n    }\n    decrypt(ser = null, cipher = null, transferable = false) {\n        if (ser == null && cipher == null) {\n            throw new _kering_js__WEBPACK_IMPORTED_MODULE_4__.EmptyMaterialError('Neither ser or cipher were provided');\n        }\n        if (ser != null) {\n            cipher = new _cipher_js__WEBPACK_IMPORTED_MODULE_3__.Cipher({ qb64b: ser });\n        }\n        return this._decrypt(cipher, this.raw, transferable);\n    }\n    _x25519(cipher, prikey, transferable = false) {\n        const pubkey = libsodium_wrappers_sumo__WEBPACK_IMPORTED_MODULE_0__.crypto_scalarmult_base(prikey);\n        const plain = libsodium_wrappers_sumo__WEBPACK_IMPORTED_MODULE_0__.crypto_box_seal_open(cipher.raw, pubkey, prikey);\n        if (cipher.code == _matter_js__WEBPACK_IMPORTED_MODULE_1__.MtrDex.X25519_Cipher_Salt) {\n            return new _salter_js__WEBPACK_IMPORTED_MODULE_5__.Salter({ qb64b: plain });\n        }\n        else if (cipher.code == _matter_js__WEBPACK_IMPORTED_MODULE_1__.MtrDex.X25519_Cipher_Seed) {\n            return new _signer_js__WEBPACK_IMPORTED_MODULE_2__.Signer({ qb64b: plain, transferable: transferable });\n        }\n        else {\n            throw new Error(`Unsupported cipher text code == ${cipher.code}`);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2tlcmkvY29yZS9kZWNyeXB0ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFnRDtBQUNIO0FBQ1I7QUFDQTtBQUNZO0FBQ1o7QUFDOUIsd0JBQXdCLDhDQUFNO0FBQ3JDLGtCQUFrQixZQUFZLDhDQUFNLG1DQUFtQztBQUN2RTtBQUNBLG9CQUFvQiw2QkFBNkI7QUFDakQ7QUFDQTtBQUNBLDZCQUE2QiwwREFBa0I7QUFDL0M7QUFDQSx1Q0FBdUMsOENBQU0sR0FBRyxhQUFhO0FBQzdELHVDQUF1Qyw4Q0FBTTtBQUM3QyxvRkFBb0YsWUFBWTtBQUNoRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHlGQUE4QztBQUN0RSw0QkFBNEIsNkJBQTZCO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qiw4Q0FBTTtBQUMvQjtBQUNBO0FBQ0E7QUFDQSw0REFBNEQsVUFBVTtBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwwREFBa0I7QUFDeEM7QUFDQTtBQUNBLHlCQUF5Qiw4Q0FBTSxHQUFHLFlBQVk7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsMkVBQWdDO0FBQ3ZELHNCQUFzQix5RUFBOEI7QUFDcEQsMkJBQTJCLDhDQUFNO0FBQ2pDLHVCQUF1Qiw4Q0FBTSxHQUFHLGNBQWM7QUFDOUM7QUFDQSxnQ0FBZ0MsOENBQU07QUFDdEMsdUJBQXVCLDhDQUFNLEdBQUcsMENBQTBDO0FBQzFFO0FBQ0E7QUFDQSwrREFBK0QsWUFBWTtBQUMzRTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdGVsbGFyLXByb2N1cmVtZW50LWRhcHAvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2tlcmkvY29yZS9kZWNyeXB0ZXIuanM/M2M3MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbGlic29kaXVtIGZyb20gJ2xpYnNvZGl1bS13cmFwcGVycy1zdW1vJztcbmltcG9ydCB7IE1hdHRlciwgTXRyRGV4IH0gZnJvbSBcIi4vbWF0dGVyLmpzXCI7XG5pbXBvcnQgeyBTaWduZXIgfSBmcm9tIFwiLi9zaWduZXIuanNcIjtcbmltcG9ydCB7IENpcGhlciB9IGZyb20gXCIuL2NpcGhlci5qc1wiO1xuaW1wb3J0IHsgRW1wdHlNYXRlcmlhbEVycm9yIH0gZnJvbSBcIi4va2VyaW5nLmpzXCI7XG5pbXBvcnQgeyBTYWx0ZXIgfSBmcm9tIFwiLi9zYWx0ZXIuanNcIjtcbmV4cG9ydCBjbGFzcyBEZWNyeXB0ZXIgZXh0ZW5kcyBNYXR0ZXIge1xuICAgIGNvbnN0cnVjdG9yKHsgcmF3LCBjb2RlID0gTXRyRGV4LlgyNTUxOV9Qcml2YXRlLCBxYjY0LCBxYjY0YiwgcWIyIH0sIHNlZWQgPSB1bmRlZmluZWQpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHN1cGVyKHsgcmF3LCBjb2RlLCBxYjY0LCBxYjY0YiwgcWIyIH0pO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICBpZiAoZSBpbnN0YW5jZW9mIEVtcHR5TWF0ZXJpYWxFcnJvcikge1xuICAgICAgICAgICAgICAgIGlmIChzZWVkICE9IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBzaWduZXIgPSBuZXcgU2lnbmVyKHsgcWI2NGI6IHNlZWQgfSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzaWduZXIuY29kZSAhPSBNdHJEZXguRWQyNTUxOV9TZWVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuc3VwcG9ydGVkIHNpZ25pbmcgc2VlZCBkZXJpdmF0aW9uIGNvZGUgJHtzaWduZXIuY29kZX1gKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjb25zdCBzaWdrZXkgPSBuZXcgVWludDhBcnJheShzaWduZXIucmF3Lmxlbmd0aCArIHNpZ25lci52ZXJmZXIucmF3Lmxlbmd0aCk7XG4gICAgICAgICAgICAgICAgICAgIHNpZ2tleS5zZXQoc2lnbmVyLnJhdyk7XG4gICAgICAgICAgICAgICAgICAgIHNpZ2tleS5zZXQoc2lnbmVyLnZlcmZlci5yYXcsIHNpZ25lci5yYXcubGVuZ3RoKTtcbiAgICAgICAgICAgICAgICAgICAgcmF3ID1cbiAgICAgICAgICAgICAgICAgICAgICAgIGxpYnNvZGl1bS5jcnlwdG9fc2lnbl9lZDI1NTE5X3NrX3RvX2N1cnZlMjU1MTkoc2lna2V5KTtcbiAgICAgICAgICAgICAgICAgICAgc3VwZXIoeyByYXcsIGNvZGUsIHFiNjQsIHFiNjRiLCBxYjIgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRocm93IGU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuY29kZSA9PSBNdHJEZXguWDI1NTE5X1ByaXZhdGUpIHtcbiAgICAgICAgICAgIHRoaXMuX2RlY3J5cHQgPSB0aGlzLl94MjU1MTk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuc3VwcG9ydGVkIGRlY3J5cHRlciBjb2RlID0gJHt0aGlzLmNvZGV9LmApO1xuICAgICAgICB9XG4gICAgfVxuICAgIGRlY3J5cHQoc2VyID0gbnVsbCwgY2lwaGVyID0gbnVsbCwgdHJhbnNmZXJhYmxlID0gZmFsc2UpIHtcbiAgICAgICAgaWYgKHNlciA9PSBudWxsICYmIGNpcGhlciA9PSBudWxsKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRW1wdHlNYXRlcmlhbEVycm9yKCdOZWl0aGVyIHNlciBvciBjaXBoZXIgd2VyZSBwcm92aWRlZCcpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzZXIgIT0gbnVsbCkge1xuICAgICAgICAgICAgY2lwaGVyID0gbmV3IENpcGhlcih7IHFiNjRiOiBzZXIgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX2RlY3J5cHQoY2lwaGVyLCB0aGlzLnJhdywgdHJhbnNmZXJhYmxlKTtcbiAgICB9XG4gICAgX3gyNTUxOShjaXBoZXIsIHByaWtleSwgdHJhbnNmZXJhYmxlID0gZmFsc2UpIHtcbiAgICAgICAgY29uc3QgcHVia2V5ID0gbGlic29kaXVtLmNyeXB0b19zY2FsYXJtdWx0X2Jhc2UocHJpa2V5KTtcbiAgICAgICAgY29uc3QgcGxhaW4gPSBsaWJzb2RpdW0uY3J5cHRvX2JveF9zZWFsX29wZW4oY2lwaGVyLnJhdywgcHVia2V5LCBwcmlrZXkpO1xuICAgICAgICBpZiAoY2lwaGVyLmNvZGUgPT0gTXRyRGV4LlgyNTUxOV9DaXBoZXJfU2FsdCkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBTYWx0ZXIoeyBxYjY0YjogcGxhaW4gfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoY2lwaGVyLmNvZGUgPT0gTXRyRGV4LlgyNTUxOV9DaXBoZXJfU2VlZCkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBTaWduZXIoeyBxYjY0YjogcGxhaW4sIHRyYW5zZmVyYWJsZTogdHJhbnNmZXJhYmxlIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbnN1cHBvcnRlZCBjaXBoZXIgdGV4dCBjb2RlID09ICR7Y2lwaGVyLmNvZGV9YCk7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/core/decrypter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/core/diger.js":
/*!*********************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/core/diger.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Diger: () => (/* binding */ Diger)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_blake3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/blake3 */ \"(ssr)/./node_modules/@noble/hashes/esm/blake3.js\");\n/* harmony import */ var _matter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./matter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/matter.js\");\n\n\n/**\n * @description : Diger is subset of Matter and is used to verify the digest of serialization\n * It uses  .raw : as digest\n * .code as digest algorithm\n *\n */\nclass Diger extends _matter_js__WEBPACK_IMPORTED_MODULE_0__.Matter {\n    // This constructor will assign digest verification function to ._verify\n    constructor({ raw, code = _matter_js__WEBPACK_IMPORTED_MODULE_0__.MtrDex.Blake3_256, qb64, qb64b, qb2 }, ser = null) {\n        try {\n            super({ raw, code, qb64, qb64b, qb2 });\n        }\n        catch (error) {\n            if (ser == null) {\n                throw error;\n            }\n            if (code === _matter_js__WEBPACK_IMPORTED_MODULE_0__.MtrDex.Blake3_256) {\n                const dig = _noble_hashes_blake3__WEBPACK_IMPORTED_MODULE_1__.blake3.create({ dkLen: 32 }).update(ser).digest();\n                super({ raw: dig, code: code });\n            }\n            else {\n                throw new Error(`Unsupported code = ${code} for digester.`);\n            }\n        }\n        if (code === _matter_js__WEBPACK_IMPORTED_MODULE_0__.MtrDex.Blake3_256) {\n            this._verify = this.blake3_256;\n        }\n        else {\n            throw new Error(`Unsupported code = ${code} for digester.`);\n        }\n    }\n    /**\n     *\n     * @param {Uint8Array} ser  serialization bytes\n     * @description  This method will return true if digest of bytes serialization ser matches .raw\n     * using .raw as reference digest for ._verify digest algorithm determined\n     by .code\n     */\n    verify(ser) {\n        return this._verify(ser, this.raw);\n    }\n    compare(ser, dig = null, diger = null) {\n        if (dig != null) {\n            if (dig.toString() == this.qb64) {\n                return true;\n            }\n            diger = new Diger({ qb64b: dig });\n        }\n        else if (diger != null) {\n            if (diger.qb64b == this.qb64b) {\n                return true;\n            }\n        }\n        else {\n            throw new Error('Both dig and diger may not be None.');\n        }\n        if (diger.code == this.code) {\n            return false;\n        }\n        return diger.verify(ser) && this.verify(ser);\n    }\n    blake3_256(ser, dig) {\n        const digest = _noble_hashes_blake3__WEBPACK_IMPORTED_MODULE_1__.blake3.create({ dkLen: 32 }).update(ser).digest();\n        return (digest.length == dig.length && digest.toString() === dig.toString());\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2tlcmkvY29yZS9kaWdlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBOEM7QUFDRDtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxvQkFBb0IsOENBQU07QUFDakM7QUFDQSxrQkFBa0IsWUFBWSw4Q0FBTSwrQkFBK0I7QUFDbkU7QUFDQSxvQkFBb0IsNkJBQTZCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsOENBQU07QUFDL0IsNEJBQTRCLHdEQUFNLFVBQVUsV0FBVztBQUN2RCx3QkFBd0Isc0JBQXNCO0FBQzlDO0FBQ0E7QUFDQSxzREFBc0QsTUFBTTtBQUM1RDtBQUNBO0FBQ0EscUJBQXFCLDhDQUFNO0FBQzNCO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxNQUFNO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxZQUFZO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxZQUFZO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1Qix3REFBTSxVQUFVLFdBQVc7QUFDbEQ7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RlbGxhci1wcm9jdXJlbWVudC1kYXBwLy4vbm9kZV9tb2R1bGVzL3NpZ25pZnktdHMvZGlzdC9rZXJpL2NvcmUvZGlnZXIuanM/N2UyZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBibGFrZTMgfSBmcm9tICdAbm9ibGUvaGFzaGVzL2JsYWtlMyc7XG5pbXBvcnQgeyBNYXR0ZXIsIE10ckRleCB9IGZyb20gXCIuL21hdHRlci5qc1wiO1xuLyoqXG4gKiBAZGVzY3JpcHRpb24gOiBEaWdlciBpcyBzdWJzZXQgb2YgTWF0dGVyIGFuZCBpcyB1c2VkIHRvIHZlcmlmeSB0aGUgZGlnZXN0IG9mIHNlcmlhbGl6YXRpb25cbiAqIEl0IHVzZXMgIC5yYXcgOiBhcyBkaWdlc3RcbiAqIC5jb2RlIGFzIGRpZ2VzdCBhbGdvcml0aG1cbiAqXG4gKi9cbmV4cG9ydCBjbGFzcyBEaWdlciBleHRlbmRzIE1hdHRlciB7XG4gICAgLy8gVGhpcyBjb25zdHJ1Y3RvciB3aWxsIGFzc2lnbiBkaWdlc3QgdmVyaWZpY2F0aW9uIGZ1bmN0aW9uIHRvIC5fdmVyaWZ5XG4gICAgY29uc3RydWN0b3IoeyByYXcsIGNvZGUgPSBNdHJEZXguQmxha2UzXzI1NiwgcWI2NCwgcWI2NGIsIHFiMiB9LCBzZXIgPSBudWxsKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBzdXBlcih7IHJhdywgY29kZSwgcWI2NCwgcWI2NGIsIHFiMiB9KTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGlmIChzZXIgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGNvZGUgPT09IE10ckRleC5CbGFrZTNfMjU2KSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZGlnID0gYmxha2UzLmNyZWF0ZSh7IGRrTGVuOiAzMiB9KS51cGRhdGUoc2VyKS5kaWdlc3QoKTtcbiAgICAgICAgICAgICAgICBzdXBlcih7IHJhdzogZGlnLCBjb2RlOiBjb2RlIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbnN1cHBvcnRlZCBjb2RlID0gJHtjb2RlfSBmb3IgZGlnZXN0ZXIuYCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNvZGUgPT09IE10ckRleC5CbGFrZTNfMjU2KSB7XG4gICAgICAgICAgICB0aGlzLl92ZXJpZnkgPSB0aGlzLmJsYWtlM18yNTY7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuc3VwcG9ydGVkIGNvZGUgPSAke2NvZGV9IGZvciBkaWdlc3Rlci5gKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7VWludDhBcnJheX0gc2VyICBzZXJpYWxpemF0aW9uIGJ5dGVzXG4gICAgICogQGRlc2NyaXB0aW9uICBUaGlzIG1ldGhvZCB3aWxsIHJldHVybiB0cnVlIGlmIGRpZ2VzdCBvZiBieXRlcyBzZXJpYWxpemF0aW9uIHNlciBtYXRjaGVzIC5yYXdcbiAgICAgKiB1c2luZyAucmF3IGFzIHJlZmVyZW5jZSBkaWdlc3QgZm9yIC5fdmVyaWZ5IGRpZ2VzdCBhbGdvcml0aG0gZGV0ZXJtaW5lZFxuICAgICBieSAuY29kZVxuICAgICAqL1xuICAgIHZlcmlmeShzZXIpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3ZlcmlmeShzZXIsIHRoaXMucmF3KTtcbiAgICB9XG4gICAgY29tcGFyZShzZXIsIGRpZyA9IG51bGwsIGRpZ2VyID0gbnVsbCkge1xuICAgICAgICBpZiAoZGlnICE9IG51bGwpIHtcbiAgICAgICAgICAgIGlmIChkaWcudG9TdHJpbmcoKSA9PSB0aGlzLnFiNjQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGRpZ2VyID0gbmV3IERpZ2VyKHsgcWI2NGI6IGRpZyB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChkaWdlciAhPSBudWxsKSB7XG4gICAgICAgICAgICBpZiAoZGlnZXIucWI2NGIgPT0gdGhpcy5xYjY0Yikge1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdCb3RoIGRpZyBhbmQgZGlnZXIgbWF5IG5vdCBiZSBOb25lLicpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChkaWdlci5jb2RlID09IHRoaXMuY29kZSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkaWdlci52ZXJpZnkoc2VyKSAmJiB0aGlzLnZlcmlmeShzZXIpO1xuICAgIH1cbiAgICBibGFrZTNfMjU2KHNlciwgZGlnKSB7XG4gICAgICAgIGNvbnN0IGRpZ2VzdCA9IGJsYWtlMy5jcmVhdGUoeyBka0xlbjogMzIgfSkudXBkYXRlKHNlcikuZGlnZXN0KCk7XG4gICAgICAgIHJldHVybiAoZGlnZXN0Lmxlbmd0aCA9PSBkaWcubGVuZ3RoICYmIGRpZ2VzdC50b1N0cmluZygpID09PSBkaWcudG9TdHJpbmcoKSk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/core/diger.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/core/encrypter.js":
/*!*************************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/core/encrypter.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Encrypter: () => (/* binding */ Encrypter)\n/* harmony export */ });\n/* harmony import */ var libsodium_wrappers_sumo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! libsodium-wrappers-sumo */ \"(ssr)/./node_modules/libsodium-wrappers-sumo/dist/modules-sumo/libsodium-wrappers.js\");\n/* harmony import */ var _matter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./matter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/matter.js\");\n/* harmony import */ var _verfer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./verfer.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/verfer.js\");\n/* harmony import */ var _signer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./signer.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/signer.js\");\n/* harmony import */ var _cipher_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cipher.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/cipher.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/utils.js\");\n\n\n\n\n\n\nclass Encrypter extends _matter_js__WEBPACK_IMPORTED_MODULE_1__.Matter {\n    constructor({ raw, code = _matter_js__WEBPACK_IMPORTED_MODULE_1__.MtrDex.X25519, qb64, qb64b, qb2 }, verkey = null) {\n        if (raw == undefined && verkey != null) {\n            const verfer = new _verfer_js__WEBPACK_IMPORTED_MODULE_2__.Verfer({ qb64b: verkey });\n            if (!Array.from([_matter_js__WEBPACK_IMPORTED_MODULE_1__.MtrDex.Ed25519N, _matter_js__WEBPACK_IMPORTED_MODULE_1__.MtrDex.Ed25519]).includes(verfer.code)) {\n                throw new Error(`Unsupported verkey derivation code = ${verfer.code}.`);\n            }\n            raw = libsodium_wrappers_sumo__WEBPACK_IMPORTED_MODULE_0__.crypto_sign_ed25519_pk_to_curve25519(verfer.raw);\n        }\n        super({ raw, code, qb64, qb64b, qb2 });\n        if (this.code == _matter_js__WEBPACK_IMPORTED_MODULE_1__.MtrDex.X25519) {\n            this._encrypt = this._x25519;\n        }\n        else {\n            throw new Error(`Unsupported encrypter code = ${this.code}.`);\n        }\n    }\n    verifySeed(seed) {\n        const signer = new _signer_js__WEBPACK_IMPORTED_MODULE_3__.Signer({ qb64b: seed });\n        const keypair = libsodium_wrappers_sumo__WEBPACK_IMPORTED_MODULE_0__.crypto_sign_seed_keypair(signer.raw);\n        const pubkey = libsodium_wrappers_sumo__WEBPACK_IMPORTED_MODULE_0__.crypto_sign_ed25519_pk_to_curve25519(keypair.publicKey);\n        return (0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.arrayEquals)(pubkey, this.raw);\n    }\n    encrypt(ser = null, matter = null) {\n        if (ser == null && matter == null) {\n            throw new Error('Neither ser nor matter are provided.');\n        }\n        if (ser != null) {\n            matter = new _matter_js__WEBPACK_IMPORTED_MODULE_1__.Matter({ qb64b: ser });\n        }\n        let code;\n        if (matter.code == _matter_js__WEBPACK_IMPORTED_MODULE_1__.MtrDex.Salt_128) {\n            code = _matter_js__WEBPACK_IMPORTED_MODULE_1__.MtrDex.X25519_Cipher_Salt;\n        }\n        else {\n            code = _matter_js__WEBPACK_IMPORTED_MODULE_1__.MtrDex.X25519_Cipher_Seed;\n        }\n        return this._encrypt(matter.qb64, this.raw, code);\n    }\n    _x25519(ser, pubkey, code) {\n        const raw = libsodium_wrappers_sumo__WEBPACK_IMPORTED_MODULE_0__.crypto_box_seal(ser, pubkey);\n        return new _cipher_js__WEBPACK_IMPORTED_MODULE_4__.Cipher({ raw: raw, code: code });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2tlcmkvY29yZS9lbmNyeXB0ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFnRDtBQUNIO0FBQ1I7QUFDQTtBQUNBO0FBQ0k7QUFDbEMsd0JBQXdCLDhDQUFNO0FBQ3JDLGtCQUFrQixZQUFZLDhDQUFNLDJCQUEyQjtBQUMvRDtBQUNBLCtCQUErQiw4Q0FBTSxHQUFHLGVBQWU7QUFDdkQsNkJBQTZCLDhDQUFNLFdBQVcsOENBQU07QUFDcEQsd0VBQXdFLFlBQVk7QUFDcEY7QUFDQSxrQkFBa0IseUZBQThDO0FBQ2hFO0FBQ0EsZ0JBQWdCLDZCQUE2QjtBQUM3Qyx5QkFBeUIsOENBQU07QUFDL0I7QUFDQTtBQUNBO0FBQ0EsNERBQTRELFVBQVU7QUFDdEU7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLDhDQUFNLEdBQUcsYUFBYTtBQUNqRCx3QkFBd0IsNkVBQWtDO0FBQzFELHVCQUF1Qix5RkFBOEM7QUFDckUsZUFBZSxzREFBVztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsOENBQU0sR0FBRyxZQUFZO0FBQzlDO0FBQ0E7QUFDQSwyQkFBMkIsOENBQU07QUFDakMsbUJBQW1CLDhDQUFNO0FBQ3pCO0FBQ0E7QUFDQSxtQkFBbUIsOENBQU07QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isb0VBQXlCO0FBQzdDLG1CQUFtQiw4Q0FBTSxHQUFHLHNCQUFzQjtBQUNsRDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RlbGxhci1wcm9jdXJlbWVudC1kYXBwLy4vbm9kZV9tb2R1bGVzL3NpZ25pZnktdHMvZGlzdC9rZXJpL2NvcmUvZW5jcnlwdGVyLmpzP2M3MGEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGxpYnNvZGl1bSBmcm9tICdsaWJzb2RpdW0td3JhcHBlcnMtc3Vtbyc7XG5pbXBvcnQgeyBNYXR0ZXIsIE10ckRleCB9IGZyb20gXCIuL21hdHRlci5qc1wiO1xuaW1wb3J0IHsgVmVyZmVyIH0gZnJvbSBcIi4vdmVyZmVyLmpzXCI7XG5pbXBvcnQgeyBTaWduZXIgfSBmcm9tIFwiLi9zaWduZXIuanNcIjtcbmltcG9ydCB7IENpcGhlciB9IGZyb20gXCIuL2NpcGhlci5qc1wiO1xuaW1wb3J0IHsgYXJyYXlFcXVhbHMgfSBmcm9tIFwiLi91dGlscy5qc1wiO1xuZXhwb3J0IGNsYXNzIEVuY3J5cHRlciBleHRlbmRzIE1hdHRlciB7XG4gICAgY29uc3RydWN0b3IoeyByYXcsIGNvZGUgPSBNdHJEZXguWDI1NTE5LCBxYjY0LCBxYjY0YiwgcWIyIH0sIHZlcmtleSA9IG51bGwpIHtcbiAgICAgICAgaWYgKHJhdyA9PSB1bmRlZmluZWQgJiYgdmVya2V5ICE9IG51bGwpIHtcbiAgICAgICAgICAgIGNvbnN0IHZlcmZlciA9IG5ldyBWZXJmZXIoeyBxYjY0YjogdmVya2V5IH0pO1xuICAgICAgICAgICAgaWYgKCFBcnJheS5mcm9tKFtNdHJEZXguRWQyNTUxOU4sIE10ckRleC5FZDI1NTE5XSkuaW5jbHVkZXModmVyZmVyLmNvZGUpKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbnN1cHBvcnRlZCB2ZXJrZXkgZGVyaXZhdGlvbiBjb2RlID0gJHt2ZXJmZXIuY29kZX0uYCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByYXcgPSBsaWJzb2RpdW0uY3J5cHRvX3NpZ25fZWQyNTUxOV9wa190b19jdXJ2ZTI1NTE5KHZlcmZlci5yYXcpO1xuICAgICAgICB9XG4gICAgICAgIHN1cGVyKHsgcmF3LCBjb2RlLCBxYjY0LCBxYjY0YiwgcWIyIH0pO1xuICAgICAgICBpZiAodGhpcy5jb2RlID09IE10ckRleC5YMjU1MTkpIHtcbiAgICAgICAgICAgIHRoaXMuX2VuY3J5cHQgPSB0aGlzLl94MjU1MTk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuc3VwcG9ydGVkIGVuY3J5cHRlciBjb2RlID0gJHt0aGlzLmNvZGV9LmApO1xuICAgICAgICB9XG4gICAgfVxuICAgIHZlcmlmeVNlZWQoc2VlZCkge1xuICAgICAgICBjb25zdCBzaWduZXIgPSBuZXcgU2lnbmVyKHsgcWI2NGI6IHNlZWQgfSk7XG4gICAgICAgIGNvbnN0IGtleXBhaXIgPSBsaWJzb2RpdW0uY3J5cHRvX3NpZ25fc2VlZF9rZXlwYWlyKHNpZ25lci5yYXcpO1xuICAgICAgICBjb25zdCBwdWJrZXkgPSBsaWJzb2RpdW0uY3J5cHRvX3NpZ25fZWQyNTUxOV9wa190b19jdXJ2ZTI1NTE5KGtleXBhaXIucHVibGljS2V5KTtcbiAgICAgICAgcmV0dXJuIGFycmF5RXF1YWxzKHB1YmtleSwgdGhpcy5yYXcpO1xuICAgIH1cbiAgICBlbmNyeXB0KHNlciA9IG51bGwsIG1hdHRlciA9IG51bGwpIHtcbiAgICAgICAgaWYgKHNlciA9PSBudWxsICYmIG1hdHRlciA9PSBudWxsKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ05laXRoZXIgc2VyIG5vciBtYXR0ZXIgYXJlIHByb3ZpZGVkLicpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzZXIgIT0gbnVsbCkge1xuICAgICAgICAgICAgbWF0dGVyID0gbmV3IE1hdHRlcih7IHFiNjRiOiBzZXIgfSk7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGNvZGU7XG4gICAgICAgIGlmIChtYXR0ZXIuY29kZSA9PSBNdHJEZXguU2FsdF8xMjgpIHtcbiAgICAgICAgICAgIGNvZGUgPSBNdHJEZXguWDI1NTE5X0NpcGhlcl9TYWx0O1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29kZSA9IE10ckRleC5YMjU1MTlfQ2lwaGVyX1NlZWQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX2VuY3J5cHQobWF0dGVyLnFiNjQsIHRoaXMucmF3LCBjb2RlKTtcbiAgICB9XG4gICAgX3gyNTUxOShzZXIsIHB1YmtleSwgY29kZSkge1xuICAgICAgICBjb25zdCByYXcgPSBsaWJzb2RpdW0uY3J5cHRvX2JveF9zZWFsKHNlciwgcHVia2V5KTtcbiAgICAgICAgcmV0dXJuIG5ldyBDaXBoZXIoeyByYXc6IHJhdywgY29kZTogY29kZSB9KTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/core/encrypter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/core/eventing.js":
/*!************************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/core/eventing.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ample: () => (/* binding */ ample),\n/* harmony export */   incept: () => (/* binding */ incept),\n/* harmony export */   interact: () => (/* binding */ interact),\n/* harmony export */   messagize: () => (/* binding */ messagize),\n/* harmony export */   reply: () => (/* binding */ reply),\n/* harmony export */   rotate: () => (/* binding */ rotate)\n/* harmony export */ });\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/core.js\");\n/* harmony import */ var _tholder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tholder.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/tholder.js\");\n/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./number.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/number.js\");\n/* harmony import */ var _prefixer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./prefixer.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/prefixer.js\");\n/* harmony import */ var _serder_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./serder.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/serder.js\");\n/* harmony import */ var _matter_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./matter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/matter.js\");\n/* harmony import */ var _saider_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./saider.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/saider.js\");\n/* harmony import */ var _counter_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./counter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/counter.js\");\n/* harmony import */ var _seqner_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./seqner.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/seqner.js\");\n\n\n\n\n\n\n\n\n\nconst MaxIntThold = 2 ** 32 - 1;\nfunction rotate({ pre = undefined, keys, dig = undefined, ilk = _core_js__WEBPACK_IMPORTED_MODULE_0__.Ilks.rot, sn = 1, isith = undefined, ndigs = undefined, nsith = undefined, wits = undefined, cuts = undefined, adds = undefined, toad = undefined, data = undefined, version = undefined, kind = undefined, intive = true, }) {\n    const vs = (0,_core_js__WEBPACK_IMPORTED_MODULE_0__.versify)(_core_js__WEBPACK_IMPORTED_MODULE_0__.Protocols.KERI, version, kind, 0);\n    const _ilk = ilk;\n    if (_ilk != _core_js__WEBPACK_IMPORTED_MODULE_0__.Ilks.rot && _ilk != _core_js__WEBPACK_IMPORTED_MODULE_0__.Ilks.drt) {\n        throw new Error(`Invalid ilk = ${ilk} for rot or drt.`);\n    }\n    const sner = new _number_js__WEBPACK_IMPORTED_MODULE_2__.CesrNumber({}, sn);\n    if (sner.num < 1) {\n        throw new Error(`Invalid sn = 0x${sner.numh} for rot or drt.`);\n    }\n    let _isit;\n    if (isith == undefined) {\n        _isit = Math.max(1, Math.ceil(keys.length / 2));\n    }\n    else {\n        _isit = isith; // TODO this type as number does not make sense when isith is a string containing weighted thresholds\n    }\n    const tholder = new _tholder_js__WEBPACK_IMPORTED_MODULE_1__.Tholder({ sith: _isit });\n    if (tholder.num != undefined && tholder.num < 1) {\n        throw new Error(`Invalid sith = ${tholder.num} less than 1.`);\n    }\n    if (tholder.size > keys.length) {\n        // TODO this error should say that the threshold has not been met\n        throw new Error(`Invalid sith = ${tholder.num} for keys = ${keys}`);\n    }\n    let _ndigs;\n    if (ndigs === undefined) {\n        _ndigs = [];\n    }\n    else {\n        _ndigs = ndigs;\n    }\n    let _nsith;\n    if (nsith === undefined) {\n        _nsith = Math.max(1, Math.ceil(_ndigs.length / 2));\n    }\n    else {\n        _nsith = nsith;\n    }\n    const ntholder = new _tholder_js__WEBPACK_IMPORTED_MODULE_1__.Tholder({ sith: _nsith });\n    if (ntholder.num != undefined && ntholder.num < 1) {\n        throw new Error(`Invalid sith = ${ntholder.num} less than 1.`);\n    }\n    if (ntholder.size > _ndigs.length) {\n        // TODO this error should say that the threshold has not been met\n        throw new Error(`Signing threshold failure: ${keys.length} number of signers not equal to or greater than sith = ${tholder.size} for keys = ${keys}`);\n    }\n    let _wits;\n    if (wits === undefined) {\n        _wits = [];\n    }\n    else {\n        _wits = wits;\n    }\n    const witset = new Set(_wits);\n    if (witset.size != _wits.length) {\n        throw new Error(`Invalid wits = ${wits}, has duplicates.`);\n    }\n    let _cuts;\n    if (cuts === undefined) {\n        _cuts = [];\n    }\n    else {\n        _cuts = cuts;\n    }\n    const cutset = new Set(_cuts);\n    if (cutset.size != _cuts.length) {\n        throw new Error(`Invalid cuts = ${cuts}, has duplicates.`);\n    }\n    let _adds;\n    if (adds === undefined) {\n        _adds = [];\n    }\n    else {\n        _adds = adds;\n    }\n    const addset = new Set(_adds);\n    //non empty intersection of witset and addset\n    const witaddset = new Set([...witset].filter((x) => addset.has(x)));\n    if (witaddset.size > 0) {\n        throw new Error(`Invalid member combination among wits = ${wits}, and adds = ${adds}.`);\n    }\n    // non empty intersection of cutset and addset\n    const cutaddset = new Set([...cutset].filter((x) => addset.has(x)));\n    if (cutaddset.size > 0) {\n        throw new Error(`Invalid member combination among cuts = ${cuts}, and adds = ${adds}.`);\n    }\n    const newitsetdiff = new Set(_wits);\n    _cuts.forEach(function (v) {\n        newitsetdiff.delete(v);\n    });\n    const newitset = new Set((function* () {\n        yield* newitsetdiff;\n        yield* addset;\n    })());\n    if (newitset.size != witset.size - cutset.size + addset.size) {\n        throw new Error(`Invalid member combination among wits = ${wits}, cuts = ${cuts}, and adds = ${adds}.`);\n    }\n    let _toad;\n    if (toad === undefined) {\n        if (newitset.size == 0) {\n            _toad = 0;\n        }\n        else {\n            _toad = ample(newitset.size);\n        }\n    }\n    else {\n        _toad = toad;\n    }\n    if (newitset.size > 0) {\n        if (_toad < 1 || _toad > newitset.size) {\n            throw new Error(`Invalid toad = ${_toad} for wit = ${wits}`);\n        }\n    }\n    else {\n        if (_toad != 0) {\n            throw new Error(`Invalid toad = ${_toad} for wit = ${wits}`);\n        }\n    }\n    const _sad = {\n        v: vs,\n        t: _ilk,\n        d: '',\n        i: pre,\n        s: sner.numh,\n        p: dig,\n        kt: tholder.num &&\n            intive &&\n            tholder.num !== undefined &&\n            tholder.num <= MaxIntThold\n            ? tholder.num.toString(16)\n            : tholder.sith,\n        k: keys,\n        nt: ntholder.num &&\n            intive &&\n            ntholder.num !== undefined &&\n            ntholder.num <= MaxIntThold\n            ? ntholder.num.toString(16)\n            : ntholder.sith,\n        n: _ndigs,\n        bt: _toad && intive && _toad !== undefined && _toad <= MaxIntThold\n            ? _toad\n            : _toad.toString(16),\n        br: cuts,\n        ba: adds,\n        a: data != undefined ? data : [],\n    };\n    const [, sad] = _saider_js__WEBPACK_IMPORTED_MODULE_6__.Saider.saidify(_sad);\n    return new _serder_js__WEBPACK_IMPORTED_MODULE_4__.Serder(sad);\n}\nfunction ample(n, f, weak = true) {\n    n = Math.max(0, n); // no negatives\n    let f1;\n    if (f == undefined) {\n        f1 = Math.max(1, Math.floor(Math.max(0, n - 1) / 3)); // least floor f subject to n >= 3*f+1\n        const f2 = Math.max(1, Math.ceil(Math.max(0, n - 1) / 3)); // most Math.ceil f subject to n >= 3*f+1\n        if (weak) {\n            // try both fs to see which one has lowest m\n            return Math.min(n, Math.ceil((n + f1 + 1) / 2), Math.ceil((n + f2 + 1) / 2));\n        }\n        else {\n            return Math.min(n, Math.max(0, n - f1, Math.ceil((n + f1 + 1) / 2)));\n        }\n    }\n    else {\n        f = Math.max(0, f);\n        const m1 = Math.ceil((n + f + 1) / 2);\n        const m2 = Math.max(0, n - f);\n        if (m2 < m1 && n > 0) {\n            throw new Error(`Invalid f=${f} is too big for n=${n}.`);\n        }\n        if (weak) {\n            return Math.min(n, m1, m2);\n        }\n        else {\n            return Math.min(n, Math.max(m1, m2));\n        }\n    }\n}\nfunction incept({ keys, isith, ndigs, nsith, toad, wits, cnfg, data, version = _core_js__WEBPACK_IMPORTED_MODULE_0__.Vrsn_1_0, kind = _core_js__WEBPACK_IMPORTED_MODULE_0__.Serials.JSON, code, intive = false, delpre, }) {\n    const vs = (0,_core_js__WEBPACK_IMPORTED_MODULE_0__.versify)(_core_js__WEBPACK_IMPORTED_MODULE_0__.Protocols.KERI, version, kind, 0);\n    const ilk = delpre == undefined ? _core_js__WEBPACK_IMPORTED_MODULE_0__.Ilks.icp : _core_js__WEBPACK_IMPORTED_MODULE_0__.Ilks.dip;\n    const sner = new _number_js__WEBPACK_IMPORTED_MODULE_2__.CesrNumber({}, 0);\n    if (isith == undefined) {\n        isith = Math.max(1, Math.ceil(keys.length / 2));\n    }\n    const tholder = new _tholder_js__WEBPACK_IMPORTED_MODULE_1__.Tholder({ sith: isith });\n    if (tholder.num != undefined && tholder.num < 1) {\n        throw new Error(`Invalid sith = ${tholder.num} less than 1.`);\n    }\n    if (tholder.size > keys.length) {\n        throw new Error(`Invalid sith = ${tholder.num} for keys ${keys}`);\n    }\n    if (ndigs == undefined) {\n        ndigs = new Array();\n    }\n    if (nsith == undefined) {\n        nsith = Math.max(0, Math.ceil(ndigs.length / 2));\n    }\n    const ntholder = new _tholder_js__WEBPACK_IMPORTED_MODULE_1__.Tholder({ sith: nsith });\n    if (ntholder.num != undefined && ntholder.num < 0) {\n        throw new Error(`Invalid nsith = ${ntholder.num} less than 0.`);\n    }\n    if (ntholder.size > keys.length) {\n        throw new Error(`Invalid nsith = ${ntholder.num} for keys ${ndigs}`);\n    }\n    wits = wits == undefined ? [] : wits;\n    if (new Set(wits).size != wits.length) {\n        throw new Error(`Invalid wits = ${wits}, has duplicates.`);\n    }\n    if (toad == undefined) {\n        if (wits.length == 0) {\n            toad = 0;\n        }\n        else {\n            toad = ample(wits.length);\n        }\n    }\n    const toader = new _number_js__WEBPACK_IMPORTED_MODULE_2__.CesrNumber({}, toad);\n    if (wits.length > 0) {\n        if (toader.num < 1 || toader.num > wits.length) {\n            throw new Error(`Invalid toad = ${toader.num} for wits = ${wits}`);\n        }\n    }\n    else {\n        if (toader.num != 0) {\n            throw new Error(`Invalid toad = ${toader.num} for wits = ${wits}`);\n        }\n    }\n    cnfg = cnfg == undefined ? new Array() : cnfg;\n    data = data == undefined ? new Array() : data;\n    let sad = {\n        v: vs,\n        t: ilk,\n        d: '',\n        i: '',\n        s: sner.numh,\n        kt: intive && tholder.num != undefined ? tholder.num : tholder.sith,\n        k: keys,\n        nt: intive && tholder.num != undefined ? ntholder.num : ntholder.sith,\n        n: ndigs,\n        bt: intive ? toader.num : toader.numh,\n        b: wits,\n        c: cnfg,\n        a: data,\n    };\n    if (delpre != undefined) {\n        sad['di'] = delpre;\n        if (code == undefined) {\n            code = _matter_js__WEBPACK_IMPORTED_MODULE_5__.MtrDex.Blake3_256;\n        }\n    }\n    let prefixer;\n    if (delpre == undefined && code == undefined && keys.length == 1) {\n        prefixer = new _prefixer_js__WEBPACK_IMPORTED_MODULE_3__.Prefixer({ qb64: keys[0] });\n        if (prefixer.digestive) {\n            throw new Error(`Invalid code, digestive=${prefixer.code}, must be derived from ked.`);\n        }\n    }\n    else {\n        prefixer = new _prefixer_js__WEBPACK_IMPORTED_MODULE_3__.Prefixer({ code: code }, sad);\n        if (delpre != undefined) {\n            if (!prefixer.digestive) {\n                throw new Error(`Invalid derivation code = ${prefixer.code} for delegation. Must be digestive`);\n            }\n        }\n    }\n    sad['i'] = prefixer.qb64;\n    if (prefixer.digestive) {\n        sad['d'] = prefixer.qb64;\n    }\n    else {\n        [, sad] = _saider_js__WEBPACK_IMPORTED_MODULE_6__.Saider.saidify(sad);\n    }\n    return new _serder_js__WEBPACK_IMPORTED_MODULE_4__.Serder(sad);\n}\nfunction messagize(serder, sigers, seal, wigers, cigars, pipelined = false) {\n    let msg = new Uint8Array((0,_core_js__WEBPACK_IMPORTED_MODULE_0__.b)(serder.raw));\n    let atc = new Uint8Array();\n    if (sigers == undefined && wigers == undefined && cigars == undefined) {\n        throw new Error(`Missing attached signatures on message = ${serder.sad}.`);\n    }\n    if (sigers != undefined) {\n        if (seal != undefined) {\n            if (seal[0] == 'SealEvent') {\n                atc = (0,_core_js__WEBPACK_IMPORTED_MODULE_0__.concat)(atc, new _counter_js__WEBPACK_IMPORTED_MODULE_7__.Counter({ code: _counter_js__WEBPACK_IMPORTED_MODULE_7__.CtrDex.TransIdxSigGroups, count: 1 })\n                    .qb64b);\n                atc = (0,_core_js__WEBPACK_IMPORTED_MODULE_0__.concat)(atc, new TextEncoder().encode(seal[1].i));\n                atc = (0,_core_js__WEBPACK_IMPORTED_MODULE_0__.concat)(atc, new _seqner_js__WEBPACK_IMPORTED_MODULE_8__.Seqner({ sn: parseInt(seal[1].s) }).qb64b);\n                atc = (0,_core_js__WEBPACK_IMPORTED_MODULE_0__.concat)(atc, new TextEncoder().encode(seal[1].d));\n            }\n            else if (seal[0] == 'SealLast') {\n                atc = (0,_core_js__WEBPACK_IMPORTED_MODULE_0__.concat)(atc, new _counter_js__WEBPACK_IMPORTED_MODULE_7__.Counter({\n                    code: _counter_js__WEBPACK_IMPORTED_MODULE_7__.CtrDex.TransLastIdxSigGroups,\n                    count: 1,\n                }).qb64b);\n                atc = (0,_core_js__WEBPACK_IMPORTED_MODULE_0__.concat)(atc, new TextEncoder().encode(seal[1].i));\n            }\n        }\n        atc = (0,_core_js__WEBPACK_IMPORTED_MODULE_0__.concat)(atc, new _counter_js__WEBPACK_IMPORTED_MODULE_7__.Counter({\n            code: _counter_js__WEBPACK_IMPORTED_MODULE_7__.CtrDex.ControllerIdxSigs,\n            count: sigers.length,\n        }).qb64b);\n        sigers.forEach((siger) => {\n            atc = (0,_core_js__WEBPACK_IMPORTED_MODULE_0__.concat)(atc, siger.qb64b);\n        });\n    }\n    if (wigers != undefined) {\n        atc = (0,_core_js__WEBPACK_IMPORTED_MODULE_0__.concat)(atc, new _counter_js__WEBPACK_IMPORTED_MODULE_7__.Counter({\n            code: _counter_js__WEBPACK_IMPORTED_MODULE_7__.CtrDex.ControllerIdxSigs,\n            count: wigers.length,\n        }).qb64b);\n        wigers.forEach((wiger) => {\n            if (wiger.verfer && !(wiger.verfer.code in _matter_js__WEBPACK_IMPORTED_MODULE_5__.NonTransDex)) {\n                throw new Error(`Attempt to use tranferable prefix=${wiger.verfer.qb64} for receipt.`);\n            }\n            atc = (0,_core_js__WEBPACK_IMPORTED_MODULE_0__.concat)(atc, wiger.qb64b);\n        });\n    }\n    if (cigars != undefined) {\n        atc = (0,_core_js__WEBPACK_IMPORTED_MODULE_0__.concat)(atc, new _counter_js__WEBPACK_IMPORTED_MODULE_7__.Counter({\n            code: _counter_js__WEBPACK_IMPORTED_MODULE_7__.CtrDex.ControllerIdxSigs,\n            count: cigars.length,\n        }).qb64b);\n        cigars.forEach((cigar) => {\n            if (cigar.verfer && !(cigar.verfer.code in _matter_js__WEBPACK_IMPORTED_MODULE_5__.NonTransDex)) {\n                throw new Error(`Attempt to use tranferable prefix=${cigar.verfer.qb64} for receipt.`);\n            }\n            atc = (0,_core_js__WEBPACK_IMPORTED_MODULE_0__.concat)(atc, cigar.qb64b);\n        });\n    }\n    if (pipelined) {\n        if (atc.length % 4 != 0) {\n            throw new Error(`Invalid attachments size=${atc.length}, nonintegral quadlets.`);\n        }\n        msg = (0,_core_js__WEBPACK_IMPORTED_MODULE_0__.concat)(msg, new _counter_js__WEBPACK_IMPORTED_MODULE_7__.Counter({\n            code: _counter_js__WEBPACK_IMPORTED_MODULE_7__.CtrDex.AttachedMaterialQuadlets,\n            count: Math.floor(atc.length / 4),\n        }).qb64b);\n    }\n    msg = (0,_core_js__WEBPACK_IMPORTED_MODULE_0__.concat)(msg, atc);\n    return msg;\n}\nfunction interact(args) {\n    let { pre, dig, sn, data, version, kind } = args;\n    const vs = (0,_core_js__WEBPACK_IMPORTED_MODULE_0__.versify)(_core_js__WEBPACK_IMPORTED_MODULE_0__.Protocols.KERI, version, kind, 0);\n    const ilk = _core_js__WEBPACK_IMPORTED_MODULE_0__.Ilks.ixn;\n    const sner = new _number_js__WEBPACK_IMPORTED_MODULE_2__.CesrNumber({}, sn);\n    if (sner.num < 1) {\n        throw new Error(`Invalid sn = 0x${sner.numh} for ixn.`);\n    }\n    data = data == undefined ? new Array() : data;\n    let sad = {\n        v: vs,\n        t: ilk,\n        d: '',\n        i: pre,\n        s: sner.numh,\n        p: dig,\n        a: data,\n    };\n    [, sad] = _saider_js__WEBPACK_IMPORTED_MODULE_6__.Saider.saidify(sad);\n    return new _serder_js__WEBPACK_IMPORTED_MODULE_4__.Serder(sad);\n}\nfunction reply(route = '', data, stamp, version, kind = _core_js__WEBPACK_IMPORTED_MODULE_0__.Serials.JSON) {\n    const vs = (0,_core_js__WEBPACK_IMPORTED_MODULE_0__.versify)(_core_js__WEBPACK_IMPORTED_MODULE_0__.Protocols.KERI, version, kind, 0);\n    if (data == undefined) {\n        data = {};\n    }\n    const _sad = {\n        v: vs,\n        t: _core_js__WEBPACK_IMPORTED_MODULE_0__.Ilks.rpy,\n        d: '',\n        dt: stamp !== null && stamp !== void 0 ? stamp : new Date().toISOString().replace('Z', '000+00:00'),\n        r: route,\n        a: data,\n    };\n    const [, sad] = _saider_js__WEBPACK_IMPORTED_MODULE_6__.Saider.saidify(_sad);\n    const saider = new _saider_js__WEBPACK_IMPORTED_MODULE_6__.Saider({ qb64: sad['d'] });\n    if (!saider.verify(sad, true, true, kind, 'd'))\n        throw new Error(`Invalid said = ${saider.qb64} for reply msg=${sad}.`);\n    return new _serder_js__WEBPACK_IMPORTED_MODULE_4__.Serder(sad);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/core/eventing.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/core/httping.js":
/*!***********************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/core/httping.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HEADER_SIG_INPUT: () => (/* binding */ HEADER_SIG_INPUT),\n/* harmony export */   HEADER_SIG_TIME: () => (/* binding */ HEADER_SIG_TIME),\n/* harmony export */   Inputage: () => (/* binding */ Inputage),\n/* harmony export */   Unqualified: () => (/* binding */ Unqualified),\n/* harmony export */   desiginput: () => (/* binding */ desiginput),\n/* harmony export */   normalize: () => (/* binding */ normalize),\n/* harmony export */   parseRangeHeaders: () => (/* binding */ parseRangeHeaders),\n/* harmony export */   siginput: () => (/* binding */ siginput)\n/* harmony export */ });\n/* harmony import */ var structured_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! structured-headers */ \"(ssr)/./node_modules/structured-headers/dist/index.js\");\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./core.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/core.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/utils.js\");\n/* harmony import */ var _base64_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./base64.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/base64.js\");\n\n\n\n\nconst HEADER_SIG_INPUT = normalize('Signature-Input');\nconst HEADER_SIG_TIME = normalize('Signify-Timestamp');\nfunction normalize(header) {\n    return header.trim();\n}\n/**\n * Generates, serializes, and signs a Signature-Input HTTP header value as a structured header\n * @param signer\n * @param sigInputArgs\n */\nfunction siginput(signer, sigInputArgs) {\n    const { name, method, path, headers, fields, expires, nonce, alg, keyid, context, } = sigInputArgs;\n    const items = new Array();\n    const ifields = new Array();\n    fields.forEach((field) => {\n        if (field.startsWith('@')) {\n            switch (field) {\n                case '@method':\n                    items.push(`\"${field}\": ${method}`);\n                    ifields.push([field, new Map()]);\n                    break;\n                case '@path':\n                    items.push(`\"${field}\": ${path}`);\n                    ifields.push([field, new Map()]);\n                    break;\n            }\n        }\n        else {\n            if (!headers.has(field))\n                return;\n            ifields.push([field, new Map()]);\n            const value = normalize(headers.get(field));\n            items.push(`\"${field}\": ${value}`);\n        }\n    });\n    const nameParams = new Map();\n    const now = Math.floor((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.nowUTC)().getTime() / 1000);\n    nameParams.set('created', now);\n    const values = [\n        `(${ifields.map((field) => field[0]).join(' ')})`,\n        `created=${now}`,\n    ];\n    if (expires != undefined) {\n        values.push(`expires=${expires}`);\n        nameParams.set('expires', expires);\n    }\n    if (nonce != undefined) {\n        values.push(`nonce=${nonce}`);\n        nameParams.set('nonce', nonce);\n    }\n    if (keyid != undefined) {\n        values.push(`keyid=${keyid}`);\n        nameParams.set('keyid', keyid);\n    }\n    if (context != undefined) {\n        values.push(`context=${context}`);\n        nameParams.set('context', context);\n    }\n    if (alg != undefined) {\n        values.push(`alg=${alg}`);\n        nameParams.set('alg', alg);\n    }\n    const sid = new Map([[name, [ifields, nameParams]]]);\n    const params = values.join(';');\n    items.push(`\"@signature-params: ${params}\"`);\n    const ser = items.join('\\n');\n    const sig = signer.sign((0,_core_js__WEBPACK_IMPORTED_MODULE_1__.b)(ser));\n    return [\n        new Map([\n            [HEADER_SIG_INPUT, `${(0,structured_headers__WEBPACK_IMPORTED_MODULE_0__.serializeDictionary)(sid)}`],\n        ]),\n        sig,\n    ];\n}\nclass Unqualified {\n    constructor(raw) {\n        this._raw = raw;\n    }\n    get qb64() {\n        return (0,_base64_js__WEBPACK_IMPORTED_MODULE_3__.encodeBase64Url)(this._raw);\n    }\n    get qb64b() {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_1__.b)(this.qb64);\n    }\n}\nclass Inputage {\n}\nfunction desiginput(value) {\n    const sid = (0,structured_headers__WEBPACK_IMPORTED_MODULE_0__.parseDictionary)(value);\n    const siginputs = new Array();\n    sid.forEach((value, key) => {\n        const siginput = new Inputage();\n        siginput.name = key;\n        let list;\n        let params;\n        [list, params] = value;\n        siginput.fields = list.map((item) => item[0]);\n        if (!params.has('created')) {\n            throw new Error('missing required `created` field from signature input');\n        }\n        siginput.created = params.get('created');\n        if (params.has('expires')) {\n            siginput.expires = params.get('expires');\n        }\n        if (params.has('nonce')) {\n            siginput.nonce = params.get('nonce');\n        }\n        if (params.has('alg')) {\n            siginput.alg = params.get('alg');\n        }\n        if (params.has('keyid')) {\n            siginput.keyid = params.get('keyid');\n        }\n        if (params.has('context')) {\n            siginput.context = params.get('context');\n        }\n        siginputs.push(siginput);\n    });\n    return siginputs;\n}\n/** Parse start, end and total from HTTP Content-Range header value\n * @param {string|null} header - HTTP Range header value\n * @param {string} typ - type of range, e.g. \"aids\"\n * @returns {start: number, end: number, total: number} - object with start, end and total properties\n */\nfunction parseRangeHeaders(header, typ) {\n    if (header !== null) {\n        const data = header.replace(`${typ} `, '');\n        const values = data.split('/');\n        const rng = values[0].split('-');\n        return {\n            start: parseInt(rng[0]),\n            end: parseInt(rng[1]),\n            total: parseInt(values[1]),\n        };\n    }\n    else {\n        return { start: 0, end: 0, total: 0 };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/core/httping.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/core/indexer.js":
/*!***********************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/core/indexer.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IdrDex: () => (/* binding */ IdrDex),\n/* harmony export */   IdxBthSigDex: () => (/* binding */ IdxBthSigDex),\n/* harmony export */   IdxCrtSigDex: () => (/* binding */ IdxCrtSigDex),\n/* harmony export */   IdxSigDex: () => (/* binding */ IdxSigDex),\n/* harmony export */   IndexedBothSigCodex: () => (/* binding */ IndexedBothSigCodex),\n/* harmony export */   IndexedCurrentSigCodex: () => (/* binding */ IndexedCurrentSigCodex),\n/* harmony export */   IndexedSigCodex: () => (/* binding */ IndexedSigCodex),\n/* harmony export */   Indexer: () => (/* binding */ Indexer),\n/* harmony export */   IndexerCodex: () => (/* binding */ IndexerCodex),\n/* harmony export */   Xizage: () => (/* binding */ Xizage)\n/* harmony export */ });\n/* harmony import */ var _kering_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kering.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/kering.js\");\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./core.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/core.js\");\n/* harmony import */ var _base64_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base64.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/base64.js\");\n\n\n\nclass IndexerCodex {\n    constructor() {\n        this.Ed25519_Sig = 'A'; // Ed25519 sig appears same in both lists if any.\n        this.Ed25519_Crt_Sig = 'B'; // Ed25519 sig appears in current list only.\n        this.ECDSA_256k1_Sig = 'C'; // ECDSA secp256k1 sig appears same in both lists if any.\n        this.ECDSA_256k1_Crt_Sig = 'D'; // ECDSA secp256k1 sig appears in current list.\n        this.ECDSA_256r1_Sig = 'E'; // ECDSA secp256r1 sig appears same in both lists if any.\n        this.ECDSA_256r1_Crt_Sig = 'F'; // ECDSA secp256r1 sig appears in current list.\n        this.Ed448_Sig = '0A'; // Ed448 signature appears in both lists.\n        this.Ed448_Crt_Sig = '0B'; // Ed448 signature appears in current list only.\n        this.Ed25519_Big_Sig = '2A'; // Ed25519 sig appears in both lists.\n        this.Ed25519_Big_Crt_Sig = '2B'; // Ed25519 sig appears in current list only.\n        this.ECDSA_256k1_Big_Sig = '2C'; // ECDSA secp256k1 sig appears in both lists.\n        this.ECDSA_256k1_Big_Crt_Sig = '2D'; // ECDSA secp256k1 sig appears in current list only.\n        this.ECDSA_256r1_Big_Sig = '2E'; // ECDSA secp256r1 sig appears in both lists.\n        this.ECDSA_256r1_Big_Crt_Sig = '2F'; // ECDSA secp256r1 sig appears in current list only.\n        this.Ed448_Big_Sig = '3A'; // Ed448 signature appears in both lists.\n        this.Ed448_Big_Crt_Sig = '3B'; // Ed448 signature appears in current list only.\n    }\n}\nconst IdrDex = new IndexerCodex();\nclass IndexedSigCodex {\n    constructor() {\n        this.Ed25519_Sig = 'A'; // Ed25519 sig appears same in both lists if any.\n        this.Ed25519_Crt_Sig = 'B'; // Ed25519 sig appears in current list only.\n        this.ECDSA_256k1_Sig = 'C'; // ECDSA secp256k1 sig appears same in both lists if any.\n        this.ECDSA_256k1_Crt_Sig = 'D'; // ECDSA secp256k1 sig appears in current list.\n        this.ECDSA_256r1_Sig = 'E'; // ECDSA secp256r1 sig appears same in both lists if any.\n        this.ECDSA_256r1_Crt_Sig = 'F'; // ECDSA secp256r1 sig appears in current list.\n        this.Ed448_Sig = '0A'; // Ed448 signature appears in both lists.\n        this.Ed448_Crt_Sig = '0B'; // Ed448 signature appears in current list only.\n        this.Ed25519_Big_Sig = '2A'; // Ed25519 sig appears in both lists.\n        this.Ed25519_Big_Crt_Sig = '2B'; // Ed25519 sig appears in current list only.\n        this.ECDSA_256k1_Big_Sig = '2C'; // ECDSA secp256k1 sig appears in both lists.\n        this.ECDSA_256k1_Big_Crt_Sig = '2D'; // ECDSA secp256k1 sig appears in current list only.\n        this.ECDSA_256r1_Big_Sig = '2E'; // ECDSA secp256r1 sig appears in both lists.\n        this.ECDSA_256r1_Big_Crt_Sig = '2F'; // ECDSA secp256r1 sig appears in current list only.\n        this.Ed448_Big_Sig = '3A'; // Ed448 signature appears in both lists.\n        this.Ed448_Big_Crt_Sig = '3B'; // Ed448 signature appears in current list only.\n    }\n    has(prop) {\n        const m = new Map(Array.from(Object.entries(this), (v) => [v[1], v[0]]));\n        return m.has(prop);\n    }\n}\nconst IdxSigDex = new IndexedSigCodex();\nclass IndexedCurrentSigCodex {\n    constructor() {\n        this.Ed25519_Crt_Sig = 'B'; // Ed25519 sig appears in current list only.\n        this.ECDSA_256k1_Crt_Sig = 'D'; // ECDSA secp256k1 sig appears in current list only.\n        this.ECDSA_256r1_Crt_Sig = 'F'; // ECDSA secp256r1 sig appears in current list.\n        this.Ed448_Crt_Sig = '0B'; // Ed448 signature appears in current list only.\n        this.Ed25519_Big_Crt_Sig = '2B'; // Ed25519 sig appears in current list only.\n        this.ECDSA_256k1_Big_Crt_Sig = '2D'; // ECDSA secp256k1 sig appears in current list only.\n        this.ECDSA_256r1_Big_Crt_Sig = '2F'; // ECDSA secp256r1 sig appears in current list only.\n        this.Ed448_Big_Crt_Sig = '3B'; // Ed448 signature appears in current list only.\n    }\n    has(prop) {\n        const m = new Map(Array.from(Object.entries(this), (v) => [v[1], v[0]]));\n        return m.has(prop);\n    }\n}\nconst IdxCrtSigDex = new IndexedCurrentSigCodex();\nclass IndexedBothSigCodex {\n    constructor() {\n        this.Ed25519_Sig = 'A'; // Ed25519 sig appears same in both lists if any.\n        this.ECDSA_256k1_Sig = 'C'; // ECDSA secp256k1 sig appears same in both lists if any.\n        this.Ed448_Sig = '0A'; // Ed448 signature appears in both lists.\n        this.Ed25519_Big_Sig = '2A'; // Ed25519 sig appears in both listsy.\n        this.ECDSA_256k1_Big_Sig = '2C'; // ECDSA secp256k1 sig appears in both lists.\n        this.Ed448_Big_Sig = '3A'; // Ed448 signature appears in both lists.\n    }\n    has(prop) {\n        const m = new Map(Array.from(Object.entries(this), (v) => [v[1], v[0]]));\n        return m.has(prop);\n    }\n}\nconst IdxBthSigDex = new IndexedBothSigCodex();\nclass Xizage {\n    constructor(hs, ss, os, fs, ls) {\n        this.hs = hs;\n        this.ss = ss;\n        this.os = os;\n        this.fs = fs;\n        this.ls = ls;\n    }\n}\nclass Indexer {\n    constructor({ raw = undefined, code = IdrDex.Ed25519_Sig, index = 0, ondex = undefined, qb64b = undefined, qb64 = undefined, qb2 = undefined, }) {\n        this.Codex = IdrDex;\n        this._code = '';\n        this._index = -1;\n        this._raw = new Uint8Array(0);\n        if (raw != undefined) {\n            if (code == undefined) {\n                throw new _kering_js__WEBPACK_IMPORTED_MODULE_0__.EmptyMaterialError(`Improper initialization need either (raw and code) or qb64b or qb64 or qb2.`);\n            }\n            if (!Indexer.Sizes.has(code)) {\n                throw new Error(`Unsupported code=${code}.`);\n            }\n            const xizage = Indexer.Sizes.get(code);\n            const os = xizage.os;\n            const fs = xizage.fs;\n            const cs = xizage.hs + xizage.ss;\n            const ms = xizage.ss - xizage.os;\n            if (!Number.isInteger(index) || index < 0 || index > 64 ** ms - 1) {\n                throw new Error(`Invalid index=${index} for code=${code}.`);\n            }\n            if (ondex != undefined &&\n                xizage.os != 0 &&\n                !(ondex >= 0 && ondex <= 64 ** os - 1)) {\n                throw new Error(`Invalid ondex=${ondex} for code=${code}.`);\n            }\n            if (IdxCrtSigDex.has(code) && ondex != undefined) {\n                throw new Error(`Non None ondex=${ondex} for code=${code}.`);\n            }\n            if (IdxBthSigDex.has(code)) {\n                if (ondex == undefined) {\n                    ondex = index;\n                }\n                else {\n                    if (ondex != index && os == 0) {\n                        throw new Error(`Non matching ondex=${ondex} and index=${index} for code=${code}.`);\n                    }\n                }\n            }\n            if (fs == undefined) {\n                throw new Error('variable length unsupported');\n            }\n            // TODO: Don't support this code\n            //  if not fs:  # compute fs from index\n            //       if cs % 4:\n            //           raise InvalidCodeSizeError(f\"Whole code size not multiple of 4 for \"\n            //                                      f\"variable length material. cs={cs}.\")\n            //       if os != 0:\n            //           raise InvalidCodeSizeError(f\"Non-zero other index size for \"\n            //                                      f\"variable length material. os={os}.\")\n            //       fs = (index * 4) + cs\n            const rawsize = Math.floor(((fs - cs) * 3) / 4);\n            raw = raw.slice(0, rawsize);\n            if (raw.length != rawsize) {\n                throw new Error(`Not enougth raw bytes for code=${code} and index=${index} ,expected ${rawsize} got ${raw.length}.`);\n            }\n            this._code = code;\n            this._index = index;\n            this._ondex = ondex;\n            this._raw = raw;\n        }\n        else if (qb64b != undefined) {\n            const qb64 = (0,_core_js__WEBPACK_IMPORTED_MODULE_1__.d)(qb64b);\n            this._exfil(qb64);\n        }\n        else if (qb64 != undefined) {\n            this._exfil(qb64);\n        }\n        else if (qb2 != undefined) {\n            this._bexfil(qb2);\n        }\n        else {\n            throw new _kering_js__WEBPACK_IMPORTED_MODULE_0__.EmptyMaterialError(`Improper initialization need either (raw and code and index) or qb64b or qb64 or qb2.`);\n        }\n    }\n    _bexfil(qb2) {\n        throw new Error(`qb2 not yet supported: ${qb2}`);\n    }\n    static _rawSize(code) {\n        const xizage = Indexer.Sizes.get(code);\n        return Math.floor(xizage.fs - ((xizage.hs + xizage.ss) * 3) / 4);\n    }\n    get code() {\n        return this._code;\n    }\n    get raw() {\n        return this._raw;\n    }\n    get index() {\n        return this._index;\n    }\n    get ondex() {\n        return this._ondex;\n    }\n    get qb64() {\n        return this._infil();\n    }\n    get qb64b() {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_1__.b)(this.qb64);\n    }\n    _infil() {\n        const code = this.code;\n        const index = this.index;\n        const ondex = this.ondex;\n        const raw = this.raw;\n        const ps = (3 - (raw.length % 3)) % 3;\n        const xizage = Indexer.Sizes.get(code);\n        const cs = xizage.hs + xizage.ss;\n        const ms = xizage.ss - xizage.os;\n        // TODO: don't support this code\n        //  if not fs:  # compute fs from index\n        //       if cs % 4:\n        //           raise InvalidCodeSizeError(f\"Whole code size not multiple of 4 for \"\n        //                                      f\"variable length material. cs={cs}.\")\n        //       if os != 0:\n        //           raise InvalidCodeSizeError(f\"Non-zero other index size for \"\n        //                                      f\"variable length material. os={os}.\")\n        //       fs = (index * 4) + cs\n        if (index < 0 || index > 64 ** ms - 1) {\n            throw new Error(`Invalid index=${index} for code=${code}.`);\n        }\n        if (ondex != undefined &&\n            xizage.os != 0 &&\n            !(ondex >= 0 && ondex <= 64 ** xizage.os - 1)) {\n            throw new Error(`Invalid ondex=${ondex} for os=${xizage.os} and code=${code}.`);\n        }\n        const both = `${code}${(0,_core_js__WEBPACK_IMPORTED_MODULE_1__.intToB64)(index, ms)}${(0,_core_js__WEBPACK_IMPORTED_MODULE_1__.intToB64)(ondex == undefined ? 0 : ondex, xizage.os)}`;\n        if (both.length != cs) {\n            throw new Error(`Mismatch code size = ${cs} with table = ${both.length}.`);\n        }\n        if (cs % 4 != ps - xizage.ls) {\n            throw new Error(`Invalid code=${both} for converted raw pad size=${ps}.`);\n        }\n        const bytes = new Uint8Array(ps + raw.length);\n        for (let i = 0; i < ps; i++) {\n            bytes[i] = 0;\n        }\n        for (let i = 0; i < raw.length; i++) {\n            const odx = i + ps;\n            bytes[odx] = raw[i];\n        }\n        const full = both + (0,_base64_js__WEBPACK_IMPORTED_MODULE_2__.encodeBase64Url)(bytes).slice(ps - xizage.ls);\n        if (full.length != xizage.fs) {\n            throw new Error(`Invalid code=${both} for raw size=${raw.length}.`);\n        }\n        return full;\n    }\n    _exfil(qb64) {\n        if (qb64.length == 0) {\n            throw new Error('Empty Material');\n        }\n        const first = qb64[0];\n        if (!Array.from(Indexer.Hards.keys()).includes(first)) {\n            throw new Error(`Unexpected code ${first}`);\n        }\n        const hs = Indexer.Hards.get(first);\n        if (qb64.length < hs) {\n            throw new Error(`Need ${hs - qb64.length} more characters.`);\n        }\n        const hard = qb64.slice(0, hs);\n        if (!Array.from(Indexer.Sizes.keys()).includes(hard)) {\n            throw new Error(`Unsupported code ${hard}`);\n        }\n        const xizage = Indexer.Sizes.get(hard);\n        const cs = xizage.hs + xizage.ss; // both hard + soft code size\n        const ms = xizage.ss - xizage.os;\n        if (qb64.length < cs) {\n            throw new Error(`Need ${cs - qb64.length} more characters.`);\n        }\n        const sindex = qb64.slice(hs, hs + ms);\n        const index = (0,_core_js__WEBPACK_IMPORTED_MODULE_1__.b64ToInt)(sindex);\n        const sondex = qb64.slice(hs + ms, hs + ms + xizage.os);\n        let ondex;\n        if (IdxCrtSigDex.has(hard)) {\n            ondex = xizage.os != 0 ? (0,_core_js__WEBPACK_IMPORTED_MODULE_1__.b64ToInt)(sondex) : undefined;\n            if (ondex != 0 && ondex != undefined) {\n                throw new Error(`Invalid ondex=${ondex} for code=${hard}.`);\n            }\n            else {\n                ondex = undefined;\n            }\n        }\n        else {\n            ondex = xizage.os != 0 ? (0,_core_js__WEBPACK_IMPORTED_MODULE_1__.b64ToInt)(sondex) : index;\n        }\n        if (xizage.fs == undefined) {\n            throw new Error('variable length not supported');\n        }\n        // TODO: support variable length\n        // if not fs:  # compute fs from index which means variable length\n        //     if cs % 4:\n        //         raise ValidationError(f\"Whole code size not multiple of 4 for \"\n        //                               f\"variable length material. cs={cs}.\")\n        //     if os != 0:\n        //         raise ValidationError(f\"Non-zero other index size for \"\n        //                               f\"variable length material. os={os}.\")\n        //     fs = (index * 4) + cs\n        if (qb64.length < xizage.fs) {\n            throw new Error(`Need ${xizage.fs - qb64.length} more chars.`);\n        }\n        qb64 = qb64.slice(0, xizage.fs);\n        const ps = cs % 4;\n        const pbs = 2 * ps != 0 ? ps : xizage.ls;\n        let raw;\n        if (ps != 0) {\n            const base = new Array(ps + 1).join('A') + qb64.slice(cs);\n            const paw = (0,_base64_js__WEBPACK_IMPORTED_MODULE_2__.decodeBase64Url)(base); // decode base to leave prepadded raw\n            const pi = (0,_core_js__WEBPACK_IMPORTED_MODULE_1__.readInt)(paw.slice(0, ps)); // prepad as int\n            if (pi & (2 ** pbs - 1)) {\n                // masked pad bits non-zero\n                throw new Error(`Non zeroed prepad bits = {pi & (2 ** pbs - 1 ):<06b} in {qb64b[cs:cs+1]}.`);\n            }\n            raw = paw.slice(ps); // strip off ps prepad paw bytes\n        }\n        else {\n            const base = qb64.slice(cs);\n            const paw = (0,_base64_js__WEBPACK_IMPORTED_MODULE_2__.decodeBase64Url)(base);\n            const li = (0,_core_js__WEBPACK_IMPORTED_MODULE_1__.readInt)(paw.slice(0, xizage.ls));\n            if (li != 0) {\n                if (li == 1) {\n                    throw new Error(`Non zeroed lead byte = 0x{li:02x}.`);\n                }\n                else {\n                    throw new Error(`Non zeroed lead bytes = 0x{li:04x}`);\n                }\n            }\n            raw = paw.slice(xizage.ls);\n        }\n        if (raw.length != Math.floor(((qb64.length - cs) * 3) / 4)) {\n            throw new Error(`Improperly qualified material = ${qb64}`);\n        }\n        this._code = hard;\n        this._index = index;\n        this._ondex = ondex;\n        this._raw = new Uint8Array(raw); // must be bytes for crpto opts and immutable not bytearray\n    }\n}\nIndexer.Hards = new Map([\n    ['A', 1],\n    ['B', 1],\n    ['C', 1],\n    ['D', 1],\n    ['E', 1],\n    ['F', 1],\n    ['G', 1],\n    ['H', 1],\n    ['I', 1],\n    ['J', 1],\n    ['K', 1],\n    ['L', 1],\n    ['M', 1],\n    ['N', 1],\n    ['O', 1],\n    ['P', 1],\n    ['Q', 1],\n    ['R', 1],\n    ['S', 1],\n    ['T', 1],\n    ['U', 1],\n    ['V', 1],\n    ['W', 1],\n    ['X', 1],\n    ['Y', 1],\n    ['Z', 1],\n    ['a', 1],\n    ['b', 1],\n    ['c', 1],\n    ['d', 1],\n    ['e', 1],\n    ['f', 1],\n    ['g', 1],\n    ['h', 1],\n    ['i', 1],\n    ['j', 1],\n    ['k', 1],\n    ['l', 1],\n    ['m', 1],\n    ['n', 1],\n    ['o', 1],\n    ['p', 1],\n    ['q', 1],\n    ['r', 1],\n    ['s', 1],\n    ['t', 1],\n    ['u', 1],\n    ['v', 1],\n    ['w', 1],\n    ['x', 1],\n    ['y', 1],\n    ['z', 1],\n    ['0', 2],\n    ['1', 2],\n    ['2', 2],\n    ['3', 2],\n    ['4', 2],\n]);\nIndexer.Sizes = new Map(Object.entries({\n    A: new Xizage(1, 1, 0, 88, 0),\n    B: new Xizage(1, 1, 0, 88, 0),\n    C: new Xizage(1, 1, 0, 88, 0),\n    D: new Xizage(1, 1, 0, 88, 0),\n    E: new Xizage(1, 1, 0, 88, 0),\n    F: new Xizage(1, 1, 0, 88, 0),\n    '0A': new Xizage(2, 2, 1, 156, 0),\n    '0B': new Xizage(2, 2, 1, 156, 0),\n    '2A': new Xizage(2, 4, 2, 92, 0),\n    '2B': new Xizage(2, 4, 2, 92, 0),\n    '2C': new Xizage(2, 4, 2, 92, 0),\n    '2D': new Xizage(2, 4, 2, 92, 0),\n    '2E': new Xizage(2, 4, 2, 92, 0),\n    '2F': new Xizage(2, 4, 2, 92, 0),\n    '3A': new Xizage(2, 6, 3, 160, 0),\n    '3B': new Xizage(2, 6, 3, 160, 0),\n    '0z': new Xizage(2, 2, 0, undefined, 0),\n    '1z': new Xizage(2, 2, 1, 76, 1),\n    '4z': new Xizage(2, 6, 3, 80, 1),\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/core/indexer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/core/keeping.js":
/*!***********************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/core/keeping.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GroupIdentifierManager: () => (/* binding */ GroupIdentifierManager),\n/* harmony export */   IdentifierManagerFactory: () => (/* binding */ IdentifierManagerFactory),\n/* harmony export */   RandyIdentifierManager: () => (/* binding */ RandyIdentifierManager),\n/* harmony export */   SaltyIdentifierManager: () => (/* binding */ SaltyIdentifierManager)\n/* harmony export */ });\n/* harmony import */ var _manager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./manager.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/manager.js\");\n/* harmony import */ var _matter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./matter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/matter.js\");\n/* harmony import */ var _salter_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./salter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/salter.js\");\n/* harmony import */ var _core_encrypter_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/encrypter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/encrypter.js\");\n/* harmony import */ var _decrypter_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./decrypter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/decrypter.js\");\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./core.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/core.js\");\n/* harmony import */ var _cipher_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./cipher.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/cipher.js\");\n/* harmony import */ var _diger_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./diger.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/diger.js\");\n/* harmony import */ var _prefixer_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./prefixer.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/prefixer.js\");\n\n\n\n\n\n\n\n\n\n/**\n * Creates IdentifierManager instances based on the algorithm and key indexes.\n */\nclass IdentifierManagerFactory {\n    /**\n     * Creates a factory for generating IdentifierManagers. Requires a salt to be specified.\n     * Allows external key management modules to be configured.\n     * @param salter\n     * @param externalModules\n     */\n    constructor(salter, externalModules = []) {\n        this.salter = salter;\n        this.modules = {};\n        this.salter = salter;\n        for (const mod of externalModules) {\n            this.modules[mod.type] = mod.module;\n        }\n    }\n    /**\n     *\n     * @param algo\n     * @param pidx\n     * @param kargs\n     */\n    new(algo, pidx, kargs) {\n        switch (algo) {\n            case _manager_js__WEBPACK_IMPORTED_MODULE_0__.Algos.salty:\n                return new SaltyIdentifierManager(this.salter, pidx, kargs['kidx'], kargs['tier'], kargs['transferable'], kargs['stem'], kargs['code'], kargs['count'], kargs['icodes'], kargs['ncode'], kargs['ncount'], kargs['ncodes'], kargs['dcode'], kargs['bran'], kargs['sxlt']);\n            case _manager_js__WEBPACK_IMPORTED_MODULE_0__.Algos.randy:\n                return new RandyIdentifierManager(this.salter, kargs['code'], kargs['count'], kargs['icodes'], kargs['transferable'], kargs['ncode'], kargs['ncount'], kargs['ncodes'], kargs['dcode'], kargs['prxs'], kargs['nxts']);\n            case _manager_js__WEBPACK_IMPORTED_MODULE_0__.Algos.group:\n                return new GroupIdentifierManager(this, kargs['mhab'], kargs['states'], kargs['rstates'], kargs['keys'], kargs['ndigs']);\n            case _manager_js__WEBPACK_IMPORTED_MODULE_0__.Algos.extern: {\n                const ModuleConstructor = this.modules[kargs.extern_type];\n                if (!ModuleConstructor) {\n                    throw new Error(`unsupported external module type ${kargs.extern_type}`);\n                }\n                return new ModuleConstructor(pidx, kargs);\n            }\n            default:\n                throw new Error('Unknown algo');\n        }\n    }\n    /**\n     * Generates an algorithm-specific IdentifierManager instance with correct keys based on\n     * the indexes provided by the HabState.\n     * @param aid HabState with the algorithm and key indexes\n     * @returns IdentifierManager instance\n     */\n    get(aid) {\n        const algo = aid[_manager_js__WEBPACK_IMPORTED_MODULE_0__.Algos.salty]\n            ? _manager_js__WEBPACK_IMPORTED_MODULE_0__.Algos.salty\n            : aid[_manager_js__WEBPACK_IMPORTED_MODULE_0__.Algos.randy]\n                ? _manager_js__WEBPACK_IMPORTED_MODULE_0__.Algos.randy\n                : aid[_manager_js__WEBPACK_IMPORTED_MODULE_0__.Algos.group]\n                    ? _manager_js__WEBPACK_IMPORTED_MODULE_0__.Algos.group\n                    : aid[_manager_js__WEBPACK_IMPORTED_MODULE_0__.Algos.extern]\n                        ? _manager_js__WEBPACK_IMPORTED_MODULE_0__.Algos.extern\n                        : undefined;\n        if (!algo) {\n            throw new Error('No algo specified');\n        }\n        let kargs = aid[algo];\n        if (!kargs) {\n            throw new Error('No kargs found in HabState');\n        }\n        switch (algo) {\n            case _manager_js__WEBPACK_IMPORTED_MODULE_0__.Algos.salty:\n                kargs = kargs;\n                return new SaltyIdentifierManager(this.salter, kargs.pidx, kargs.kidx, kargs.tier, kargs.transferable, kargs.stem, undefined, undefined, kargs.icodes, undefined, undefined, kargs.ncodes, kargs.dcode, undefined, kargs.sxlt);\n            case _manager_js__WEBPACK_IMPORTED_MODULE_0__.Algos.randy:\n                kargs = kargs;\n                return new RandyIdentifierManager(this.salter, undefined, undefined, undefined, new _prefixer_js__WEBPACK_IMPORTED_MODULE_8__.Prefixer({ qb64: aid['prefix'] }).transferable, undefined, undefined, [], undefined, kargs.prxs, kargs.nxts);\n            case _manager_js__WEBPACK_IMPORTED_MODULE_0__.Algos.group:\n                kargs = kargs;\n                return new GroupIdentifierManager(this, kargs.mhab, undefined, undefined, kargs.keys, kargs.ndigs);\n            case _manager_js__WEBPACK_IMPORTED_MODULE_0__.Algos.extern: {\n                kargs = kargs;\n                const typ = kargs.extern_type;\n                if (typ in this.modules) {\n                    const mod = new this.modules[typ](kargs.pidx, kargs);\n                    return mod;\n                }\n                else {\n                    throw new Error(`unsupported external module type ${typ}`);\n                }\n            }\n            default:\n                throw new Error('Algo not allowed yet');\n        }\n    }\n}\nclass SaltyIdentifierManager {\n    constructor(salter, pidx, kidx = 0, tier = _salter_js__WEBPACK_IMPORTED_MODULE_2__.Tier.low, transferable = false, stem = undefined, code = _matter_js__WEBPACK_IMPORTED_MODULE_1__.MtrDex.Ed25519_Seed, count = 1, icodes = undefined, ncode = _matter_js__WEBPACK_IMPORTED_MODULE_1__.MtrDex.Ed25519_Seed, ncount = 1, ncodes = undefined, dcode = _matter_js__WEBPACK_IMPORTED_MODULE_1__.MtrDex.Blake3_256, bran = undefined, sxlt = undefined) {\n        this.algo = _manager_js__WEBPACK_IMPORTED_MODULE_0__.Algos.salty;\n        // # Salter is the entered passcode and used for enc/dec of salts for each AID\n        this.salter = salter;\n        const signer = this.salter.signer(code, transferable, undefined, tier);\n        this.aeid = signer.verfer.qb64;\n        this.encrypter = new _core_encrypter_js__WEBPACK_IMPORTED_MODULE_3__.Encrypter({}, (0,_core_js__WEBPACK_IMPORTED_MODULE_5__.b)(this.aeid));\n        this.decrypter = new _decrypter_js__WEBPACK_IMPORTED_MODULE_4__.Decrypter({}, signer.qb64b);\n        this.code = code;\n        this.ncode = ncode;\n        this.tier = tier;\n        this.icodes =\n            icodes == undefined ? new Array(count).fill(code) : icodes;\n        this.ncodes =\n            ncodes == undefined\n                ? new Array(ncount).fill(ncode)\n                : ncodes;\n        this.dcode = dcode;\n        this.pidx = pidx;\n        this.kidx = kidx;\n        this.transferable = transferable;\n        this.count = count;\n        this.ncount = ncount;\n        this.stem = stem == undefined ? 'signify:aid' : stem;\n        if (bran != undefined) {\n            this.bran = _matter_js__WEBPACK_IMPORTED_MODULE_1__.MtrDex.Salt_128 + 'A' + bran.slice(0, 21);\n            this.creator = new _manager_js__WEBPACK_IMPORTED_MODULE_0__.SaltyCreator(this.bran, this.tier, this.stem);\n            this.sxlt = this.encrypter.encrypt((0,_core_js__WEBPACK_IMPORTED_MODULE_5__.b)(this.creator.salt)).qb64;\n        }\n        else if (sxlt == undefined) {\n            this.creator = new _manager_js__WEBPACK_IMPORTED_MODULE_0__.SaltyCreator(undefined, this.tier, this.stem);\n            this.sxlt = this.encrypter.encrypt((0,_core_js__WEBPACK_IMPORTED_MODULE_5__.b)(this.creator.salt)).qb64;\n        }\n        else {\n            this.sxlt = sxlt;\n            const ciph = new _cipher_js__WEBPACK_IMPORTED_MODULE_6__.Cipher({ qb64: this.sxlt });\n            this.creator = new _manager_js__WEBPACK_IMPORTED_MODULE_0__.SaltyCreator(this.decrypter.decrypt(null, ciph).qb64, tier, this.stem);\n        }\n        this.signers = this.creator.create(this.icodes, this.ncount, this.ncode, this.transferable, this.pidx, 0, this.kidx, false).signers;\n    }\n    params() {\n        return {\n            sxlt: this.sxlt,\n            pidx: this.pidx,\n            kidx: this.kidx,\n            stem: this.stem,\n            tier: this.tier,\n            icodes: this.icodes,\n            ncodes: this.ncodes,\n            dcode: this.dcode,\n            transferable: this.transferable,\n        };\n    }\n    async incept(transferable) {\n        var _a;\n        this.transferable = transferable;\n        this.kidx = 0;\n        const signers = this.creator.create(this.icodes, this.count, this.code, this.transferable, this.pidx, 0, this.kidx, false);\n        const verfers = signers.signers.map((signer) => signer.verfer.qb64);\n        const nsigners = this.creator.create(this.ncodes, this.ncount, this.ncode, this.transferable, this.pidx, 0, (_a = this.icodes) === null || _a === void 0 ? void 0 : _a.length, false);\n        const digers = nsigners.signers.map((nsigner) => new _diger_js__WEBPACK_IMPORTED_MODULE_7__.Diger({ code: this.dcode }, nsigner.verfer.qb64b).qb64);\n        return [verfers, digers];\n    }\n    async rotate(ncodes, transferable) {\n        this.ncodes = ncodes;\n        this.transferable = transferable;\n        const signers = this.creator.create(this.ncodes, this.ncount, this.ncode, this.transferable, this.pidx, 0, this.kidx + this.icodes.length, false);\n        const verfers = signers.signers.map((signer) => signer.verfer.qb64);\n        this.kidx = this.kidx + this.icodes.length;\n        const nsigners = this.creator.create(this.ncodes, this.ncount, this.ncode, this.transferable, this.pidx, 0, this.kidx + this.icodes.length, false);\n        const digers = nsigners.signers.map((nsigner) => new _diger_js__WEBPACK_IMPORTED_MODULE_7__.Diger({ code: this.dcode }, nsigner.verfer.qb64b).qb64);\n        return [verfers, digers];\n    }\n    async sign(ser, indexed = true, indices = undefined, ondices = undefined) {\n        const signers = this.creator.create(this.icodes, this.ncount, this.ncode, this.transferable, this.pidx, 0, this.kidx, false);\n        if (indexed) {\n            const sigers = [];\n            let i = 0;\n            for (const [j, signer] of signers.signers.entries()) {\n                if (indices != undefined) {\n                    i = indices[j];\n                    if (typeof i != 'number' || i < 0) {\n                        throw new Error(`Invalid signing index = ${i}, not whole number.`);\n                    }\n                }\n                else {\n                    i = j;\n                }\n                let o = 0;\n                if (ondices != undefined) {\n                    o = ondices[j];\n                    if ((o == undefined ||\n                        (typeof o == 'number' &&\n                            typeof o != 'number' &&\n                            o >= 0))) {\n                        throw new Error(`Invalid ondex = ${o}, not whole number.`);\n                    }\n                }\n                else {\n                    o = i;\n                }\n                sigers.push(signer.sign(ser, i, o == undefined ? true : false, o));\n            }\n            return sigers.map((siger) => siger.qb64);\n        }\n        else {\n            const cigars = [];\n            for (const [, signer] of signers.signers.entries()) {\n                cigars.push(signer.sign(ser));\n            }\n            return cigars.map((cigar) => cigar.qb64);\n        }\n    }\n}\nclass RandyIdentifierManager {\n    constructor(salter, code = _matter_js__WEBPACK_IMPORTED_MODULE_1__.MtrDex.Ed25519_Seed, count = 1, icodes = undefined, transferable = false, ncode = _matter_js__WEBPACK_IMPORTED_MODULE_1__.MtrDex.Ed25519_Seed, ncount = 1, ncodes, dcode = _matter_js__WEBPACK_IMPORTED_MODULE_1__.MtrDex.Blake3_256, prxs = undefined, nxts = undefined) {\n        this.algo = _manager_js__WEBPACK_IMPORTED_MODULE_0__.Algos.randy;\n        this.salter = salter;\n        this.icodes =\n            icodes == undefined ? new Array(count).fill(code) : icodes;\n        this.ncodes =\n            ncodes == undefined\n                ? new Array(ncount).fill(ncode)\n                : ncodes;\n        this.code = code;\n        this.ncode = ncode;\n        this.count = count;\n        this.ncount = ncount;\n        const signer = this.salter.signer(code, transferable);\n        this.aeid = signer.verfer.qb64;\n        this.encrypter = new _core_encrypter_js__WEBPACK_IMPORTED_MODULE_3__.Encrypter({}, (0,_core_js__WEBPACK_IMPORTED_MODULE_5__.b)(this.aeid));\n        this.decrypter = new _decrypter_js__WEBPACK_IMPORTED_MODULE_4__.Decrypter({}, signer.qb64b);\n        this.nxts = nxts !== null && nxts !== void 0 ? nxts : [];\n        this.prxs = prxs !== null && prxs !== void 0 ? prxs : [];\n        this.transferable = transferable;\n        this.icodes = icodes;\n        this.ncodes = ncodes;\n        this.dcode = dcode;\n        this.creator = new _manager_js__WEBPACK_IMPORTED_MODULE_0__.RandyCreator();\n        this.signers = this.prxs.map((prx) => this.decrypter.decrypt(new _cipher_js__WEBPACK_IMPORTED_MODULE_6__.Cipher({ qb64: prx }).qb64b, undefined, this.transferable));\n    }\n    params() {\n        return {\n            nxts: this.nxts,\n            prxs: this.prxs,\n            transferable: this.transferable,\n        };\n    }\n    async incept(transferable) {\n        this.transferable = transferable;\n        const signers = this.creator.create(this.icodes, this.count, this.code, this.transferable);\n        this.prxs = signers.signers.map((signer) => this.encrypter.encrypt(undefined, signer).qb64);\n        const verfers = signers.signers.map((signer) => signer.verfer.qb64);\n        const nsigners = this.creator.create(this.ncodes, this.ncount, this.ncode, this.transferable);\n        this.nxts = nsigners.signers.map((signer) => this.encrypter.encrypt(undefined, signer).qb64);\n        const digers = nsigners.signers.map((nsigner) => new _diger_js__WEBPACK_IMPORTED_MODULE_7__.Diger({ code: this.dcode }, nsigner.verfer.qb64b).qb64);\n        return [verfers, digers];\n    }\n    async rotate(ncodes, transferable) {\n        this.ncodes = ncodes;\n        this.transferable = transferable;\n        this.prxs = this.nxts;\n        const signers = this.nxts.map((nxt) => this.decrypter.decrypt(undefined, new _cipher_js__WEBPACK_IMPORTED_MODULE_6__.Cipher({ qb64: nxt }), this.transferable));\n        const verfers = signers.map((signer) => signer.verfer.qb64);\n        const nsigners = this.creator.create(this.ncodes, this.ncount, this.ncode, this.transferable);\n        this.nxts = nsigners.signers.map((signer) => this.encrypter.encrypt(undefined, signer).qb64);\n        const digers = nsigners.signers.map((nsigner) => new _diger_js__WEBPACK_IMPORTED_MODULE_7__.Diger({ code: this.dcode }, nsigner.verfer.qb64b).qb64);\n        return [verfers, digers];\n    }\n    async sign(ser, indexed = true, indices = undefined, ondices = undefined) {\n        const signers = this.prxs.map((prx) => this.decrypter.decrypt(new _cipher_js__WEBPACK_IMPORTED_MODULE_6__.Cipher({ qb64: prx }).qb64b, undefined, this.transferable));\n        if (indexed) {\n            const sigers = [];\n            let i = 0;\n            for (const [j, signer] of signers.entries()) {\n                if (indices != undefined) {\n                    i = indices[j];\n                    if (typeof i != 'number' || i < 0) {\n                        throw new Error(`Invalid signing index = ${i}, not whole number.`);\n                    }\n                }\n                else {\n                    i = j;\n                }\n                let o = 0;\n                if (ondices != undefined) {\n                    o = ondices[j];\n                    if ((o == undefined ||\n                        (typeof o == 'number' &&\n                            typeof o != 'number' &&\n                            o >= 0))) {\n                        throw new Error(`Invalid ondex = ${o}, not whole number.`);\n                    }\n                }\n                else {\n                    o = i;\n                }\n                sigers.push(signer.sign(ser, i, o == undefined ? true : false, o));\n            }\n            return sigers.map((siger) => siger.qb64);\n        }\n        else {\n            const cigars = [];\n            for (const [, signer] of signers.entries()) {\n                cigars.push(signer.sign(ser));\n            }\n            return cigars.map((cigar) => cigar.qb64);\n        }\n    }\n}\nclass GroupIdentifierManager {\n    constructor(manager, mhab, states = undefined, rstates = undefined, keys = [], ndigs = []) {\n        var _a, _b;\n        this.gkeys = [];\n        this.gdigs = [];\n        this.algo = _manager_js__WEBPACK_IMPORTED_MODULE_0__.Algos.group;\n        this.manager = manager;\n        if (states != undefined) {\n            keys = states.map((state) => state['k'][0]);\n        }\n        if (rstates != undefined) {\n            ndigs = rstates.map((state) => state['n'][0]);\n        }\n        this.gkeys = (_a = states === null || states === void 0 ? void 0 : states.map((state) => state['k'][0])) !== null && _a !== void 0 ? _a : keys;\n        this.gdigs = (_b = rstates === null || rstates === void 0 ? void 0 : rstates.map((state) => state['n'][0])) !== null && _b !== void 0 ? _b : ndigs;\n        this.mhab = mhab;\n        this.signers = [];\n    }\n    async incept() {\n        return [this.gkeys, this.gdigs];\n    }\n    /**\n     * Performs a multisig rotation\n     * @param _ncodes\n     * @param _transferable\n     * @param states\n     * @param rstates key state records for the prior establishment event indicating next key digests.\n     *                You should pass in the current key\n     */\n    async rotate(_ncodes, _transferable, states, rstates) {\n        this.gkeys = states.map((state) => state['k'][0]);\n        this.gdigs = rstates.map((state) => state['n'][0]);\n        return [this.gkeys, this.gdigs];\n    }\n    async sign(ser, indexed = true) {\n        if (!this.mhab.state) {\n            throw new Error(`No state in mhab`);\n        }\n        const key = this.mhab['state']['k'][0];\n        const ndig = this.mhab['state']['n'][0];\n        const csi = this.gkeys.indexOf(key); // csi = current signing index (from current rotation event)\n        const pni = this.gdigs.indexOf(ndig); // pni = prior next index (from last establishment event)\n        const mkeeper = this.manager.get(this.mhab);\n        return await mkeeper.sign(ser, indexed, [csi], [pni]);\n    }\n    params() {\n        return {\n            mhab: this.mhab,\n            keys: this.gkeys,\n            ndigs: this.gdigs,\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/core/keeping.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/core/kering.js":
/*!**********************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/core/kering.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EmptyMaterialError: () => (/* binding */ EmptyMaterialError)\n/* harmony export */ });\nclass EmptyMaterialError {\n    constructor(err) {\n        this._err = new Error(err);\n    }\n    get err() {\n        return this._err;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2tlcmkvY29yZS9rZXJpbmcuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdGVsbGFyLXByb2N1cmVtZW50LWRhcHAvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2tlcmkvY29yZS9rZXJpbmcuanM/ZWViNSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgRW1wdHlNYXRlcmlhbEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihlcnIpIHtcbiAgICAgICAgdGhpcy5fZXJyID0gbmV3IEVycm9yKGVycik7XG4gICAgfVxuICAgIGdldCBlcnIoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9lcnI7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/core/kering.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/core/keyState.js":
/*!************************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/core/keyState.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _manager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./manager.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/manager.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2tlcmkvY29yZS9rZXlTdGF0ZS5qcyIsIm1hcHBpbmdzIjoiOztBQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL3N0ZWxsYXItcHJvY3VyZW1lbnQtZGFwcC8uL25vZGVfbW9kdWxlcy9zaWduaWZ5LXRzL2Rpc3Qva2VyaS9jb3JlL2tleVN0YXRlLmpzPzdiYmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWxnb3MgfSBmcm9tIFwiLi9tYW5hZ2VyLmpzXCI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/core/keyState.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/core/manager.js":
/*!***********************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/core/manager.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Algos: () => (/* binding */ Algos),\n/* harmony export */   Creatory: () => (/* binding */ Creatory),\n/* harmony export */   Manager: () => (/* binding */ Manager),\n/* harmony export */   RandyCreator: () => (/* binding */ RandyCreator),\n/* harmony export */   SaltyCreator: () => (/* binding */ SaltyCreator),\n/* harmony export */   openManager: () => (/* binding */ openManager),\n/* harmony export */   riKey: () => (/* binding */ riKey)\n/* harmony export */ });\n/* harmony import */ var _encrypter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./encrypter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/encrypter.js\");\n/* harmony import */ var _decrypter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./decrypter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/decrypter.js\");\n/* harmony import */ var _salter_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./salter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/salter.js\");\n/* harmony import */ var _signer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./signer.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/signer.js\");\n/* harmony import */ var _verfer_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./verfer.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/verfer.js\");\n/* harmony import */ var _matter_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./matter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/matter.js\");\n/* harmony import */ var _diger_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./diger.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/diger.js\");\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./core.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/core.js\");\n\n\n\n\n\n\n\n\n/**\n * Kinds of key pair generation algorithms.\n * Salty is deterministic based on a salt and stem.\n * Randy is random.\n * Group is a multi-signature group algorithm indicating keys are retrieved from a group member which will be either Salty or Randy.\n * Extern is an external key pair algorithm indicating keys are provided by an external source such as an HSM.\n */\nvar Algos;\n(function (Algos) {\n    Algos[\"randy\"] = \"randy\";\n    Algos[\"salty\"] = \"salty\";\n    Algos[\"group\"] = \"group\";\n    Algos[\"extern\"] = \"extern\";\n})(Algos || (Algos = {}));\n/**\n * Lot (set) of public keys as an ordered list with indexes and the time created.\n * Indexes refer to the index of the ordered sequence of keys in an establishment event (inception or rotation).\n * Assumes the same length for each set of keys across all PubLot instances used for a given identifier.\n */\nclass PubLot {\n    constructor() {\n        /**\n         * List of fully qualified, Base64 encoded public keys. Defaults to empty.\n         */\n        this.pubs = new Array();\n        /**\n         * Rotation index; index of rotation (est event) that uses this public key set.\n         * The index of the key set for an inception event is 0.\n         */\n        this.ridx = 0;\n        /**\n         * Key index; index of the starting key in the key set for this lot in sequence\n         * with reference to all public keys for the identifier.\n         * For example, if each set (PubLot.pubs) has 3 keys then ridx 2 has kidx of 2*3 = 6.\n         * Defaults to 0.\n         */\n        this.kidx = 0;\n        /**\n         * Datetime of when key set created formatted as an ISO 8601 compliant string.\n         */\n        this.dt = '';\n    }\n}\n/**\n * Prefix's public key situation (set of public keys).\n */\nclass PreSit {\n    constructor() {\n        /**\n         * Previous publot; previous public key set.\n         */\n        this.old = new PubLot();\n        /**\n         * New, current publot; current public key set.\n         */\n        this.new = new PubLot();\n        /**\n         * Next public publot\n         */\n        this.nxt = new PubLot();\n    }\n}\n/**\n * Identifier prefix parameters for creating new key pairs.\n */\nclass PrePrm {\n    constructor() {\n        /**\n         * Prefix index for this keypair sequence.\n         */\n        this.pidx = 0;\n        /**\n         * Key generation algorithm type.\n         * Defaults to Salty.\n         * Salty default uses indices and salt to create new key pairs.\n         */\n        this.algo = Algos.salty;\n        /**\n         * Used for salty algo. Defaults to empty. Unused for randy algo.\n         */\n        this.salt = '';\n        /**\n         * Default unique path prefix used by the salty algo during key generation.\n         */\n        this.stem = '';\n        /**\n         * Security tier for stretch index; used by the salty algo.\n         */\n        this.tier = '';\n    }\n}\n/**\n * An identifier prefix's public key set (list) at a given rotation index ridx.\n */\nclass PubSet {\n    constructor() {\n        /**\n         * List of fully qualified, Base64 encoded public keys.\n         */\n        this.pubs = new Array();\n    }\n}\n/**\n * Describes a path to a specific derived keypair for a given identifier\n */\nclass PubPath {\n    constructor() {\n        /**\n         * The path to a specific keypair. To generate a keypair you combine the path with the salt and tier.\n         */\n        this.path = '';\n        /**\n         * Derivation code indicating the kind of cryptographic keypair to generate. Defaults to Ed25519.\n         */\n        this.code = '';\n        /**\n         * Security tier to use to generate a keypair. Defaults to high.\n         */\n        this.tier = _salter_js__WEBPACK_IMPORTED_MODULE_2__.Tier.high;\n        /**\n         * Flag to control whether to generate a low security, temporary key. Used for speed for unit tests. Do NOT use for production identifiers.\n         */\n        this.temp = false;\n    }\n}\nclass Keys {\n    constructor(signers, paths) {\n        this._signers = signers;\n        if (paths != undefined) {\n            if (signers.length != paths.length) {\n                throw new Error('If paths are provided, they must be the same length as signers');\n            }\n        }\n        this._paths = paths;\n    }\n    get paths() {\n        return this._paths;\n    }\n    get signers() {\n        return this._signers;\n    }\n}\nclass RandyCreator {\n    create(codes = undefined, count = 1, code = _matter_js__WEBPACK_IMPORTED_MODULE_5__.MtrDex.Ed25519_Seed, transferable = true) {\n        const signers = new Array();\n        if (codes == undefined) {\n            codes = new Array(count).fill(code);\n        }\n        codes.forEach(function (code) {\n            signers.push(new _signer_js__WEBPACK_IMPORTED_MODULE_3__.Signer({ code: code, transferable: transferable }));\n        });\n        return new Keys(signers);\n    }\n    /**\n     * Unused for random key generation.\n     */\n    get salt() {\n        return '';\n    }\n    /**\n     * Unused for random key generation.\n     */\n    get stem() {\n        return '';\n    }\n    /**\n     * Unused for random key generation.\n     */\n    get tier() {\n        return '';\n    }\n}\n/**\n * Deterministically creates a key pair based on combining a salt with a path stretch algorithm.\n * The salt is randomized if not provided.\n */\nclass SaltyCreator {\n    constructor(salt = undefined, tier = undefined, stem = undefined) {\n        this.salter = new _salter_js__WEBPACK_IMPORTED_MODULE_2__.Salter({ qb64: salt, tier: tier });\n        this._stem = stem == undefined ? '' : stem;\n    }\n    get salt() {\n        return this.salter.qb64;\n    }\n    get stem() {\n        return this._stem;\n    }\n    get tier() {\n        return this.salter.tier;\n    }\n    create(codes = undefined, count = 1, code = _matter_js__WEBPACK_IMPORTED_MODULE_5__.MtrDex.Ed25519_Seed, transferable = true, pidx = 0, ridx = 0, kidx = 0, temp = false) {\n        const signers = new Array();\n        const paths = new Array();\n        if (codes == undefined) {\n            codes = new Array(count).fill(code);\n        }\n        codes.forEach((code, idx) => {\n            // Previous definition of path\n            // let path = this.stem + pidx.toString(16) + ridx.toString(16) + (kidx+idx).toString(16)\n            const path = this.stem == ''\n                ? pidx.toString(16)\n                : this.stem + ridx.toString(16) + (kidx + idx).toString(16);\n            signers.push(this.salter.signer(code, transferable, path, this.tier, temp));\n            paths.push(path);\n        });\n        return new Keys(signers, paths);\n    }\n}\nclass Creatory {\n    constructor(algo = Algos.salty) {\n        switch (algo) {\n            case Algos.randy:\n                this._make = this._makeRandy;\n                break;\n            case Algos.salty:\n                this._make = this._makeSalty;\n                break;\n            default:\n                throw new Error(`unsupported algo=${algo}`);\n        }\n    }\n    make(...args) {\n        return this._make(...args);\n    }\n    _makeRandy() {\n        return new RandyCreator();\n    }\n    _makeSalty(...args) {\n        return new SaltyCreator(...args);\n    }\n}\nfunction openManager(passcode, salt) {\n    if (passcode.length < 21) {\n        throw new Error('Bran (passcode seed material) too short.');\n    }\n    const bran = _matter_js__WEBPACK_IMPORTED_MODULE_5__.MtrDex.Salt_128 + 'A' + passcode.substring(0, 21); // qb64 salt for seed\n    const signer = new _salter_js__WEBPACK_IMPORTED_MODULE_2__.Salter({ qb64: bran }).signer(_matter_js__WEBPACK_IMPORTED_MODULE_5__.MtrDex.Ed25519_Seed, false);\n    const seed = signer.qb64;\n    const aeid = signer.verfer.qb64; // lest it remove encryption\n    let algo;\n    const salter = salt != undefined ? new _salter_js__WEBPACK_IMPORTED_MODULE_2__.Salter({ qb64: salt }) : undefined;\n    if (salt != undefined) {\n        algo = Algos.salty;\n    }\n    else {\n        algo = Algos.randy;\n    }\n    return new Manager({ seed: seed, aeid: aeid, algo: algo, salter: salter });\n}\n/**\n * Manages key pair creation, retrieval, and message signing.\n */\nclass Manager {\n    constructor(args) {\n        let { ks, seed, aeid, pidx, algo, salter, tier } = args;\n        this._ks = ks == undefined ? new Keeper() : ks;\n        this._seed = seed;\n        this._encrypter = undefined;\n        this._decrypter = undefined;\n        aeid = aeid == undefined ? undefined : aeid;\n        pidx = pidx == undefined ? 0 : pidx;\n        algo = algo == undefined ? Algos.salty : algo;\n        const salt = salter === null || salter === void 0 ? void 0 : salter.qb64;\n        tier = tier == undefined ? _salter_js__WEBPACK_IMPORTED_MODULE_2__.Tier.low : tier;\n        if (this.pidx == undefined) {\n            this.pidx = pidx;\n        }\n        if (this.algo == undefined) {\n            this.algo = algo;\n        }\n        if (this.salt == undefined) {\n            this.salt = salt;\n        }\n        if (this.tier == undefined) {\n            this.tier = tier;\n        }\n        if (this.aeid == undefined) {\n            this.updateAeid(aeid, this._seed);\n        }\n    }\n    get ks() {\n        return this._ks;\n    }\n    get encrypter() {\n        return this._encrypter;\n    }\n    get decrypter() {\n        return this._decrypter;\n    }\n    get seed() {\n        return this._seed;\n    }\n    /**\n     * qb64 auth encrypt id prefix\n     */\n    get aeid() {\n        return this.ks.getGbls('aeid');\n    }\n    get pidx() {\n        const pidx = this.ks.getGbls('pidx');\n        if (pidx != undefined) {\n            return parseInt(pidx, 16);\n        }\n        return undefined;\n    }\n    set pidx(pidx) {\n        this.ks.pinGbls('pidx', pidx.toString(16));\n    }\n    get salt() {\n        if (this._decrypter == undefined) {\n            return this._salt;\n        }\n        else {\n            const salt = this.ks.getGbls('salt');\n            return this._decrypter.decrypt((0,_core_js__WEBPACK_IMPORTED_MODULE_7__.b)(salt)).qb64;\n        }\n    }\n    set salt(salt) {\n        if (this._encrypter == undefined) {\n            this._salt = salt;\n        }\n        else {\n            salt = this._encrypter.encrypt((0,_core_js__WEBPACK_IMPORTED_MODULE_7__.b)(salt)).qb64;\n            this.ks.pinGbls('salt', salt);\n        }\n    }\n    get tier() {\n        return this.ks.getGbls('tier');\n    }\n    set tier(tier) {\n        this.ks.pinGbls('tier', tier);\n    }\n    get algo() {\n        const a = this.ks.getGbls('algo');\n        const ta = a;\n        return Algos[ta];\n    }\n    set algo(algo) {\n        this.ks.pinGbls('algo', algo);\n    }\n    updateAeid(aeid, seed) {\n        var _a;\n        if (this.aeid != undefined) {\n            const seed = (0,_core_js__WEBPACK_IMPORTED_MODULE_7__.b)(this._seed);\n            if (this._seed == undefined || !((_a = this._encrypter) === null || _a === void 0 ? void 0 : _a.verifySeed(seed))) {\n                throw new Error(`Last seed missing or provided last seed \"\n                                       \"not associated with last aeid=${this.aeid}.`);\n            }\n        }\n        if (aeid != '' && aeid != undefined) {\n            if (aeid != this.aeid) {\n                this._encrypter = new _encrypter_js__WEBPACK_IMPORTED_MODULE_0__.Encrypter({}, (0,_core_js__WEBPACK_IMPORTED_MODULE_7__.b)(aeid));\n                if (seed == undefined || !this._encrypter.verifySeed((0,_core_js__WEBPACK_IMPORTED_MODULE_7__.b)(seed))) {\n                    throw new Error(`Seed missing or provided seed not associated\"\n                                           \"  with provided aeid=${aeid}.`);\n                }\n            }\n        }\n        else if (this.algo == Algos.randy) {\n            // Unlike KERIpy, we don't support unencrypted secrets\n            throw new Error('Invalid Manager configuration, encryption must be used with Randy key creation.');\n        }\n        else {\n            this._encrypter = undefined;\n        }\n        const salt = this.salt;\n        if (salt != undefined) {\n            this.salt = salt;\n        }\n        if (this._decrypter != undefined) {\n            for (const [keys, data] of this.ks.prmsElements()) {\n                if (data.salt != undefined) {\n                    const salter = this._decrypter.decrypt((0,_core_js__WEBPACK_IMPORTED_MODULE_7__.b)(data.salt));\n                    data.salt =\n                        this._encrypter == undefined\n                            ? salter.qb64\n                            : this._encrypter.encrypt(null, salter);\n                    this.ks.pinPrms(keys, data);\n                }\n            }\n            for (const [pubKey, signer] of this.ks.prisElements(this._decrypter)) {\n                this.ks.pinPris(pubKey, signer, this._encrypter);\n            }\n        }\n        this.ks.pinGbls('aeid', aeid); // set aeid in db\n        this._seed = seed; // set .seed in memory\n        // update .decrypter\n        this._decrypter =\n            seed != undefined ? new _decrypter_js__WEBPACK_IMPORTED_MODULE_1__.Decrypter({}, (0,_core_js__WEBPACK_IMPORTED_MODULE_7__.b)(seed)) : undefined;\n    }\n    incept(args) {\n        let { icodes = undefined, icount = 1, icode = _matter_js__WEBPACK_IMPORTED_MODULE_5__.MtrDex.Ed25519_Seed, ncodes = undefined, ncount = 1, ncode = _matter_js__WEBPACK_IMPORTED_MODULE_5__.MtrDex.Ed25519_Seed, dcode = _matter_js__WEBPACK_IMPORTED_MODULE_5__.MtrDex.Blake3_256, algo = undefined, salt = undefined, stem = undefined, tier = undefined, rooted = true, transferable = true, temp = false, } = args;\n        if (rooted && algo == undefined) {\n            algo = this.algo;\n        }\n        if (rooted && salt == undefined) {\n            salt = this.salt;\n        }\n        if (rooted && tier == undefined) {\n            tier = this.tier;\n        }\n        const pidx = this.pidx;\n        const ridx = 0;\n        const kidx = 0;\n        const creator = new Creatory(algo).make(salt, tier, stem);\n        if (icodes == undefined) {\n            if (icount < 0) {\n                throw new Error(`Invalid icount=${icount} must be >= 0.`);\n            }\n            icodes = new Array(icount).fill(icode);\n        }\n        const ikeys = creator.create(icodes, 0, _matter_js__WEBPACK_IMPORTED_MODULE_5__.MtrDex.Ed25519_Seed, transferable, pidx, ridx, kidx, temp);\n        const verfers = Array.from(ikeys.signers, (signer) => signer.verfer);\n        if (ncodes == undefined) {\n            if (ncount < 0) {\n                throw new Error(`Invalid ncount=${ncount} must be >= 0.`);\n            }\n            ncodes = new Array(ncount).fill(ncode);\n        }\n        const nkeys = creator.create(ncodes, 0, _matter_js__WEBPACK_IMPORTED_MODULE_5__.MtrDex.Ed25519_Seed, transferable, pidx, ridx + 1, kidx + icodes.length, temp);\n        const digers = Array.from(nkeys.signers, (signer) => new _diger_js__WEBPACK_IMPORTED_MODULE_6__.Diger({ code: dcode }, signer.verfer.qb64b));\n        const pp = new PrePrm();\n        pp.pidx = pidx;\n        pp.algo = algo;\n        pp.salt =\n            creator.salt.length == 0 || this.encrypter == undefined\n                ? ''\n                : this.encrypter.encrypt((0,_core_js__WEBPACK_IMPORTED_MODULE_7__.b)(creator.salt)).qb64;\n        pp.stem = creator.stem;\n        pp.tier = creator.tier;\n        const dt = new Date().toString();\n        const nw = new PubLot();\n        nw.pubs = Array.from(verfers, (verfer) => verfer.qb64);\n        nw.ridx = ridx;\n        nw.kidx = kidx;\n        nw.dt = dt;\n        const nt = new PubLot();\n        nt.pubs = Array.from(nkeys.signers, (signer) => signer.verfer.qb64);\n        nt.ridx = ridx + 1;\n        nt.kidx = kidx + icodes.length;\n        nt.dt = dt;\n        const ps = new PreSit();\n        ps.new = nw;\n        ps.nxt = nt;\n        const pre = verfers[0].qb64;\n        if (!this.ks.putPres(pre, verfers[0].qb64b)) {\n            throw new Error(`Already incepted pre=${pre}.`);\n        }\n        if (!this.ks.putPrms(pre, pp)) {\n            throw new Error(`Already incepted prm for pre=${pre}.`);\n        }\n        this.pidx = pidx + 1;\n        if (!this.ks.putSits(pre, ps)) {\n            throw new Error(`Already incepted sit for pre=${pre}.`);\n        }\n        if (this.encrypter != undefined) {\n            // Only store encrypted keys if we have an encrypter, otherwise regenerate\n            ikeys.signers.forEach((signer) => {\n                this.ks.putPris(signer.verfer.qb64, signer, this.encrypter);\n            });\n            nkeys.signers.forEach((signer) => {\n                this.ks.putPris(signer.verfer.qb64, signer, this.encrypter);\n            });\n        }\n        else if (this._encrypter == undefined &&\n            ikeys.paths != undefined &&\n            nkeys.paths != undefined) {\n            ikeys.paths.forEach((path, idx) => {\n                const signer = ikeys.signers[idx];\n                const ppt = new PubPath();\n                ppt.path = path;\n                ppt.code = icodes[idx];\n                ppt.tier = pp.tier;\n                ppt.temp = temp;\n                this.ks.putPths(signer.verfer.qb64, ppt);\n            });\n            nkeys.paths.forEach((path, idx) => {\n                const signer = nkeys.signers[idx];\n                const ppt = new PubPath();\n                ppt.path = path;\n                ppt.code = ncodes[idx];\n                ppt.tier = pp.tier;\n                ppt.temp = temp;\n                this.ks.putPths(signer.verfer.qb64, ppt);\n            });\n        }\n        else {\n            throw new Error('invalid configuration, randy keys without encryption');\n        }\n        const pubSet = new PubSet();\n        pubSet.pubs = ps.new.pubs;\n        this.ks.putPubs(riKey(pre, ridx), pubSet);\n        const nxtPubSet = new PubSet();\n        nxtPubSet.pubs = ps.nxt.pubs;\n        this.ks.putPubs(riKey(pre, ridx + 1), nxtPubSet);\n        return [verfers, digers];\n    }\n    move(old, gnu) {\n        if (old == gnu) {\n            return;\n        }\n        if (this.ks.getPres(old) == undefined) {\n            throw new Error(`Nonexistent old pre=${old}, nothing to assign.`);\n        }\n        if (this.ks.getPres(gnu) != undefined) {\n            throw new Error(`Preexistent new pre=${gnu} may not clobber.`);\n        }\n        const oldprm = this.ks.getPrms(old);\n        if (oldprm == undefined) {\n            throw new Error(`Nonexistent old prm for pre=${old}, nothing to move.`);\n        }\n        if (this.ks.getPrms(gnu) != undefined) {\n            throw new Error(`Preexistent new prm for pre=${gnu} may not clobber.`);\n        }\n        const oldsit = this.ks.getSits(old);\n        if (oldsit == undefined) {\n            throw new Error(`Nonexistent old sit for pre=${old}, nothing to move.`);\n        }\n        if (this.ks.getSits(gnu) != undefined) {\n            throw new Error(`Preexistent new sit for pre=${gnu} may not clobber.`);\n        }\n        if (!this.ks.putPrms(gnu, oldprm)) {\n            throw new Error(`Failed moving prm from old pre=${old} to new pre=${gnu}.`);\n        }\n        else {\n            this.ks.remPrms(old);\n        }\n        if (!this.ks.putSits(gnu, oldsit)) {\n            throw new Error(`Failed moving sit from old pre=${old} to new pre=${gnu}.`);\n        }\n        else {\n            this.ks.remSits(old);\n        }\n        let i = 0;\n        while (true) {\n            const pl = this.ks.getPubs(riKey(old, i));\n            if (pl == undefined) {\n                break;\n            }\n            if (!this.ks.putPubs(riKey(gnu, i), pl)) {\n                throw new Error(`Failed moving pubs at pre=${old} ri=${i} to new pre=${gnu}`);\n            }\n            i = i + 1;\n        }\n        if (!this.ks.pinPres(old, (0,_core_js__WEBPACK_IMPORTED_MODULE_7__.b)(gnu))) {\n            throw new Error(`Failed assiging new pre=${gnu} to old pre=${old}.`);\n        }\n        if (!this.ks.putPres(gnu, (0,_core_js__WEBPACK_IMPORTED_MODULE_7__.b)(gnu))) {\n            throw new Error(`Failed assiging new pre=${gnu}.`);\n        }\n    }\n    rotate(args) {\n        let { pre, ncodes = undefined, ncount = 1, ncode = _matter_js__WEBPACK_IMPORTED_MODULE_5__.MtrDex.Ed25519_Seed, dcode = _matter_js__WEBPACK_IMPORTED_MODULE_5__.MtrDex.Blake3_256, transferable = true, temp = false, erase = true, } = args;\n        const pp = this.ks.getPrms(pre);\n        if (pp == undefined) {\n            throw new Error(`Attempt to rotate nonexistent pre=${pre}.`);\n        }\n        const ps = this.ks.getSits(pre);\n        if (ps == undefined) {\n            throw new Error(`Attempt to rotate nonexistent pre=${pre}.`);\n        }\n        if (ps.nxt.pubs == undefined || ps.nxt.pubs.length == 0) {\n            throw new Error(`Attempt to rotate nontransferable pre=${pre}.`);\n        }\n        const old = ps.old;\n        ps.old = ps.new;\n        ps.new = ps.nxt;\n        if (this.aeid != undefined && this.decrypter == undefined) {\n            throw new Error('Unauthorized decryption attempt.  Aeid but no decrypter.');\n        }\n        const verfers = new Array();\n        ps.new.pubs.forEach((pub) => {\n            if (this.decrypter != undefined) {\n                const signer = this.ks.getPris(pub, this.decrypter);\n                if (signer == undefined) {\n                    throw new Error(`Missing prikey in db for pubkey=${pub}`);\n                }\n                verfers.push(signer.verfer);\n            }\n            else {\n                // Should we regenerate from salt here since this.decryptor is undefined\n                verfers.push(new _verfer_js__WEBPACK_IMPORTED_MODULE_4__.Verfer({ qb64: pub }));\n            }\n        });\n        let salt = pp.salt;\n        if (salt != undefined && salt != '') {\n            // If you provded a Salt for an AID but don't have encryption, pitch a fit\n            if (this.decrypter == undefined) {\n                throw new Error('Invalid configuration: AID salt with no encryption');\n            }\n            salt = this.decrypter.decrypt((0,_core_js__WEBPACK_IMPORTED_MODULE_7__.b)(salt)).qb64;\n        }\n        else {\n            salt = this.salt;\n        }\n        const creator = new Creatory(pp.algo).make(salt, pp.tier, pp.stem);\n        if (ncodes == undefined) {\n            if (ncount < 0) {\n                throw new Error(`Invalid count=${ncount} must be >= 0`);\n            }\n            ncodes = new Array(ncount).fill(ncode);\n        }\n        const pidx = pp.pidx;\n        const ridx = ps.new.ridx + 1;\n        const kidx = ps.nxt.kidx + ps.new.pubs.length;\n        const keys = creator.create(ncodes, 0, '', transferable, pidx, ridx, kidx, temp);\n        const digers = Array.from(keys.signers, (signer) => new _diger_js__WEBPACK_IMPORTED_MODULE_6__.Diger({ code: dcode }, signer.verfer.qb64b));\n        const dt = new Date().toString();\n        ps.nxt = new PubLot();\n        ps.nxt.pubs = Array.from(keys.signers, (signer) => signer.verfer.qb64);\n        ps.nxt.ridx = ridx;\n        ps.nxt.kidx = kidx;\n        ps.nxt.dt = dt;\n        if (!this.ks.pinSits(pre, ps)) {\n            throw new Error(`Problem updating pubsit db for pre=${pre}.`);\n        }\n        if (this.encrypter != undefined) {\n            // Only store encrypted keys if we have an encrypter, otherwise regenerate\n            keys.signers.forEach((signer) => {\n                this.ks.putPris(signer.verfer.qb64, signer, this.encrypter);\n            });\n        }\n        else if (this._encrypter == undefined && keys.paths != undefined) {\n            keys.paths.forEach((path, idx) => {\n                const signer = keys.signers[idx];\n                const ppt = new PubPath();\n                ppt.path = path;\n                ppt.tier = pp.tier;\n                ppt.temp = temp;\n                this.ks.putPths(signer.verfer.qb64, ppt);\n            });\n        }\n        else {\n            throw new Error('invalid configuration, randy keys without encryption');\n        }\n        const newPs = new PubSet();\n        newPs.pubs = ps.nxt.pubs;\n        this.ks.putPubs(riKey(pre, ps.nxt.ridx), newPs);\n        if (erase) {\n            old.pubs.forEach((pub) => {\n                this.ks.remPris(pub);\n            });\n        }\n        return [verfers, digers];\n    }\n    sign(args) {\n        const { ser, pubs = undefined, verfers = undefined, indexed = true, indices = undefined, ondices = undefined, } = args;\n        const signers = new Array();\n        if (pubs == undefined && verfers == undefined) {\n            throw new Error('pubs or verfers required');\n        }\n        if (pubs != undefined) {\n            if (this.aeid != undefined && this.decrypter == undefined) {\n                throw new Error('Unauthorized decryption attempt.  Aeid but no decrypter.');\n            }\n            pubs.forEach((pub) => {\n                //If no decrypter then get SaltyState and regenerate prikey\n                if (this.decrypter != undefined) {\n                    const signer = this.ks.getPris(pub, this.decrypter);\n                    if (signer == undefined) {\n                        throw new Error(`Missing prikey in db for pubkey=${pub}`);\n                    }\n                    signers.push(signer);\n                }\n                else {\n                    const verfer = new _verfer_js__WEBPACK_IMPORTED_MODULE_4__.Verfer({ qb64: pub });\n                    const ppt = this.ks.getPths(pub);\n                    if (ppt == undefined) {\n                        throw new Error(`Missing prikey in db for pubkey=${pub}`);\n                    }\n                    const salter = new _salter_js__WEBPACK_IMPORTED_MODULE_2__.Salter({ qb64: this.salt });\n                    signers.push(salter.signer(ppt.code, verfer.transferable, ppt.path, ppt.tier, ppt.temp));\n                }\n            });\n        }\n        else {\n            verfers.forEach((verfer) => {\n                if (this.decrypter != undefined) {\n                    const signer = this.ks.getPris(verfer.qb64, this.decrypter);\n                    if (signer == undefined) {\n                        throw new Error(`Missing prikey in db for pubkey=${verfer.qb64}`);\n                    }\n                    signers.push(signer);\n                }\n                else {\n                    const ppt = this.ks.getPths(verfer.qb64);\n                    if (ppt == undefined) {\n                        throw new Error(`Missing prikey in db for pubkey=${verfer.qb64}`);\n                    }\n                    const salter = new _salter_js__WEBPACK_IMPORTED_MODULE_2__.Salter({ qb64: this.salt });\n                    signers.push(salter.signer(ppt.code, verfer.transferable, ppt.path, ppt.tier, ppt.temp));\n                }\n            });\n        }\n        if (indices != undefined && indices.length != signers.length) {\n            throw new Error(`Mismatch indices length=${indices.length} and resultant signers length=${signers.length}`);\n        }\n        if (ondices != undefined && ondices.length != signers.length) {\n            throw new Error(`Mismatch ondices length=${ondices.length} and resultant signers length=${signers.length}`);\n        }\n        if (indexed) {\n            const sigers = new Array();\n            signers.forEach((signer, idx) => {\n                let i;\n                if (indices != undefined) {\n                    i = indices[idx];\n                    if (i < 0) {\n                        throw new Error(`Invalid signing index = ${i}, not whole number.`);\n                    }\n                }\n                else {\n                    i = idx;\n                }\n                let o;\n                if (ondices != undefined) {\n                    o = ondices[idx];\n                    if (o <= 0) {\n                        throw new Error(`Invalid other signing index = {o}, not None or not whole number.`);\n                    }\n                }\n                else {\n                    o = i;\n                }\n                const only = o == undefined;\n                sigers.push(signer.sign(ser, i, only, o));\n            });\n            return sigers;\n        }\n        else {\n            const cigars = new Array();\n            signers.forEach((signer) => {\n                cigars.push(signer.sign(ser));\n            });\n            return cigars;\n        }\n    }\n}\nfunction riKey(pre, ridx) {\n    return pre + '.' + ridx.toString(16).padStart(32, '0');\n}\n/**\n * Keeper sets up named sub databases for key pair storage (KS).\n * Methods provide key pair creation, storage, and data signing.\n * In-memory test implementation of Keeper key store\n */\nclass Keeper {\n    constructor() {\n        this._gbls = new Map();\n        this._pris = new Map();\n        this._pths = new Map();\n        this._pres = new Map();\n        this._prms = new Map();\n        this._sits = new Map();\n        this._pubs = new Map();\n    }\n    getGbls(key) {\n        return this._gbls.get(key);\n    }\n    pinGbls(key, val) {\n        this._gbls.set(key, val);\n    }\n    prmsElements() {\n        const out = new Array();\n        this._prms.forEach((value, key) => {\n            out.push([key, value]);\n        });\n        return out;\n    }\n    getPrms(keys) {\n        return this._prms.get(keys);\n    }\n    pinPrms(keys, data) {\n        this._prms.set(keys, data);\n    }\n    putPrms(keys, data) {\n        if (this._prms.has(keys)) {\n            return false;\n        }\n        this._prms.set(keys, data);\n        return true;\n    }\n    remPrms(keys) {\n        return this._prms.delete(keys);\n    }\n    prisElements(decrypter) {\n        const out = new Array();\n        this._pris.forEach(function (val, pubKey) {\n            const verfer = new _verfer_js__WEBPACK_IMPORTED_MODULE_4__.Verfer({ qb64: pubKey });\n            const signer = decrypter.decrypt(val, null, verfer.transferable);\n            out.push([pubKey, signer]);\n        });\n        return out;\n    }\n    pinPris(pubKey, signer, encrypter) {\n        const cipher = encrypter.encrypt(null, signer);\n        this._pris.set(pubKey, cipher.qb64b);\n    }\n    putPris(pubKey, signer, encrypter) {\n        if (this._pris.has(pubKey)) {\n            return false;\n        }\n        const cipher = encrypter.encrypt(null, signer);\n        this._pris.set(pubKey, cipher.qb64b);\n        return true;\n    }\n    getPris(pubKey, decrypter) {\n        const val = this._pris.get(pubKey);\n        if (val == undefined) {\n            return undefined;\n        }\n        const verfer = new _verfer_js__WEBPACK_IMPORTED_MODULE_4__.Verfer({ qb64: pubKey });\n        return decrypter.decrypt(val, null, verfer.transferable);\n    }\n    pinPths(pubKey, val) {\n        this._pths.set(pubKey, val);\n        return true;\n    }\n    putPths(pubKey, val) {\n        if (this._pths.has(pubKey)) {\n            return false;\n        }\n        this._pths.set(pubKey, val);\n        return true;\n    }\n    getPths(pubKey) {\n        return this._pths.get(pubKey);\n    }\n    remPris(pubKey) {\n        this._pris.delete(pubKey);\n    }\n    getPres(pre) {\n        return this._pres.get(pre);\n    }\n    pinPres(pre, val) {\n        this._pres.set(pre, val);\n        return true;\n    }\n    putPres(pre, val) {\n        if (this._pres.has(pre)) {\n            return false;\n        }\n        this._pres.set(pre, val);\n        return true;\n    }\n    getSits(keys) {\n        return this._sits.get(keys);\n    }\n    putSits(pre, val) {\n        if (this._sits.has(pre)) {\n            return false;\n        }\n        this._sits.set(pre, val);\n        return true;\n    }\n    pinSits(pre, val) {\n        this._sits.set(pre, val);\n        return true;\n    }\n    remSits(keys) {\n        return this._sits.delete(keys);\n    }\n    getPubs(keys) {\n        return this._pubs.get(keys);\n    }\n    putPubs(keys, data) {\n        if (this._pubs.has(keys)) {\n            return false;\n        }\n        this._pubs.set(keys, data);\n        return true;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/core/manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/core/matter.js":
/*!**********************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/core/matter.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BexCodex: () => (/* binding */ BexCodex),\n/* harmony export */   BexDex: () => (/* binding */ BexDex),\n/* harmony export */   Codex: () => (/* binding */ Codex),\n/* harmony export */   DigiCodex: () => (/* binding */ DigiCodex),\n/* harmony export */   DigiDex: () => (/* binding */ DigiDex),\n/* harmony export */   LargeVrzDex: () => (/* binding */ LargeVrzDex),\n/* harmony export */   Matter: () => (/* binding */ Matter),\n/* harmony export */   MatterCodex: () => (/* binding */ MatterCodex),\n/* harmony export */   MtrDex: () => (/* binding */ MtrDex),\n/* harmony export */   NonTransCodex: () => (/* binding */ NonTransCodex),\n/* harmony export */   NonTransDex: () => (/* binding */ NonTransDex),\n/* harmony export */   NumCodex: () => (/* binding */ NumCodex),\n/* harmony export */   NumDex: () => (/* binding */ NumDex),\n/* harmony export */   Sizage: () => (/* binding */ Sizage),\n/* harmony export */   SmallVrzDex: () => (/* binding */ SmallVrzDex)\n/* harmony export */ });\n/* harmony import */ var _kering_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kering.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/kering.js\");\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./core.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/core.js\");\n/* harmony import */ var _base64_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base64.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/base64.js\");\n\n\n\n\nclass Codex {\n    has(prop) {\n        const m = new Map(Array.from(Object.entries(this), (v) => [v[1], v[0]]));\n        return m.has(prop);\n    }\n}\nclass MatterCodex extends Codex {\n    constructor() {\n        super(...arguments);\n        this.Ed25519_Seed = 'A'; // Ed25519 256 bit random seed for private key\n        this.Ed25519N = 'B'; // Ed25519 verification key non-transferable, basic derivation.\n        this.X25519 = 'C'; // X25519 public encryption key, converted from Ed25519 or Ed25519N.\n        this.Ed25519 = 'D'; // Ed25519 verification key basic derivation\n        this.Blake3_256 = 'E'; // Blake3 256 bit digest self-addressing derivation.\n        this.SHA3_256 = 'H'; // SHA3 256 bit digest self-addressing derivation.\n        this.SHA2_256 = 'I'; // SHA2 256 bit digest self-addressing derivation.\n        this.ECDSA_256k1_Seed = 'J'; // ECDSA secp256k1 256 bit random Seed for private key\n        this.X25519_Private = 'O'; // X25519 private decryption key converted from Ed25519\n        this.X25519_Cipher_Seed = 'P'; // X25519 124 char b64 Cipher of 44 char qb64 Seed\n        this.ECDSA_256r1_Seed = 'Q'; // ECDSA secp256r1 256 bit random Seed for private key\n        this.Salt_128 = '0A'; // 128 bit random salt or 128 bit number (see Huge)\n        this.Ed25519_Sig = '0B'; // Ed25519 signature.\n        this.ECDSA_256k1_Sig = '0C'; // ECDSA secp256k1 signature.\n        this.ECDSA_256r1_Sig = '0I'; // ECDSA secp256r1 signature.\n        this.StrB64_L0 = '4A'; // String Base64 Only Lead Size 0\n        this.StrB64_L1 = '5A'; // String Base64 Only Lead Size 1\n        this.StrB64_L2 = '6A'; // String Base64 Only Lead Size 2\n        this.ECDSA_256k1N = '1AAA'; // ECDSA secp256k1 verification key non-transferable, basic derivation.\n        this.ECDSA_256k1 = '1AAB'; // ECDSA public verification or encryption key, basic derivation\n        this.X25519_Cipher_Salt = '1AAH'; // X25519 100 char b64 Cipher of 24 char qb64 Salt\n        this.ECDSA_256r1N = '1AAI'; // ECDSA secp256r1 verification key non-transferable, basic derivation.\n        this.ECDSA_256r1 = '1AAJ'; // ECDSA secp256r1 verification or encryption key, basic derivation\n        this.StrB64_Big_L0 = '7AAA'; // String Base64 Only Big Lead Size 0\n        this.StrB64_Big_L1 = '8AAA'; // String Base64 Only Big Lead Size 1\n        this.StrB64_Big_L2 = '9AAA'; // String Base64 Only Big Lead Size 2\n    }\n}\nconst MtrDex = new MatterCodex();\nclass NonTransCodex extends Codex {\n    constructor() {\n        super(...arguments);\n        this.Ed25519N = 'B'; // Ed25519 verification key non-transferable, basic derivation.\n        this.ECDSA_256k1N = '1AAA'; // ECDSA secp256k1 verification key non-transferable, basic derivation.\n        this.Ed448N = '1AAC'; // Ed448 non-transferable prefix public signing verification key. Basic derivation.\n        this.ECDSA_256r1N = '1AAI'; // ECDSA secp256r1 verification key non-transferable, basic derivation.\n    }\n}\nconst NonTransDex = new NonTransCodex();\nclass DigiCodex extends Codex {\n    constructor() {\n        super(...arguments);\n        this.Blake3_256 = 'E'; // Blake3 256 bit digest self-addressing derivation.\n        this.Blake2b_256 = 'F'; // Blake2b 256 bit digest self-addressing derivation.\n        this.Blake2s_256 = 'G'; // Blake2s 256 bit digest self-addressing derivation.\n        this.SHA3_256 = 'H'; // SHA3 256 bit digest self-addressing derivation.\n        this.SHA2_256 = 'I'; // SHA2 256 bit digest self-addressing derivation.\n        this.Blake3_512 = '0D'; // Blake3 512 bit digest self-addressing derivation.\n        this.Blake2b_512 = '0E'; // Blake2b 512 bit digest self-addressing derivation.\n        this.SHA3_512 = '0F'; // SHA3 512 bit digest self-addressing derivation.\n        this.SHA2_512 = '0G'; // SHA2 512 bit digest self-addressing derivation.\n    }\n}\nconst DigiDex = new DigiCodex();\nclass NumCodex extends Codex {\n    constructor() {\n        super(...arguments);\n        this.Short = 'M'; // Short 2 byte b2 number\n        this.Long = '0H'; // Long 4 byte b2 number\n        this.Big = 'N'; // Big 8 byte b2 number\n        this.Huge = '0A'; // Huge 16 byte b2 number (same as Salt_128)\n    }\n}\nconst NumDex = new NumCodex();\nclass BexCodex extends Codex {\n    constructor() {\n        super(...arguments);\n        this.StrB64_L0 = '4A'; // String Base64 Only Leader Size 0\n        this.StrB64_L1 = '5A'; // String Base64 Only Leader Size 1\n        this.StrB64_L2 = '6A'; // String Base64 Only Leader Size 2\n        this.StrB64_Big_L0 = '7AAA'; // String Base64 Only Big Leader Size 0\n        this.StrB64_Big_L1 = '8AAA'; // String Base64 Only Big Leader Size 1\n        this.StrB64_Big_L2 = '9AAA'; // String Base64 Only Big Leader Size 2\n    }\n}\nconst BexDex = new BexCodex();\nclass SmallVarRawSizeCodex extends Codex {\n    constructor() {\n        super(...arguments);\n        this.Lead0 = '4'; // First Selector Character for all ls == 0 codes\n        this.Lead1 = '5'; // First Selector Character for all ls == 1 codes\n        this.Lead2 = '6'; // First Selector Character for all ls == 2 codes\n    }\n}\nconst SmallVrzDex = new SmallVarRawSizeCodex();\nclass LargeVarRawSizeCodex extends Codex {\n    constructor() {\n        super(...arguments);\n        this.Lead0_Big = '7'; // First Selector Character for all ls == 0 codes\n        this.Lead1_Big = '8'; // First Selector Character for all ls == 1 codes\n        this.Lead2_Big = '9'; // First Selector Character for all ls == 2 codes\n    }\n}\nconst LargeVrzDex = new LargeVarRawSizeCodex();\nclass Sizage {\n    constructor(hs, ss, fs, ls) {\n        this.hs = hs;\n        this.ss = ss;\n        this.fs = fs;\n        this.ls = ls;\n    }\n}\nclass Matter {\n    constructor({ raw, code = MtrDex.Ed25519N, qb64b, qb64, qb2, rize, }) {\n        this._code = '';\n        this._size = -1;\n        this._raw = new Uint8Array(0);\n        let size = -1;\n        if (raw != undefined) {\n            if (code.length == 0) {\n                throw new Error('Improper initialization need either (raw and code) or qb64b or qb64 or qb2.');\n            }\n            if (SmallVrzDex.has(code[0]) || LargeVrzDex.has(code[0])) {\n                if (rize !== undefined) {\n                    if (rize < 0)\n                        throw new Error(`missing var raw size for code=${code}`);\n                }\n                else {\n                    rize = raw.length;\n                }\n                const ls = (3 - (rize % 3)) % 3; // calc actual lead (pad) size\n                size = Math.floor((rize + ls) / 3); // calculate value of size in triplets\n                if (SmallVrzDex.has(code[0])) {\n                    if (size <= 64 ** 2 - 1) {\n                        const hs = 2;\n                        const s = Object.values(SmallVrzDex)[ls];\n                        code = `${s}${code.substring(1, hs)}`;\n                    }\n                    else if (size <= 64 ** 4 - 1) {\n                        const hs = 4;\n                        const s = Object.values(LargeVrzDex)[ls];\n                        code = `${s}${'AAAA'.substring(0, hs - 2)}${code[1]}`;\n                    }\n                    else {\n                        throw new Error(`Unsupported raw size for code=${code}`);\n                    }\n                }\n                else {\n                    if (size <= 64 ** 4 - 1) {\n                        const hs = 4;\n                        const s = Object.values(LargeVrzDex)[ls];\n                        code = `${s}${code.substring(1, hs)}`;\n                    }\n                    else {\n                        throw new Error(`Unsupported raw size for code=${code}`);\n                    }\n                }\n            }\n            else {\n                const sizage = Matter.Sizes.get(code);\n                if (sizage.fs == -1) {\n                    // invalid\n                    throw new Error(`Unsupported variable size code=${code}`);\n                }\n                rize = Matter._rawSize(code);\n            }\n            raw = raw.slice(0, rize); // copy only exact size from raw stream\n            if (raw.length != rize) {\n                // forbids shorter\n                throw new Error(`Not enougth raw bytes for code=${code} expected ${rize} got ${raw.length}.`);\n            }\n            this._code = code; // hard value part of code\n            this._size = size; // soft value part of code in int\n            this._raw = raw; // crypto ops require bytes not bytearray\n        }\n        else if (qb64 !== undefined) {\n            this._exfil(qb64);\n        }\n        else if (qb64b !== undefined) {\n            const qb64 = (0,_core_js__WEBPACK_IMPORTED_MODULE_1__.d)(qb64b);\n            this._exfil(qb64);\n        }\n        else if (qb2 !== undefined) {\n            this._bexfil(qb2);\n        }\n        else {\n            throw new _kering_js__WEBPACK_IMPORTED_MODULE_0__.EmptyMaterialError('EmptyMaterialError');\n        }\n    }\n    get code() {\n        return this._code;\n    }\n    get size() {\n        return this._size;\n    }\n    get raw() {\n        return this._raw;\n    }\n    get qb64() {\n        return this._infil();\n    }\n    get qb64b() {\n        return (0,_core_js__WEBPACK_IMPORTED_MODULE_1__.b)(this.qb64);\n    }\n    get transferable() {\n        return !NonTransDex.has(this.code);\n    }\n    get digestive() {\n        return DigiDex.has(this.code);\n    }\n    static _rawSize(code) {\n        const sizage = this.Sizes.get(code); // get sizes\n        const cs = sizage.hs + sizage.ss; // both hard + soft code size\n        if (sizage.fs === -1) {\n            throw Error(`Non-fixed raw size code ${code}.`);\n        }\n        return Math.floor(((sizage.fs - cs) * 3) / 4) - sizage.ls;\n    }\n    static _leadSize(code) {\n        const sizage = this.Sizes.get(code);\n        return sizage.ls;\n    }\n    get both() {\n        const sizage = Matter.Sizes.get(this.code);\n        return `${this.code}${(0,_core_js__WEBPACK_IMPORTED_MODULE_1__.intToB64)(this.size, sizage.ss)}`;\n    }\n    _infil() {\n        const code = this.code;\n        const size = this.size;\n        const raw = this.raw;\n        const ps = (3 - (raw.length % 3)) % 3; // pad size chars or lead size bytes\n        const sizage = Matter.Sizes.get(code);\n        if (sizage.fs === undefined) {\n            // Variable size code, NOT SUPPORTED\n            const cs = sizage.hs + sizage.ss;\n            if (cs % 4) {\n                throw new Error(`Whole code size not multiple of 4 for variable length material. cs=${cs}`);\n            }\n            if (size < 0 || size > 64 ** sizage.ss - 1) {\n                throw new Error(`Invalid size=${size} for code=${code}.`);\n            }\n            const both = `${code}${(0,_core_js__WEBPACK_IMPORTED_MODULE_1__.intToB64)(size, sizage.ss)}`;\n            if (both.length % 4 !== ps - sizage.ls) {\n                throw new Error(`Invalid code=${both} for converted raw pad size=${ps}.`);\n            }\n            const bytes = new Uint8Array(sizage.ls + raw.length);\n            for (let i = 0; i < sizage.ls; i++) {\n                bytes[i] = 0;\n            }\n            for (let i = 0; i < raw.length; i++) {\n                const odx = i + ps;\n                bytes[odx] = raw[i];\n            }\n            return both + (0,_base64_js__WEBPACK_IMPORTED_MODULE_2__.encodeBase64Url)(bytes);\n        }\n        else {\n            const both = code;\n            const cs = both.length;\n            if (cs % 4 != ps - sizage.ls) {\n                // adjusted pad given lead bytes\n                throw new Error(`Invalid code=${both} for converted raw pad size=${ps}, ${raw.length}.`);\n            }\n            // prepad, convert, and replace upfront\n            // when fixed and ls != 0 then cs % 4 is zero and ps==ls\n            // otherwise  fixed and ls == 0 then cs % 4 == ps\n            const bytes = new Uint8Array(ps + raw.length);\n            for (let i = 0; i < ps; i++) {\n                bytes[i] = 0;\n            }\n            for (let i = 0; i < raw.length; i++) {\n                const odx = i + ps;\n                bytes[odx] = raw[i];\n            }\n            return both + (0,_base64_js__WEBPACK_IMPORTED_MODULE_2__.encodeBase64Url)(bytes).slice(cs % 4);\n        }\n    }\n    _exfil(qb64) {\n        if (qb64.length == 0) {\n            throw new Error('Empty Material');\n        }\n        const first = qb64[0];\n        if (!Array.from(Matter.Hards.keys()).includes(first)) {\n            throw new Error(`Unexpected code ${first}`);\n        }\n        const hs = Matter.Hards.get(first);\n        if (qb64.length < hs) {\n            throw new Error(`Shortage Error`);\n        }\n        const hard = qb64.slice(0, hs);\n        if (!Array.from(Matter.Sizes.keys()).includes(hard)) {\n            throw new Error(`Unsupported code ${hard}`);\n        }\n        const sizage = Matter.Sizes.get(hard);\n        const cs = sizage.hs + sizage.ss;\n        let size = -1;\n        if (sizage.fs == -1) {\n            // Variable size code, Not supported\n            throw new Error('Variable size codes not supported yet');\n        }\n        else {\n            size = sizage.fs;\n        }\n        if (qb64.length < sizage.fs) {\n            throw new Error(`Need ${sizage.fs - qb64.length} more chars.`);\n        }\n        qb64 = qb64.slice(0, sizage.fs);\n        const ps = cs % 4;\n        const pbs = 2 * (ps == 0 ? sizage.ls : ps);\n        let raw;\n        if (ps != 0) {\n            const base = new Array(ps + 1).join('A') + qb64.slice(cs);\n            const paw = Uint8Array.from((0,_base64_js__WEBPACK_IMPORTED_MODULE_2__.decodeBase64Url)(base)); // decode base to leave prepadded raw\n            const pi = (0,_core_js__WEBPACK_IMPORTED_MODULE_1__.readInt)(paw.subarray(0, ps)); // prepad as int\n            if (pi & (2 ** pbs - 1)) {\n                // masked pad bits non-zero\n                throw new Error(`Non zeroed prepad bits = {pi & (2 ** pbs - 1 ):<06b} in {qb64b[cs:cs+1]}.`);\n            }\n            raw = paw.subarray(ps); // strip off ps prepad paw bytes\n        }\n        else {\n            const base = qb64.slice(cs);\n            const paw = Uint8Array.from((0,_base64_js__WEBPACK_IMPORTED_MODULE_2__.decodeBase64Url)(base));\n            const li = (0,_core_js__WEBPACK_IMPORTED_MODULE_1__.readInt)(paw.subarray(0, sizage.ls));\n            if (li != 0) {\n                if (li == 1) {\n                    throw new Error(`Non zeroed lead byte = 0x{li:02x}.`);\n                }\n                else {\n                    throw new Error(`Non zeroed lead bytes = 0x{li:04x}`);\n                }\n            }\n            raw = paw.subarray(sizage.ls);\n        }\n        this._code = hard; // hard only\n        this._size = size;\n        this._raw = Uint8Array.from(raw); // ensure bytes so immutable and for crypto ops\n    }\n    _bexfil(qb2) {\n        throw new Error(`qb2 not yet supported: ${qb2}`);\n    }\n}\nMatter.Sizes = new Map(Object.entries({\n    A: new Sizage(1, 0, 44, 0),\n    B: new Sizage(1, 0, 44, 0),\n    C: new Sizage(1, 0, 44, 0),\n    D: new Sizage(1, 0, 44, 0),\n    E: new Sizage(1, 0, 44, 0),\n    F: new Sizage(1, 0, 44, 0),\n    G: new Sizage(1, 0, 44, 0),\n    H: new Sizage(1, 0, 44, 0),\n    I: new Sizage(1, 0, 44, 0),\n    J: new Sizage(1, 0, 44, 0),\n    K: new Sizage(1, 0, 76, 0),\n    L: new Sizage(1, 0, 76, 0),\n    M: new Sizage(1, 0, 4, 0),\n    N: new Sizage(1, 0, 12, 0),\n    O: new Sizage(1, 0, 44, 0),\n    P: new Sizage(1, 0, 124, 0),\n    Q: new Sizage(1, 0, 44, 0),\n    '0A': new Sizage(2, 0, 24, 0),\n    '0B': new Sizage(2, 0, 88, 0),\n    '0C': new Sizage(2, 0, 88, 0),\n    '0D': new Sizage(2, 0, 88, 0),\n    '0E': new Sizage(2, 0, 88, 0),\n    '0F': new Sizage(2, 0, 88, 0),\n    '0G': new Sizage(2, 0, 88, 0),\n    '0H': new Sizage(2, 0, 8, 0),\n    '0I': new Sizage(2, 0, 88, 0),\n    '1AAA': new Sizage(4, 0, 48, 0),\n    '1AAB': new Sizage(4, 0, 48, 0),\n    '1AAC': new Sizage(4, 0, 80, 0),\n    '1AAD': new Sizage(4, 0, 80, 0),\n    '1AAE': new Sizage(4, 0, 56, 0),\n    '1AAF': new Sizage(4, 0, 8, 0),\n    '1AAG': new Sizage(4, 0, 36, 0),\n    '1AAH': new Sizage(4, 0, 100, 0),\n    '1AAI': new Sizage(4, 0, 48, 0),\n    '1AAJ': new Sizage(4, 0, 48, 0),\n    '2AAA': new Sizage(4, 0, 8, 1),\n    '3AAA': new Sizage(4, 0, 8, 2),\n    '4A': new Sizage(2, 2, undefined, 0),\n    '5A': new Sizage(2, 2, undefined, 1),\n    '6A': new Sizage(2, 2, undefined, 2),\n    '7AAA': new Sizage(4, 4, undefined, 0),\n    '8AAA': new Sizage(4, 4, undefined, 1),\n    '9AAA': new Sizage(4, 4, undefined, 2),\n    '4B': new Sizage(2, 2, undefined, 0),\n    '5B': new Sizage(2, 2, undefined, 1),\n    '6B': new Sizage(2, 2, undefined, 2),\n    '7AAB': new Sizage(4, 4, undefined, 0),\n    '8AAB': new Sizage(4, 4, undefined, 1),\n    '9AAB': new Sizage(4, 4, undefined, 2),\n}));\nMatter.Hards = new Map([\n    ['A', 1],\n    ['B', 1],\n    ['C', 1],\n    ['D', 1],\n    ['E', 1],\n    ['F', 1],\n    ['G', 1],\n    ['H', 1],\n    ['I', 1],\n    ['J', 1],\n    ['K', 1],\n    ['L', 1],\n    ['M', 1],\n    ['N', 1],\n    ['O', 1],\n    ['P', 1],\n    ['Q', 1],\n    ['R', 1],\n    ['S', 1],\n    ['T', 1],\n    ['U', 1],\n    ['V', 1],\n    ['W', 1],\n    ['X', 1],\n    ['Y', 1],\n    ['Z', 1],\n    ['a', 1],\n    ['b', 1],\n    ['c', 1],\n    ['d', 1],\n    ['e', 1],\n    ['f', 1],\n    ['g', 1],\n    ['h', 1],\n    ['i', 1],\n    ['j', 1],\n    ['k', 1],\n    ['l', 1],\n    ['m', 1],\n    ['n', 1],\n    ['o', 1],\n    ['p', 1],\n    ['q', 1],\n    ['r', 1],\n    ['s', 1],\n    ['t', 1],\n    ['u', 1],\n    ['v', 1],\n    ['w', 1],\n    ['x', 1],\n    ['y', 1],\n    ['z', 1],\n    ['0', 2],\n    ['1', 4],\n    ['2', 4],\n    ['3', 4],\n    ['4', 2],\n    ['5', 2],\n    ['6', 2],\n    ['7', 4],\n    ['8', 4],\n    ['9', 4],\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/core/matter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/core/number.js":
/*!**********************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/core/number.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CesrNumber: () => (/* binding */ CesrNumber)\n/* harmony export */ });\n/* harmony import */ var _matter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./matter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/matter.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/utils.js\");\n\n\nclass CesrNumber extends _matter_js__WEBPACK_IMPORTED_MODULE_0__.Matter {\n    constructor({ raw, code, qb64b, qb64, qb2 }, num, numh) {\n        let _num;\n        if (raw == undefined &&\n            qb64 == undefined &&\n            qb64b == undefined &&\n            qb2 == undefined) {\n            if (typeof num == 'number') {\n                _num = num;\n            }\n            else if (numh != undefined) {\n                _num = parseInt(numh, 16);\n            }\n            else {\n                _num = 0;\n            }\n        }\n        if (_num == undefined) {\n            throw new Error('Invalid whole number');\n        }\n        if (_num <= 256 ** 2 - 1) {\n            // make short version of code\n            code = _matter_js__WEBPACK_IMPORTED_MODULE_0__.NumDex.Short;\n        }\n        else if (_num <= 256 ** 4 - 1) {\n            // make long version of code\n            code = code = _matter_js__WEBPACK_IMPORTED_MODULE_0__.NumDex.Long;\n        }\n        else if (_num <= 256 ** 8 - 1) {\n            // make big version of code\n            code = code = _matter_js__WEBPACK_IMPORTED_MODULE_0__.NumDex.Big;\n        }\n        else if (_num <= 256 ** 16 - 1) {\n            // make huge version of code\n            code = code = _matter_js__WEBPACK_IMPORTED_MODULE_0__.NumDex.Huge;\n        }\n        else {\n            throw new Error(`Invalid num = ${num}, too large to encode.`);\n        }\n        raw = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.intToBytes)(_num, _matter_js__WEBPACK_IMPORTED_MODULE_0__.Matter._rawSize(code));\n        super({ raw, code, qb64b, qb64, qb2 });\n        if (!_matter_js__WEBPACK_IMPORTED_MODULE_0__.NumDex.has(this.code)) {\n            throw new Error('Invalid code ' + code + ' for Number');\n        }\n    }\n    get num() {\n        return (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.bytesToInt)(this.raw);\n    }\n    get numh() {\n        return this.num.toString(16);\n    }\n    get positive() {\n        return this.num > 0;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2tlcmkvY29yZS9udW1iZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTZDO0FBQ087QUFDN0MseUJBQXlCLDhDQUFNO0FBQ3RDLGtCQUFrQiw2QkFBNkI7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiw4Q0FBTTtBQUN6QjtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsOENBQU07QUFDaEM7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDhDQUFNO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiw4Q0FBTTtBQUNoQztBQUNBO0FBQ0EsNkNBQTZDLElBQUk7QUFDakQ7QUFDQSxjQUFjLHFEQUFVLE9BQU8sOENBQU07QUFDckMsZ0JBQWdCLDZCQUE2QjtBQUM3QyxhQUFhLDhDQUFNO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxxREFBVTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RlbGxhci1wcm9jdXJlbWVudC1kYXBwLy4vbm9kZV9tb2R1bGVzL3NpZ25pZnktdHMvZGlzdC9rZXJpL2NvcmUvbnVtYmVyLmpzP2E2ZDUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTWF0dGVyLCBOdW1EZXggfSBmcm9tIFwiLi9tYXR0ZXIuanNcIjtcbmltcG9ydCB7IGJ5dGVzVG9JbnQsIGludFRvQnl0ZXMgfSBmcm9tIFwiLi91dGlscy5qc1wiO1xuZXhwb3J0IGNsYXNzIENlc3JOdW1iZXIgZXh0ZW5kcyBNYXR0ZXIge1xuICAgIGNvbnN0cnVjdG9yKHsgcmF3LCBjb2RlLCBxYjY0YiwgcWI2NCwgcWIyIH0sIG51bSwgbnVtaCkge1xuICAgICAgICBsZXQgX251bTtcbiAgICAgICAgaWYgKHJhdyA9PSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgIHFiNjQgPT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICBxYjY0YiA9PSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgIHFiMiA9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgbnVtID09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgX251bSA9IG51bTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKG51bWggIT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgX251bSA9IHBhcnNlSW50KG51bWgsIDE2KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIF9udW0gPSAwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChfbnVtID09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHdob2xlIG51bWJlcicpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChfbnVtIDw9IDI1NiAqKiAyIC0gMSkge1xuICAgICAgICAgICAgLy8gbWFrZSBzaG9ydCB2ZXJzaW9uIG9mIGNvZGVcbiAgICAgICAgICAgIGNvZGUgPSBOdW1EZXguU2hvcnQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoX251bSA8PSAyNTYgKiogNCAtIDEpIHtcbiAgICAgICAgICAgIC8vIG1ha2UgbG9uZyB2ZXJzaW9uIG9mIGNvZGVcbiAgICAgICAgICAgIGNvZGUgPSBjb2RlID0gTnVtRGV4Lkxvbmc7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoX251bSA8PSAyNTYgKiogOCAtIDEpIHtcbiAgICAgICAgICAgIC8vIG1ha2UgYmlnIHZlcnNpb24gb2YgY29kZVxuICAgICAgICAgICAgY29kZSA9IGNvZGUgPSBOdW1EZXguQmlnO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKF9udW0gPD0gMjU2ICoqIDE2IC0gMSkge1xuICAgICAgICAgICAgLy8gbWFrZSBodWdlIHZlcnNpb24gb2YgY29kZVxuICAgICAgICAgICAgY29kZSA9IGNvZGUgPSBOdW1EZXguSHVnZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBudW0gPSAke251bX0sIHRvbyBsYXJnZSB0byBlbmNvZGUuYCk7XG4gICAgICAgIH1cbiAgICAgICAgcmF3ID0gaW50VG9CeXRlcyhfbnVtLCBNYXR0ZXIuX3Jhd1NpemUoY29kZSkpO1xuICAgICAgICBzdXBlcih7IHJhdywgY29kZSwgcWI2NGIsIHFiNjQsIHFiMiB9KTtcbiAgICAgICAgaWYgKCFOdW1EZXguaGFzKHRoaXMuY29kZSkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBjb2RlICcgKyBjb2RlICsgJyBmb3IgTnVtYmVyJyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0IG51bSgpIHtcbiAgICAgICAgcmV0dXJuIGJ5dGVzVG9JbnQodGhpcy5yYXcpO1xuICAgIH1cbiAgICBnZXQgbnVtaCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubnVtLnRvU3RyaW5nKDE2KTtcbiAgICB9XG4gICAgZ2V0IHBvc2l0aXZlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5udW0gPiAwO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/core/number.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/core/pather.js":
/*!**********************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/core/pather.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Pather: () => (/* binding */ Pather)\n/* harmony export */ });\n/* harmony import */ var _bexter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bexter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/bexter.js\");\n/* harmony import */ var _matter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./matter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/matter.js\");\n/* harmony import */ var _kering_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kering.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/kering.js\");\n\n\n\n/*\n    Pather is a subclass of Bexter that provides SAD Path language specific functionality\n    for variable length strings that only contain Base64 URL safe characters.  Pather allows\n    the specification of SAD Paths as a list of field components which will be converted to the\n    Base64 URL safe character representation.\n\n    Additionally, Pather provides .rawify for extracting and serializing the content targeted by\n    .path for a SAD, represented as an instance of Serder.  Pather enforces Base64 URL character\n    safety by leveraging the fact that SADs must have static field ordering.  Any field label can\n    be replaced by its field ordinal to allow for path specification and traversal for any field\n    labels that contain non-Base64 URL safe characters.\n\n\n    Examples: strings:\n        path = []\n        text = \"-\"\n        qb64 = '6AABAAA-'\n\n        path = [\"A\"]\n        text = \"-A\"\n        qb64 = '5AABAA-A'\n\n        path = [\"A\", \"B\"]\n        text = \"-A-B\"\n        qb64 = '4AAB-A-B'\n\n        path = [\"A\", 1, \"B\", 3]\n        text = \"-A-1-B-3\"\n        qb64 = '4AAC-A-1-B-3'\n\n */\nclass Pather extends _bexter_js__WEBPACK_IMPORTED_MODULE_0__.Bexter {\n    constructor({ raw, code = _matter_js__WEBPACK_IMPORTED_MODULE_1__.MtrDex.StrB64_L0, qb64b, qb64, qb2 }, bext, path) {\n        if (raw === undefined &&\n            bext === undefined &&\n            qb64b === undefined &&\n            qb64 === undefined &&\n            qb2 === undefined) {\n            if (path === undefined)\n                throw new _kering_js__WEBPACK_IMPORTED_MODULE_2__.EmptyMaterialError('Missing bext string.');\n            bext = Pather._bextify(path);\n        }\n        super({ raw, code, qb64b, qb64, qb2 }, bext);\n    }\n    // TODO: implement SAD access methods like resolve, root, strip, startswith and tail\n    get path() {\n        if (!this.bext.startsWith('-')) {\n            throw new Error('invalid SAD ptr');\n        }\n        let path = this.bext;\n        while (path.charAt(0) === '-') {\n            path = path.substring(1);\n        }\n        const apath = path.split('-');\n        if (apath[0] !== '') {\n            return apath;\n        }\n        else {\n            return [];\n        }\n    }\n    static _bextify(path) {\n        const vath = [];\n        for (const p of path) {\n            let sp = '';\n            if (typeof p === 'number') {\n                sp = p.toString();\n            }\n            else {\n                sp = p;\n            }\n            const match = _bexter_js__WEBPACK_IMPORTED_MODULE_0__.Reb64.exec(sp);\n            if (!match) {\n                throw new Error(`\"Non Base64 path component = ${p}.`);\n            }\n            vath.push(sp);\n        }\n        return '-' + vath.join('-');\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2tlcmkvY29yZS9wYXRoZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUE0QztBQUNQO0FBQ1k7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNPLHFCQUFxQiw4Q0FBTTtBQUNsQyxrQkFBa0IsWUFBWSw4Q0FBTSw4QkFBOEI7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDBEQUFrQjtBQUM1QztBQUNBO0FBQ0EsZ0JBQWdCLDZCQUE2QjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiw2Q0FBSztBQUMvQjtBQUNBLGdFQUFnRSxFQUFFO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N0ZWxsYXItcHJvY3VyZW1lbnQtZGFwcC8uL25vZGVfbW9kdWxlcy9zaWduaWZ5LXRzL2Rpc3Qva2VyaS9jb3JlL3BhdGhlci5qcz8zNTA0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJleHRlciwgUmViNjQgfSBmcm9tIFwiLi9iZXh0ZXIuanNcIjtcbmltcG9ydCB7IE10ckRleCB9IGZyb20gXCIuL21hdHRlci5qc1wiO1xuaW1wb3J0IHsgRW1wdHlNYXRlcmlhbEVycm9yIH0gZnJvbSBcIi4va2VyaW5nLmpzXCI7XG4vKlxuICAgIFBhdGhlciBpcyBhIHN1YmNsYXNzIG9mIEJleHRlciB0aGF0IHByb3ZpZGVzIFNBRCBQYXRoIGxhbmd1YWdlIHNwZWNpZmljIGZ1bmN0aW9uYWxpdHlcbiAgICBmb3IgdmFyaWFibGUgbGVuZ3RoIHN0cmluZ3MgdGhhdCBvbmx5IGNvbnRhaW4gQmFzZTY0IFVSTCBzYWZlIGNoYXJhY3RlcnMuICBQYXRoZXIgYWxsb3dzXG4gICAgdGhlIHNwZWNpZmljYXRpb24gb2YgU0FEIFBhdGhzIGFzIGEgbGlzdCBvZiBmaWVsZCBjb21wb25lbnRzIHdoaWNoIHdpbGwgYmUgY29udmVydGVkIHRvIHRoZVxuICAgIEJhc2U2NCBVUkwgc2FmZSBjaGFyYWN0ZXIgcmVwcmVzZW50YXRpb24uXG5cbiAgICBBZGRpdGlvbmFsbHksIFBhdGhlciBwcm92aWRlcyAucmF3aWZ5IGZvciBleHRyYWN0aW5nIGFuZCBzZXJpYWxpemluZyB0aGUgY29udGVudCB0YXJnZXRlZCBieVxuICAgIC5wYXRoIGZvciBhIFNBRCwgcmVwcmVzZW50ZWQgYXMgYW4gaW5zdGFuY2Ugb2YgU2VyZGVyLiAgUGF0aGVyIGVuZm9yY2VzIEJhc2U2NCBVUkwgY2hhcmFjdGVyXG4gICAgc2FmZXR5IGJ5IGxldmVyYWdpbmcgdGhlIGZhY3QgdGhhdCBTQURzIG11c3QgaGF2ZSBzdGF0aWMgZmllbGQgb3JkZXJpbmcuICBBbnkgZmllbGQgbGFiZWwgY2FuXG4gICAgYmUgcmVwbGFjZWQgYnkgaXRzIGZpZWxkIG9yZGluYWwgdG8gYWxsb3cgZm9yIHBhdGggc3BlY2lmaWNhdGlvbiBhbmQgdHJhdmVyc2FsIGZvciBhbnkgZmllbGRcbiAgICBsYWJlbHMgdGhhdCBjb250YWluIG5vbi1CYXNlNjQgVVJMIHNhZmUgY2hhcmFjdGVycy5cblxuXG4gICAgRXhhbXBsZXM6IHN0cmluZ3M6XG4gICAgICAgIHBhdGggPSBbXVxuICAgICAgICB0ZXh0ID0gXCItXCJcbiAgICAgICAgcWI2NCA9ICc2QUFCQUFBLSdcblxuICAgICAgICBwYXRoID0gW1wiQVwiXVxuICAgICAgICB0ZXh0ID0gXCItQVwiXG4gICAgICAgIHFiNjQgPSAnNUFBQkFBLUEnXG5cbiAgICAgICAgcGF0aCA9IFtcIkFcIiwgXCJCXCJdXG4gICAgICAgIHRleHQgPSBcIi1BLUJcIlxuICAgICAgICBxYjY0ID0gJzRBQUItQS1CJ1xuXG4gICAgICAgIHBhdGggPSBbXCJBXCIsIDEsIFwiQlwiLCAzXVxuICAgICAgICB0ZXh0ID0gXCItQS0xLUItM1wiXG4gICAgICAgIHFiNjQgPSAnNEFBQy1BLTEtQi0zJ1xuXG4gKi9cbmV4cG9ydCBjbGFzcyBQYXRoZXIgZXh0ZW5kcyBCZXh0ZXIge1xuICAgIGNvbnN0cnVjdG9yKHsgcmF3LCBjb2RlID0gTXRyRGV4LlN0ckI2NF9MMCwgcWI2NGIsIHFiNjQsIHFiMiB9LCBiZXh0LCBwYXRoKSB7XG4gICAgICAgIGlmIChyYXcgPT09IHVuZGVmaW5lZCAmJlxuICAgICAgICAgICAgYmV4dCA9PT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICBxYjY0YiA9PT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICBxYjY0ID09PSB1bmRlZmluZWQgJiZcbiAgICAgICAgICAgIHFiMiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBpZiAocGF0aCA9PT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFbXB0eU1hdGVyaWFsRXJyb3IoJ01pc3NpbmcgYmV4dCBzdHJpbmcuJyk7XG4gICAgICAgICAgICBiZXh0ID0gUGF0aGVyLl9iZXh0aWZ5KHBhdGgpO1xuICAgICAgICB9XG4gICAgICAgIHN1cGVyKHsgcmF3LCBjb2RlLCBxYjY0YiwgcWI2NCwgcWIyIH0sIGJleHQpO1xuICAgIH1cbiAgICAvLyBUT0RPOiBpbXBsZW1lbnQgU0FEIGFjY2VzcyBtZXRob2RzIGxpa2UgcmVzb2x2ZSwgcm9vdCwgc3RyaXAsIHN0YXJ0c3dpdGggYW5kIHRhaWxcbiAgICBnZXQgcGF0aCgpIHtcbiAgICAgICAgaWYgKCF0aGlzLmJleHQuc3RhcnRzV2l0aCgnLScpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFsaWQgU0FEIHB0cicpO1xuICAgICAgICB9XG4gICAgICAgIGxldCBwYXRoID0gdGhpcy5iZXh0O1xuICAgICAgICB3aGlsZSAocGF0aC5jaGFyQXQoMCkgPT09ICctJykge1xuICAgICAgICAgICAgcGF0aCA9IHBhdGguc3Vic3RyaW5nKDEpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGFwYXRoID0gcGF0aC5zcGxpdCgnLScpO1xuICAgICAgICBpZiAoYXBhdGhbMF0gIT09ICcnKSB7XG4gICAgICAgICAgICByZXR1cm4gYXBhdGg7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gW107XG4gICAgICAgIH1cbiAgICB9XG4gICAgc3RhdGljIF9iZXh0aWZ5KHBhdGgpIHtcbiAgICAgICAgY29uc3QgdmF0aCA9IFtdO1xuICAgICAgICBmb3IgKGNvbnN0IHAgb2YgcGF0aCkge1xuICAgICAgICAgICAgbGV0IHNwID0gJyc7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHAgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgc3AgPSBwLnRvU3RyaW5nKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBzcCA9IHA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBtYXRjaCA9IFJlYjY0LmV4ZWMoc3ApO1xuICAgICAgICAgICAgaWYgKCFtYXRjaCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgXCJOb24gQmFzZTY0IHBhdGggY29tcG9uZW50ID0gJHtwfS5gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhdGgucHVzaChzcCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICctJyArIHZhdGguam9pbignLScpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/core/pather.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/core/prefixer.js":
/*!************************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/core/prefixer.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Prefixer: () => (/* binding */ Prefixer)\n/* harmony export */ });\n/* harmony import */ var _matter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./matter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/matter.js\");\n/* harmony import */ var _kering_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./kering.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/kering.js\");\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./core.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/core.js\");\n/* harmony import */ var _serder_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./serder.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/serder.js\");\n/* harmony import */ var _verfer_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./verfer.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/verfer.js\");\n/* harmony import */ var _noble_hashes_blake3__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @noble/hashes/blake3 */ \"(ssr)/./node_modules/@noble/hashes/esm/blake3.js\");\n\n\n\n\n\n\nconst Dummy = '#';\nclass Prefixer extends _matter_js__WEBPACK_IMPORTED_MODULE_0__.Matter {\n    constructor({ raw, code, qb64b, qb64, qb2 }, ked) {\n        try {\n            super({ raw, code, qb64b, qb64, qb2 });\n        }\n        catch (e) {\n            if (e instanceof _kering_js__WEBPACK_IMPORTED_MODULE_1__.EmptyMaterialError) {\n                if (ked == undefined || (code == undefined && !('i' in ked))) {\n                    throw e;\n                }\n                if (code == undefined) {\n                    super({ qb64: ked['i'], code: code });\n                    code = this.code;\n                }\n                let _derive;\n                if (code == _matter_js__WEBPACK_IMPORTED_MODULE_0__.MtrDex.Ed25519N) {\n                    _derive = Prefixer._derive_ed25519N;\n                }\n                else if (code == _matter_js__WEBPACK_IMPORTED_MODULE_0__.MtrDex.Ed25519) {\n                    _derive = Prefixer._derive_ed25519;\n                }\n                else if (code == _matter_js__WEBPACK_IMPORTED_MODULE_0__.MtrDex.Blake3_256) {\n                    _derive = Prefixer._derive_blake3_256;\n                }\n                else {\n                    throw new Error(`Unsupported code = ${code} for prefixer.`);\n                }\n                [raw, code] = _derive(ked);\n                super({ raw: raw, code: code });\n                this._derive = _derive;\n            }\n            else {\n                throw e;\n            }\n        }\n        if (this.code == _matter_js__WEBPACK_IMPORTED_MODULE_0__.MtrDex.Ed25519N) {\n            this._verify = this._verify_ed25519N;\n        }\n        else if (this.code == _matter_js__WEBPACK_IMPORTED_MODULE_0__.MtrDex.Ed25519) {\n            this._verify = this._verify_ed25519;\n        }\n        else if (this.code == _matter_js__WEBPACK_IMPORTED_MODULE_0__.MtrDex.Blake3_256) {\n            this._verify = this._verify_blake3_256;\n        }\n        else {\n            throw new Error(`Unsupported code = ${code} for prefixer.`);\n        }\n    }\n    derive(sad) {\n        if (sad['i'] != _core_js__WEBPACK_IMPORTED_MODULE_2__.Ilks.icp) {\n            throw new Error(`Non-incepting ilk ${sad['i']} for prefix derivation`);\n        }\n        return this._derive(sad);\n    }\n    verify(sad, prefixed = false) {\n        if (sad['i'] != _core_js__WEBPACK_IMPORTED_MODULE_2__.Ilks.icp) {\n            throw new Error(`Non-incepting ilk ${sad['i']} for prefix derivation`);\n        }\n        return this._verify(sad, this.qb64, prefixed);\n    }\n    static _derive_ed25519N(sad) {\n        let verfer;\n        const keys = sad['k'];\n        if (keys.length != 1) {\n            throw new Error(`Basic derivation needs at most 1 key got ${keys.length} keys instead`);\n        }\n        try {\n            verfer = new _verfer_js__WEBPACK_IMPORTED_MODULE_4__.Verfer({ qb64: keys[0] });\n        }\n        catch (e) {\n            throw new Error(`Error extracting public key = ${e}`);\n        }\n        if (verfer.code != _matter_js__WEBPACK_IMPORTED_MODULE_0__.MtrDex.Ed25519N) {\n            throw new Error(`Mismatch derivation code = ${verfer.code}`);\n        }\n        const next = 'n' in sad ? sad['n'] : [];\n        if (verfer.code == _matter_js__WEBPACK_IMPORTED_MODULE_0__.MtrDex.Ed25519N && next.length > 0) {\n            throw new Error(`Non-empty nxt = ${next} for non-transferable code = ${verfer.code}`);\n        }\n        const backers = 'b' in sad ? sad['b'] : [];\n        if (verfer.code == _matter_js__WEBPACK_IMPORTED_MODULE_0__.MtrDex.Ed25519N && backers.length > 0) {\n            throw new Error(`Non-empty b =${backers} for non-transferable code = ${verfer.code}`);\n        }\n        const anchor = 'a' in sad ? sad['a'] : [];\n        if (verfer.code == _matter_js__WEBPACK_IMPORTED_MODULE_0__.MtrDex.Ed25519N && anchor.length > 0) {\n            throw new Error(`Non-empty a = ${verfer.code} for non-transferable code = ${verfer.code}`);\n        }\n        return [verfer.raw, verfer.code];\n    }\n    static _derive_ed25519(sad) {\n        let verfer;\n        const keys = sad['k'];\n        if (keys.length != 1) {\n            throw new Error(`Basic derivation needs at most 1 key got ${keys.length} keys instead`);\n        }\n        try {\n            verfer = new _verfer_js__WEBPACK_IMPORTED_MODULE_4__.Verfer({ qb64: keys[0] });\n        }\n        catch (e) {\n            throw new Error(`Error extracting public key = ${e}`);\n        }\n        if (verfer.code in [_matter_js__WEBPACK_IMPORTED_MODULE_0__.MtrDex.Ed25519]) {\n            throw new Error(`Mismatch derivation code = ${verfer.code}`);\n        }\n        return [verfer.raw, verfer.code];\n    }\n    static _derive_blake3_256(sad) {\n        const ilk = sad['t'];\n        if (![_core_js__WEBPACK_IMPORTED_MODULE_2__.Ilks.icp, _core_js__WEBPACK_IMPORTED_MODULE_2__.Ilks.dip, _core_js__WEBPACK_IMPORTED_MODULE_2__.Ilks.vcp, _core_js__WEBPACK_IMPORTED_MODULE_2__.Ilks.dip].includes(ilk)) {\n            throw new Error(`Invalid ilk = ${ilk} to derive pre.`);\n        }\n        sad['i'] = ''.padStart(_matter_js__WEBPACK_IMPORTED_MODULE_0__.Matter.Sizes.get(_matter_js__WEBPACK_IMPORTED_MODULE_0__.MtrDex.Blake3_256).fs, Dummy);\n        sad['d'] = sad['i'];\n        const [raw] = (0,_serder_js__WEBPACK_IMPORTED_MODULE_3__.sizeify)(sad);\n        const dig = _noble_hashes_blake3__WEBPACK_IMPORTED_MODULE_5__.blake3.create({ dkLen: 32 }).update(raw).digest();\n        return [dig, _matter_js__WEBPACK_IMPORTED_MODULE_0__.MtrDex.Blake3_256];\n    }\n    _verify_ed25519N(sad, pre, prefixed = false) {\n        try {\n            const keys = sad['k'];\n            if (keys.length != 1) {\n                return false;\n            }\n            if (keys[0] != pre) {\n                return false;\n            }\n            if (prefixed && sad['i'] != pre) {\n                return false;\n            }\n            const next = 'n' in sad ? sad['n'] : [];\n            if (next.length > 0) {\n                // must be empty\n                return false;\n            }\n        }\n        catch (e) {\n            return false;\n        }\n        return true;\n    }\n    _verify_ed25519(sad, pre, prefixed = false) {\n        try {\n            const keys = sad['k'];\n            if (keys.length != 1) {\n                return false;\n            }\n            if (keys[0] != pre) {\n                return false;\n            }\n            if (prefixed && sad['i'] != pre) {\n                return false;\n            }\n        }\n        catch (e) {\n            return false;\n        }\n        return true;\n    }\n    _verify_blake3_256(sad, pre, prefixed = false) {\n        try {\n            const [raw] = Prefixer._derive_blake3_256(sad);\n            const crymat = new _matter_js__WEBPACK_IMPORTED_MODULE_0__.Matter({ raw: raw, code: _matter_js__WEBPACK_IMPORTED_MODULE_0__.MtrDex.Blake3_256 });\n            if (crymat.qb64 != pre) {\n                return false;\n            }\n            if (prefixed && sad['i'] != pre) {\n                return false;\n            }\n        }\n        catch (e) {\n            return false;\n        }\n        return true;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/core/prefixer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/core/saider.js":
/*!**********************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/core/saider.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Ids: () => (/* binding */ Ids),\n/* harmony export */   Saider: () => (/* binding */ Saider)\n/* harmony export */ });\n/* harmony import */ var _matter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./matter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/matter.js\");\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./core.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/core.js\");\n/* harmony import */ var _kering_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kering.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/kering.js\");\n/* harmony import */ var _serder_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./serder.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/serder.js\");\n/* harmony import */ var _noble_hashes_blake3__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @noble/hashes/blake3 */ \"(ssr)/./node_modules/@noble/hashes/esm/blake3.js\");\n\n\n\n\n\nconst Dummy = '#';\nvar Ids;\n(function (Ids) {\n    Ids[\"d\"] = \"d\";\n})(Ids || (Ids = {}));\nclass Saider extends _matter_js__WEBPACK_IMPORTED_MODULE_0__.Matter {\n    constructor({ raw, code, qb64b, qb64, qb2 }, sad, kind, label = Ids.d) {\n        try {\n            super({ raw, code, qb64b, qb64, qb2 });\n        }\n        catch (e) {\n            if (e instanceof _kering_js__WEBPACK_IMPORTED_MODULE_2__.EmptyMaterialError) {\n                if (sad == undefined || !(label in sad)) {\n                    throw e;\n                }\n                if (code == undefined) {\n                    if (sad[label] != '') {\n                        super({ qb64: sad[label], code: code });\n                        code = this.code;\n                    }\n                    else {\n                        code = _matter_js__WEBPACK_IMPORTED_MODULE_0__.MtrDex.Blake3_256;\n                    }\n                }\n                if (!_matter_js__WEBPACK_IMPORTED_MODULE_0__.DigiDex.has(code)) {\n                    throw new Error(`Unsupported digest code = ${code}`);\n                }\n                [raw] = Saider._derive(Object.assign({}, sad), code, kind, label);\n                super({ raw: raw, code: code });\n            }\n            else {\n                throw e;\n            }\n        }\n        if (!this.digestive) {\n            throw new Error(`Unsupported digest code = ${this.code}.`);\n        }\n    }\n    static _derive(sad, code, kind, label) {\n        if (!_matter_js__WEBPACK_IMPORTED_MODULE_0__.DigiDex.has(code)) {\n            throw new Error(`Unsupported digest code = ${code}.`);\n        }\n        sad = Object.assign({}, sad);\n        sad[label] = ''.padStart(_matter_js__WEBPACK_IMPORTED_MODULE_0__.Matter.Sizes.get(code).fs, Dummy);\n        if ('v' in sad) {\n            [, , kind, sad] = (0,_serder_js__WEBPACK_IMPORTED_MODULE_3__.sizeify)(sad, kind);\n        }\n        const ser = Object.assign({}, sad);\n        const cpa = Saider._serialze(ser, kind);\n        switch (code) {\n            case _matter_js__WEBPACK_IMPORTED_MODULE_0__.MtrDex.Blake3_256:\n                return [_noble_hashes_blake3__WEBPACK_IMPORTED_MODULE_4__.blake3.create({ dkLen: 32 }).update(cpa).digest(), sad];\n            default:\n                throw new Error(`Unsupported digest code = ${code}.`);\n        }\n    }\n    derive(sad, code, kind, label) {\n        code = code != undefined ? code : this.code;\n        return Saider._derive(sad, code, kind, label);\n    }\n    verify(sad, prefixed = false, versioned = false, kind, label = Ids.d) {\n        try {\n            const [raw, dsad] = Saider._derive(sad, this.code, kind, label);\n            const saider = new Saider({ raw: raw, code: this.code });\n            if (this.qb64 != saider.qb64) {\n                return false;\n            }\n            if ('v' in sad && versioned) {\n                if (sad['v'] != dsad['v']) {\n                    return false;\n                }\n            }\n            if (prefixed && sad[label] != this.qb64) {\n                return false;\n            }\n        }\n        catch (e) {\n            return false;\n        }\n        return true;\n    }\n    static _serialze(sad, kind) {\n        let knd = _core_js__WEBPACK_IMPORTED_MODULE_1__.Serials.JSON;\n        if ('v' in sad) {\n            [, knd] = (0,_core_js__WEBPACK_IMPORTED_MODULE_1__.deversify)(sad['v']);\n        }\n        if (kind == undefined) {\n            kind = knd;\n        }\n        return (0,_serder_js__WEBPACK_IMPORTED_MODULE_3__.dumps)(sad, kind);\n    }\n    static saidify(sad, code = _matter_js__WEBPACK_IMPORTED_MODULE_0__.MtrDex.Blake3_256, kind = _core_js__WEBPACK_IMPORTED_MODULE_1__.Serials.JSON, label = Ids.d) {\n        if (!(label in sad)) {\n            throw new Error(`Missing id field labeled=${label} in sad.`);\n        }\n        let raw;\n        [raw, sad] = Saider._derive(sad, code, kind, label);\n        const saider = new Saider({ raw: raw, code: code }, undefined, kind, label);\n        sad[label] = saider.qb64;\n        return [saider, sad];\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2tlcmkvY29yZS9zYWlkZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFzRDtBQUNQO0FBQ0U7QUFDSjtBQUNDO0FBQzlDO0FBQ087QUFDUDtBQUNBO0FBQ0EsQ0FBQyxrQkFBa0I7QUFDWixxQkFBcUIsOENBQU07QUFDbEMsa0JBQWtCLDZCQUE2QjtBQUMvQztBQUNBLG9CQUFvQiw2QkFBNkI7QUFDakQ7QUFDQTtBQUNBLDZCQUE2QiwwREFBa0I7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyw4QkFBOEI7QUFDOUQ7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLDhDQUFNO0FBQ3JDO0FBQ0E7QUFDQSxxQkFBcUIsK0NBQU87QUFDNUIsaUVBQWlFLEtBQUs7QUFDdEU7QUFDQSx1REFBdUQ7QUFDdkQsd0JBQXdCLHNCQUFzQjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5REFBeUQsVUFBVTtBQUNuRTtBQUNBO0FBQ0E7QUFDQSxhQUFhLCtDQUFPO0FBQ3BCLHlEQUF5RCxLQUFLO0FBQzlEO0FBQ0EsOEJBQThCO0FBQzlCLGlDQUFpQyw4Q0FBTTtBQUN2QztBQUNBLDhCQUE4QixtREFBTztBQUNyQztBQUNBLG9DQUFvQztBQUNwQztBQUNBO0FBQ0EsaUJBQWlCLDhDQUFNO0FBQ3ZCLHdCQUF3Qix3REFBTSxVQUFVLFdBQVc7QUFDbkQ7QUFDQSw2REFBNkQsS0FBSztBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MsMkJBQTJCO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiw2Q0FBTztBQUN6QjtBQUNBLHNCQUFzQixtREFBUztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsaURBQUs7QUFDcEI7QUFDQSwrQkFBK0IsOENBQU0sb0JBQW9CLDZDQUFPO0FBQ2hFO0FBQ0Esd0RBQXdELE9BQU87QUFDL0Q7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLHNCQUFzQjtBQUMxRDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N0ZWxsYXItcHJvY3VyZW1lbnQtZGFwcC8uL25vZGVfbW9kdWxlcy9zaWduaWZ5LXRzL2Rpc3Qva2VyaS9jb3JlL3NhaWRlci5qcz80N2IzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpZ2lEZXgsIE1hdHRlciwgTXRyRGV4IH0gZnJvbSBcIi4vbWF0dGVyLmpzXCI7XG5pbXBvcnQgeyBkZXZlcnNpZnksIFNlcmlhbHMgfSBmcm9tIFwiLi9jb3JlLmpzXCI7XG5pbXBvcnQgeyBFbXB0eU1hdGVyaWFsRXJyb3IgfSBmcm9tIFwiLi9rZXJpbmcuanNcIjtcbmltcG9ydCB7IGR1bXBzLCBzaXplaWZ5IH0gZnJvbSBcIi4vc2VyZGVyLmpzXCI7XG5pbXBvcnQgeyBibGFrZTMgfSBmcm9tICdAbm9ibGUvaGFzaGVzL2JsYWtlMyc7XG5jb25zdCBEdW1teSA9ICcjJztcbmV4cG9ydCB2YXIgSWRzO1xuKGZ1bmN0aW9uIChJZHMpIHtcbiAgICBJZHNbXCJkXCJdID0gXCJkXCI7XG59KShJZHMgfHwgKElkcyA9IHt9KSk7XG5leHBvcnQgY2xhc3MgU2FpZGVyIGV4dGVuZHMgTWF0dGVyIHtcbiAgICBjb25zdHJ1Y3Rvcih7IHJhdywgY29kZSwgcWI2NGIsIHFiNjQsIHFiMiB9LCBzYWQsIGtpbmQsIGxhYmVsID0gSWRzLmQpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHN1cGVyKHsgcmF3LCBjb2RlLCBxYjY0YiwgcWI2NCwgcWIyIH0pO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICBpZiAoZSBpbnN0YW5jZW9mIEVtcHR5TWF0ZXJpYWxFcnJvcikge1xuICAgICAgICAgICAgICAgIGlmIChzYWQgPT0gdW5kZWZpbmVkIHx8ICEobGFiZWwgaW4gc2FkKSkge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoY29kZSA9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNhZFtsYWJlbF0gIT0gJycpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN1cGVyKHsgcWI2NDogc2FkW2xhYmVsXSwgY29kZTogY29kZSB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvZGUgPSB0aGlzLmNvZGU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb2RlID0gTXRyRGV4LkJsYWtlM18yNTY7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKCFEaWdpRGV4Lmhhcyhjb2RlKSkge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuc3VwcG9ydGVkIGRpZ2VzdCBjb2RlID0gJHtjb2RlfWApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBbcmF3XSA9IFNhaWRlci5fZGVyaXZlKE9iamVjdC5hc3NpZ24oe30sIHNhZCksIGNvZGUsIGtpbmQsIGxhYmVsKTtcbiAgICAgICAgICAgICAgICBzdXBlcih7IHJhdzogcmF3LCBjb2RlOiBjb2RlIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoIXRoaXMuZGlnZXN0aXZlKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuc3VwcG9ydGVkIGRpZ2VzdCBjb2RlID0gJHt0aGlzLmNvZGV9LmApO1xuICAgICAgICB9XG4gICAgfVxuICAgIHN0YXRpYyBfZGVyaXZlKHNhZCwgY29kZSwga2luZCwgbGFiZWwpIHtcbiAgICAgICAgaWYgKCFEaWdpRGV4Lmhhcyhjb2RlKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbnN1cHBvcnRlZCBkaWdlc3QgY29kZSA9ICR7Y29kZX0uYCk7XG4gICAgICAgIH1cbiAgICAgICAgc2FkID0gT2JqZWN0LmFzc2lnbih7fSwgc2FkKTtcbiAgICAgICAgc2FkW2xhYmVsXSA9ICcnLnBhZFN0YXJ0KE1hdHRlci5TaXplcy5nZXQoY29kZSkuZnMsIER1bW15KTtcbiAgICAgICAgaWYgKCd2JyBpbiBzYWQpIHtcbiAgICAgICAgICAgIFssICwga2luZCwgc2FkXSA9IHNpemVpZnkoc2FkLCBraW5kKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBzZXIgPSBPYmplY3QuYXNzaWduKHt9LCBzYWQpO1xuICAgICAgICBjb25zdCBjcGEgPSBTYWlkZXIuX3NlcmlhbHplKHNlciwga2luZCk7XG4gICAgICAgIHN3aXRjaCAoY29kZSkge1xuICAgICAgICAgICAgY2FzZSBNdHJEZXguQmxha2UzXzI1NjpcbiAgICAgICAgICAgICAgICByZXR1cm4gW2JsYWtlMy5jcmVhdGUoeyBka0xlbjogMzIgfSkudXBkYXRlKGNwYSkuZGlnZXN0KCksIHNhZF07XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5zdXBwb3J0ZWQgZGlnZXN0IGNvZGUgPSAke2NvZGV9LmApO1xuICAgICAgICB9XG4gICAgfVxuICAgIGRlcml2ZShzYWQsIGNvZGUsIGtpbmQsIGxhYmVsKSB7XG4gICAgICAgIGNvZGUgPSBjb2RlICE9IHVuZGVmaW5lZCA/IGNvZGUgOiB0aGlzLmNvZGU7XG4gICAgICAgIHJldHVybiBTYWlkZXIuX2Rlcml2ZShzYWQsIGNvZGUsIGtpbmQsIGxhYmVsKTtcbiAgICB9XG4gICAgdmVyaWZ5KHNhZCwgcHJlZml4ZWQgPSBmYWxzZSwgdmVyc2lvbmVkID0gZmFsc2UsIGtpbmQsIGxhYmVsID0gSWRzLmQpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IFtyYXcsIGRzYWRdID0gU2FpZGVyLl9kZXJpdmUoc2FkLCB0aGlzLmNvZGUsIGtpbmQsIGxhYmVsKTtcbiAgICAgICAgICAgIGNvbnN0IHNhaWRlciA9IG5ldyBTYWlkZXIoeyByYXc6IHJhdywgY29kZTogdGhpcy5jb2RlIH0pO1xuICAgICAgICAgICAgaWYgKHRoaXMucWI2NCAhPSBzYWlkZXIucWI2NCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICgndicgaW4gc2FkICYmIHZlcnNpb25lZCkge1xuICAgICAgICAgICAgICAgIGlmIChzYWRbJ3YnXSAhPSBkc2FkWyd2J10pIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChwcmVmaXhlZCAmJiBzYWRbbGFiZWxdICE9IHRoaXMucWI2NCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBzdGF0aWMgX3NlcmlhbHplKHNhZCwga2luZCkge1xuICAgICAgICBsZXQga25kID0gU2VyaWFscy5KU09OO1xuICAgICAgICBpZiAoJ3YnIGluIHNhZCkge1xuICAgICAgICAgICAgWywga25kXSA9IGRldmVyc2lmeShzYWRbJ3YnXSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGtpbmQgPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBraW5kID0ga25kO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkdW1wcyhzYWQsIGtpbmQpO1xuICAgIH1cbiAgICBzdGF0aWMgc2FpZGlmeShzYWQsIGNvZGUgPSBNdHJEZXguQmxha2UzXzI1Niwga2luZCA9IFNlcmlhbHMuSlNPTiwgbGFiZWwgPSBJZHMuZCkge1xuICAgICAgICBpZiAoIShsYWJlbCBpbiBzYWQpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYE1pc3NpbmcgaWQgZmllbGQgbGFiZWxlZD0ke2xhYmVsfSBpbiBzYWQuYCk7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHJhdztcbiAgICAgICAgW3Jhdywgc2FkXSA9IFNhaWRlci5fZGVyaXZlKHNhZCwgY29kZSwga2luZCwgbGFiZWwpO1xuICAgICAgICBjb25zdCBzYWlkZXIgPSBuZXcgU2FpZGVyKHsgcmF3OiByYXcsIGNvZGU6IGNvZGUgfSwgdW5kZWZpbmVkLCBraW5kLCBsYWJlbCk7XG4gICAgICAgIHNhZFtsYWJlbF0gPSBzYWlkZXIucWI2NDtcbiAgICAgICAgcmV0dXJuIFtzYWlkZXIsIHNhZF07XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/core/saider.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/core/salter.js":
/*!**********************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/core/salter.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Salter: () => (/* binding */ Salter),\n/* harmony export */   Tier: () => (/* binding */ Tier)\n/* harmony export */ });\n/* harmony import */ var _signer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./signer.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/signer.js\");\n/* harmony import */ var _matter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./matter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/matter.js\");\n/* harmony import */ var _kering_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./kering.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/kering.js\");\n/* harmony import */ var libsodium_wrappers_sumo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! libsodium-wrappers-sumo */ \"(ssr)/./node_modules/libsodium-wrappers-sumo/dist/modules-sumo/libsodium-wrappers.js\");\n\n\n\n\n/**\n * Secret derivation security tier.\n */\nvar Tier;\n(function (Tier) {\n    Tier[\"low\"] = \"low\";\n    Tier[\"med\"] = \"med\";\n    Tier[\"high\"] = \"high\";\n})(Tier || (Tier = {}));\n/**\n * Maintains a random salt for secrets (private keys).\n * Its .raw is random salt, .code as cipher suite for salt\n */\nclass Salter extends _matter_js__WEBPACK_IMPORTED_MODULE_1__.Matter {\n    /**\n     * Creates a Salter from the provided raw salt bytes or generates a random salt if raw is not provided.\n     * Defaults to low security tier. Only supports Salt_128 salt type.\n     * @param salterArgs defines the kind of cryptographic seed to create with a variety of raw material initialization sources.\n     */\n    constructor(salterArgs) {\n        const { raw, code = _matter_js__WEBPACK_IMPORTED_MODULE_1__.MtrDex.Salt_128, tier = Tier.low, qb64, qb64b, qb2, } = salterArgs;\n        try {\n            super({ raw, code, qb64, qb64b, qb2 });\n        }\n        catch (e) {\n            if (e instanceof _kering_js__WEBPACK_IMPORTED_MODULE_2__.EmptyMaterialError) {\n                if (code == _matter_js__WEBPACK_IMPORTED_MODULE_1__.MtrDex.Salt_128) {\n                    const salt = libsodium_wrappers_sumo__WEBPACK_IMPORTED_MODULE_3__.randombytes_buf(libsodium_wrappers_sumo__WEBPACK_IMPORTED_MODULE_3__.crypto_pwhash_SALTBYTES);\n                    super({ raw: salt, code: code });\n                }\n                else {\n                    throw new Error('invalid code for Salter, only Salt_128 accepted');\n                }\n            }\n            else {\n                throw e;\n            }\n        }\n        if (this.code != _matter_js__WEBPACK_IMPORTED_MODULE_1__.MtrDex.Salt_128) {\n            throw new Error('invalid code for Salter, only Salt_128 accepted');\n        }\n        this._tier = tier !== null ? tier : Tier.low;\n    }\n    /**\n     * Stretches the salt to a secret key using the path, .raw, tier, and size determined by self.code.\n     *\n     * @param size number of bytes of the stretched seed\n     * @param path string of bytes prepended (prefixed) to the salt before stretching\n     * @param tier security tier for stretching\n     * @param temp boolean, True means use temporary, insecure tier; for testing only\n     * @returns stretched raw binary seed (secret) derived from path and .raw, and size using argon2d stretching algorithm.\n     * @private\n     */\n    stretch(size = 32, path = '', tier = null, temp = false) {\n        tier = tier == null ? this.tier : tier;\n        let opslimit, memlimit;\n        // Harcoded values based on keripy\n        if (temp) {\n            opslimit = 1; //libsodium.crypto_pwhash_OPSLIMIT_MIN\n            memlimit = 8192; //libsodium.crypto_pwhash_MEMLIMIT_MIN\n        }\n        else {\n            switch (tier) {\n                case Tier.low:\n                    opslimit = 2; //libsodium.crypto_pwhash_OPSLIMIT_INTERACTIVE\n                    memlimit = 67108864; //libsodium.crypto_pwhash_MEMLIMIT_INTERACTIVE\n                    break;\n                case Tier.med:\n                    opslimit = 3; //libsodium.crypto_pwhash_OPSLIMIT_MODERATE\n                    memlimit = 268435456; //libsodium.crypto_pwhash_MEMLIMIT_MODERATE\n                    break;\n                case Tier.high:\n                    opslimit = 4; //libsodium.crypto_pwhash_OPSLIMIT_SENSITIVE\n                    memlimit = 1073741824; //libsodium.crypto_pwhash_MEMLIMIT_SENSITIVE\n                    break;\n                default:\n                    throw new Error(`Unsupported security tier = ${tier}.`);\n            }\n        }\n        return libsodium_wrappers_sumo__WEBPACK_IMPORTED_MODULE_3__.crypto_pwhash(size, path, this.raw, opslimit, memlimit, libsodium_wrappers_sumo__WEBPACK_IMPORTED_MODULE_3__.crypto_pwhash_ALG_ARGON2ID13);\n    }\n    /**\n     * Returns Signer with the private key secret derived from code the path, the user entered passcode as a salt,\n     * and the security tier sized by the CESR cryptographic seed size indicated by the code. See the example below.\n     * The Signer's public key for its .verfer is derived from its private key, the Matter code, and the transferable boolean.\n     *\n     * The construction of the raw hash bytes used looks like this:\n     *  (      size,               password, salt                                   )\n     *  where\n     *  ( code size,                   path, Base64Decode(passcode)                 )\n     *  for example, for the initial inception signing key the following parameters are used:\n     *  (        32, \"signify:controller00\", Base64Decode(\"Athisismysecretkeyseed\") )\n     *  and for the initial rotation key pair the following parameters are used:\n     *  (        32, \"signify:controller01\", Base64Decode(\"Athisismysecretkeyseed\") )\n     *\n     * @param code derivation code indicating seed type\n     * @param transferable whether or not the key is for a transferable or non-transferable identifier.\n     * @param path string of bytes prepended (prefixed) to the salt before stretching\n     * @param tier security tier for stretching\n     * @param temp boolean, True means use temporary, insecure tier; for testing only\n     */\n    signer(code = _matter_js__WEBPACK_IMPORTED_MODULE_1__.MtrDex.Ed25519_Seed, transferable = true, path = '', tier = null, temp = false) {\n        const seed = this.stretch(_matter_js__WEBPACK_IMPORTED_MODULE_1__.Matter._rawSize(code), path, tier, temp);\n        return new _signer_js__WEBPACK_IMPORTED_MODULE_0__.Signer({\n            raw: seed, // private key\n            code: code,\n            transferable: transferable,\n        });\n    }\n    get tier() {\n        return this._tier;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/core/salter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/core/seqner.js":
/*!**********************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/core/seqner.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Seqner: () => (/* binding */ Seqner)\n/* harmony export */ });\n/* harmony import */ var _matter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./matter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/matter.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/utils.js\");\nvar __rest = (undefined && undefined.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\n\n\n/**\n * @description  Seqner: subclass of Matter, cryptographic material, for ordinal numbers\n * such as sequence numbers or first seen ordering numbers.\n * Seqner provides fully qualified format for ordinals (sequence numbers etc)\n * when provided as attached cryptographic material elements.\n */\nclass Seqner extends _matter_js__WEBPACK_IMPORTED_MODULE_0__.Matter {\n    constructor(_a) {\n        var { raw, code = _matter_js__WEBPACK_IMPORTED_MODULE_0__.MtrDex.Salt_128, qb64, qb64b, qb2, sn, snh } = _a, kwa = __rest(_a, [\"raw\", \"code\", \"qb64\", \"qb64b\", \"qb2\", \"sn\", \"snh\"]);\n        if (!raw && !qb64b && !qb64 && !qb2) {\n            if (sn === undefined) {\n                if (snh === undefined) {\n                    sn = 0;\n                }\n                else {\n                    sn = parseInt(snh, 16);\n                }\n            }\n            raw = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.intToBytes)(sn, _matter_js__WEBPACK_IMPORTED_MODULE_0__.Matter._rawSize(_matter_js__WEBPACK_IMPORTED_MODULE_0__.MtrDex.Salt_128));\n        }\n        super(Object.assign({ raw, code, qb64, qb64b, qb2 }, kwa));\n        if (this.code !== _matter_js__WEBPACK_IMPORTED_MODULE_0__.MtrDex.Salt_128) {\n            throw new Error(`Invalid code = ${this.code} for Seqner.`);\n        }\n    }\n    get sn() {\n        return (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.bytesToInt)(this.raw); //To check if other readUInt64 is needed\n    }\n    get snh() {\n        return this.sn.toString(16);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2tlcmkvY29yZS9zZXFuZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsY0FBYyxTQUFJLElBQUksU0FBSTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZEQUE2RCxjQUFjO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDNkM7QUFDTztBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxxQkFBcUIsOENBQU07QUFDbEM7QUFDQSxjQUFjLFlBQVksOENBQU0sdUNBQXVDO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixxREFBVSxLQUFLLDhDQUFNLFVBQVUsOENBQU07QUFDdkQ7QUFDQSw4QkFBOEIsNkJBQTZCO0FBQzNELDBCQUEwQiw4Q0FBTTtBQUNoQyw4Q0FBOEMsV0FBVztBQUN6RDtBQUNBO0FBQ0E7QUFDQSxlQUFlLHFEQUFVLFlBQVk7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3N0ZWxsYXItcHJvY3VyZW1lbnQtZGFwcC8uL25vZGVfbW9kdWxlcy9zaWduaWZ5LXRzL2Rpc3Qva2VyaS9jb3JlL3NlcW5lci5qcz81ZTBlIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX3Jlc3QgPSAodGhpcyAmJiB0aGlzLl9fcmVzdCkgfHwgZnVuY3Rpb24gKHMsIGUpIHtcbiAgICB2YXIgdCA9IHt9O1xuICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSAmJiBlLmluZGV4T2YocCkgPCAwKVxuICAgICAgICB0W3BdID0gc1twXTtcbiAgICBpZiAocyAhPSBudWxsICYmIHR5cGVvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzID09PSBcImZ1bmN0aW9uXCIpXG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBwID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzKTsgaSA8IHAubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmIChlLmluZGV4T2YocFtpXSkgPCAwICYmIE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChzLCBwW2ldKSlcbiAgICAgICAgICAgICAgICB0W3BbaV1dID0gc1twW2ldXTtcbiAgICAgICAgfVxuICAgIHJldHVybiB0O1xufTtcbmltcG9ydCB7IE1hdHRlciwgTXRyRGV4IH0gZnJvbSBcIi4vbWF0dGVyLmpzXCI7XG5pbXBvcnQgeyBpbnRUb0J5dGVzLCBieXRlc1RvSW50IH0gZnJvbSBcIi4vdXRpbHMuanNcIjtcbi8qKlxuICogQGRlc2NyaXB0aW9uICBTZXFuZXI6IHN1YmNsYXNzIG9mIE1hdHRlciwgY3J5cHRvZ3JhcGhpYyBtYXRlcmlhbCwgZm9yIG9yZGluYWwgbnVtYmVyc1xuICogc3VjaCBhcyBzZXF1ZW5jZSBudW1iZXJzIG9yIGZpcnN0IHNlZW4gb3JkZXJpbmcgbnVtYmVycy5cbiAqIFNlcW5lciBwcm92aWRlcyBmdWxseSBxdWFsaWZpZWQgZm9ybWF0IGZvciBvcmRpbmFscyAoc2VxdWVuY2UgbnVtYmVycyBldGMpXG4gKiB3aGVuIHByb3ZpZGVkIGFzIGF0dGFjaGVkIGNyeXB0b2dyYXBoaWMgbWF0ZXJpYWwgZWxlbWVudHMuXG4gKi9cbmV4cG9ydCBjbGFzcyBTZXFuZXIgZXh0ZW5kcyBNYXR0ZXIge1xuICAgIGNvbnN0cnVjdG9yKF9hKSB7XG4gICAgICAgIHZhciB7IHJhdywgY29kZSA9IE10ckRleC5TYWx0XzEyOCwgcWI2NCwgcWI2NGIsIHFiMiwgc24sIHNuaCB9ID0gX2EsIGt3YSA9IF9fcmVzdChfYSwgW1wicmF3XCIsIFwiY29kZVwiLCBcInFiNjRcIiwgXCJxYjY0YlwiLCBcInFiMlwiLCBcInNuXCIsIFwic25oXCJdKTtcbiAgICAgICAgaWYgKCFyYXcgJiYgIXFiNjRiICYmICFxYjY0ICYmICFxYjIpIHtcbiAgICAgICAgICAgIGlmIChzbiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgaWYgKHNuaCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHNuID0gMDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHNuID0gcGFyc2VJbnQoc25oLCAxNik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmF3ID0gaW50VG9CeXRlcyhzbiwgTWF0dGVyLl9yYXdTaXplKE10ckRleC5TYWx0XzEyOCkpO1xuICAgICAgICB9XG4gICAgICAgIHN1cGVyKE9iamVjdC5hc3NpZ24oeyByYXcsIGNvZGUsIHFiNjQsIHFiNjRiLCBxYjIgfSwga3dhKSk7XG4gICAgICAgIGlmICh0aGlzLmNvZGUgIT09IE10ckRleC5TYWx0XzEyOCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIGNvZGUgPSAke3RoaXMuY29kZX0gZm9yIFNlcW5lci5gKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXQgc24oKSB7XG4gICAgICAgIHJldHVybiBieXRlc1RvSW50KHRoaXMucmF3KTsgLy9UbyBjaGVjayBpZiBvdGhlciByZWFkVUludDY0IGlzIG5lZWRlZFxuICAgIH1cbiAgICBnZXQgc25oKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zbi50b1N0cmluZygxNik7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/core/seqner.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/core/serder.js":
/*!**********************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/core/serder.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Serder: () => (/* binding */ Serder),\n/* harmony export */   dumps: () => (/* binding */ dumps),\n/* harmony export */   sizeify: () => (/* binding */ sizeify)\n/* harmony export */ });\n/* harmony import */ var _matter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./matter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/matter.js\");\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./core.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/core.js\");\n/* harmony import */ var _verfer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./verfer.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/verfer.js\");\n/* harmony import */ var _diger_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./diger.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/diger.js\");\n/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./number.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/number.js\");\n\n\n\n\n\nclass Serder {\n    /**\n     * Creates a new Serder object from a self-addressing data dictionary.\n     * @param sad self-addressing data dictionary.\n     * @param kind serialization type to produce\n     * @param code derivation code for the prefix\n     */\n    constructor(sad, kind = _core_js__WEBPACK_IMPORTED_MODULE_1__.Serials.JSON, code = _matter_js__WEBPACK_IMPORTED_MODULE_0__.MtrDex.Blake3_256) {\n        this._raw = '';\n        this._sad = {};\n        this._proto = _core_js__WEBPACK_IMPORTED_MODULE_1__.Protocols.KERI;\n        this._size = 0;\n        this._version = _core_js__WEBPACK_IMPORTED_MODULE_1__.Vrsn_1_0;\n        const [raw, proto, eKind, eSad, version] = this._exhale(sad, kind);\n        this._raw = raw;\n        this._sad = eSad;\n        this._proto = proto;\n        this._version = version;\n        this._code = code;\n        this._kind = eKind;\n        this._size = raw.length;\n    }\n    get sad() {\n        return this._sad;\n    }\n    get pre() {\n        return this._sad['i'];\n    }\n    get code() {\n        return this._code;\n    }\n    get raw() {\n        return this._raw;\n    }\n    get said() {\n        return this._sad['d'];\n    }\n    get sner() {\n        return new _number_js__WEBPACK_IMPORTED_MODULE_4__.CesrNumber({}, this.sad['s']);\n    }\n    get sn() {\n        return this.sner.num;\n    }\n    get kind() {\n        return this._kind;\n    }\n    /**\n     * Serializes a self-addressing data dictionary from the dictionary passed in\n     * using the specified serialization type.\n     * @param sad self-addressing data dictionary.\n     * @param kind serialization type to produce\n     * @private\n     */\n    _exhale(sad, kind) {\n        return sizeify(sad, kind);\n    }\n    get proto() {\n        return this._proto;\n    }\n    get size() {\n        return this._size;\n    }\n    get version() {\n        return this._version;\n    }\n    get verfers() {\n        let keys = [];\n        if ('k' in this._sad) {\n            // establishment event\n            keys = this._sad['k'];\n        }\n        else {\n            // non-establishment event\n            keys = [];\n        }\n        // create a new Verfer for each key\n        const verfers = [];\n        for (const key of keys) {\n            verfers.push(new _verfer_js__WEBPACK_IMPORTED_MODULE_2__.Verfer({ qb64: key }));\n        }\n        return verfers;\n    }\n    get digers() {\n        let keys = [];\n        if ('n' in this._sad) {\n            // establishment event\n            keys = this._sad['n'];\n        }\n        else {\n            // non-establishment event\n            keys = [];\n        }\n        // create a new Verfer for each key\n        const digers = [];\n        for (const key of keys) {\n            digers.push(new _diger_js__WEBPACK_IMPORTED_MODULE_3__.Diger({ qb64: key }));\n        }\n        return digers;\n    }\n    pretty() {\n        return JSON.stringify(this._sad, undefined, 2);\n    }\n}\nfunction dumps(sad, kind) {\n    if (kind == _core_js__WEBPACK_IMPORTED_MODULE_1__.Serials.JSON) {\n        return JSON.stringify(sad);\n    }\n    else {\n        throw new Error('unsupported event encoding');\n    }\n}\nfunction sizeify(ked, kind) {\n    if (!('v' in ked)) {\n        throw new Error('Missing or empty version string');\n    }\n    const [proto, knd, version] = (0,_core_js__WEBPACK_IMPORTED_MODULE_1__.deversify)(ked['v']);\n    if (version != _core_js__WEBPACK_IMPORTED_MODULE_1__.Vrsn_1_0) {\n        throw new Error(`unsupported version ${version.toString()}`);\n    }\n    if (kind == undefined) {\n        kind = knd;\n    }\n    let raw = dumps(ked, kind);\n    const size = new TextEncoder().encode(raw).length;\n    ked['v'] = (0,_core_js__WEBPACK_IMPORTED_MODULE_1__.versify)(proto, version, kind, size);\n    raw = dumps(ked, kind);\n    return [raw, proto, kind, ked, version];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2tlcmkvY29yZS9zZXJkZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBcUM7QUFDeUM7QUFDekM7QUFDRjtBQUNNO0FBQ2xDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLDZDQUFPLGNBQWMsOENBQU07QUFDdkQ7QUFDQTtBQUNBLHNCQUFzQiwrQ0FBUztBQUMvQjtBQUNBLHdCQUF3Qiw4Q0FBUTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixrREFBVSxHQUFHO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qiw4Q0FBTSxHQUFHLFdBQVc7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsNENBQUssR0FBRyxXQUFXO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxnQkFBZ0IsNkNBQU87QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsbURBQVM7QUFDM0MsbUJBQW1CLDhDQUFRO0FBQzNCLCtDQUErQyxtQkFBbUI7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxpREFBTztBQUN0QjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdGVsbGFyLXByb2N1cmVtZW50LWRhcHAvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2tlcmkvY29yZS9zZXJkZXIuanM/MTVhYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNdHJEZXggfSBmcm9tIFwiLi9tYXR0ZXIuanNcIjtcbmltcG9ydCB7IGRldmVyc2lmeSwgUHJvdG9jb2xzLCBTZXJpYWxzLCB2ZXJzaWZ5LCBWcnNuXzFfMCwgfSBmcm9tIFwiLi9jb3JlLmpzXCI7XG5pbXBvcnQgeyBWZXJmZXIgfSBmcm9tIFwiLi92ZXJmZXIuanNcIjtcbmltcG9ydCB7IERpZ2VyIH0gZnJvbSBcIi4vZGlnZXIuanNcIjtcbmltcG9ydCB7IENlc3JOdW1iZXIgfSBmcm9tIFwiLi9udW1iZXIuanNcIjtcbmV4cG9ydCBjbGFzcyBTZXJkZXIge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBuZXcgU2VyZGVyIG9iamVjdCBmcm9tIGEgc2VsZi1hZGRyZXNzaW5nIGRhdGEgZGljdGlvbmFyeS5cbiAgICAgKiBAcGFyYW0gc2FkIHNlbGYtYWRkcmVzc2luZyBkYXRhIGRpY3Rpb25hcnkuXG4gICAgICogQHBhcmFtIGtpbmQgc2VyaWFsaXphdGlvbiB0eXBlIHRvIHByb2R1Y2VcbiAgICAgKiBAcGFyYW0gY29kZSBkZXJpdmF0aW9uIGNvZGUgZm9yIHRoZSBwcmVmaXhcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihzYWQsIGtpbmQgPSBTZXJpYWxzLkpTT04sIGNvZGUgPSBNdHJEZXguQmxha2UzXzI1Nikge1xuICAgICAgICB0aGlzLl9yYXcgPSAnJztcbiAgICAgICAgdGhpcy5fc2FkID0ge307XG4gICAgICAgIHRoaXMuX3Byb3RvID0gUHJvdG9jb2xzLktFUkk7XG4gICAgICAgIHRoaXMuX3NpemUgPSAwO1xuICAgICAgICB0aGlzLl92ZXJzaW9uID0gVnJzbl8xXzA7XG4gICAgICAgIGNvbnN0IFtyYXcsIHByb3RvLCBlS2luZCwgZVNhZCwgdmVyc2lvbl0gPSB0aGlzLl9leGhhbGUoc2FkLCBraW5kKTtcbiAgICAgICAgdGhpcy5fcmF3ID0gcmF3O1xuICAgICAgICB0aGlzLl9zYWQgPSBlU2FkO1xuICAgICAgICB0aGlzLl9wcm90byA9IHByb3RvO1xuICAgICAgICB0aGlzLl92ZXJzaW9uID0gdmVyc2lvbjtcbiAgICAgICAgdGhpcy5fY29kZSA9IGNvZGU7XG4gICAgICAgIHRoaXMuX2tpbmQgPSBlS2luZDtcbiAgICAgICAgdGhpcy5fc2l6ZSA9IHJhdy5sZW5ndGg7XG4gICAgfVxuICAgIGdldCBzYWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9zYWQ7XG4gICAgfVxuICAgIGdldCBwcmUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9zYWRbJ2knXTtcbiAgICB9XG4gICAgZ2V0IGNvZGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jb2RlO1xuICAgIH1cbiAgICBnZXQgcmF3KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fcmF3O1xuICAgIH1cbiAgICBnZXQgc2FpZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NhZFsnZCddO1xuICAgIH1cbiAgICBnZXQgc25lcigpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBDZXNyTnVtYmVyKHt9LCB0aGlzLnNhZFsncyddKTtcbiAgICB9XG4gICAgZ2V0IHNuKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zbmVyLm51bTtcbiAgICB9XG4gICAgZ2V0IGtpbmQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9raW5kO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTZXJpYWxpemVzIGEgc2VsZi1hZGRyZXNzaW5nIGRhdGEgZGljdGlvbmFyeSBmcm9tIHRoZSBkaWN0aW9uYXJ5IHBhc3NlZCBpblxuICAgICAqIHVzaW5nIHRoZSBzcGVjaWZpZWQgc2VyaWFsaXphdGlvbiB0eXBlLlxuICAgICAqIEBwYXJhbSBzYWQgc2VsZi1hZGRyZXNzaW5nIGRhdGEgZGljdGlvbmFyeS5cbiAgICAgKiBAcGFyYW0ga2luZCBzZXJpYWxpemF0aW9uIHR5cGUgdG8gcHJvZHVjZVxuICAgICAqIEBwcml2YXRlXG4gICAgICovXG4gICAgX2V4aGFsZShzYWQsIGtpbmQpIHtcbiAgICAgICAgcmV0dXJuIHNpemVpZnkoc2FkLCBraW5kKTtcbiAgICB9XG4gICAgZ2V0IHByb3RvKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fcHJvdG87XG4gICAgfVxuICAgIGdldCBzaXplKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fc2l6ZTtcbiAgICB9XG4gICAgZ2V0IHZlcnNpb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl92ZXJzaW9uO1xuICAgIH1cbiAgICBnZXQgdmVyZmVycygpIHtcbiAgICAgICAgbGV0IGtleXMgPSBbXTtcbiAgICAgICAgaWYgKCdrJyBpbiB0aGlzLl9zYWQpIHtcbiAgICAgICAgICAgIC8vIGVzdGFibGlzaG1lbnQgZXZlbnRcbiAgICAgICAgICAgIGtleXMgPSB0aGlzLl9zYWRbJ2snXTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIC8vIG5vbi1lc3RhYmxpc2htZW50IGV2ZW50XG4gICAgICAgICAgICBrZXlzID0gW107XG4gICAgICAgIH1cbiAgICAgICAgLy8gY3JlYXRlIGEgbmV3IFZlcmZlciBmb3IgZWFjaCBrZXlcbiAgICAgICAgY29uc3QgdmVyZmVycyA9IFtdO1xuICAgICAgICBmb3IgKGNvbnN0IGtleSBvZiBrZXlzKSB7XG4gICAgICAgICAgICB2ZXJmZXJzLnB1c2gobmV3IFZlcmZlcih7IHFiNjQ6IGtleSB9KSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHZlcmZlcnM7XG4gICAgfVxuICAgIGdldCBkaWdlcnMoKSB7XG4gICAgICAgIGxldCBrZXlzID0gW107XG4gICAgICAgIGlmICgnbicgaW4gdGhpcy5fc2FkKSB7XG4gICAgICAgICAgICAvLyBlc3RhYmxpc2htZW50IGV2ZW50XG4gICAgICAgICAgICBrZXlzID0gdGhpcy5fc2FkWyduJ107XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAvLyBub24tZXN0YWJsaXNobWVudCBldmVudFxuICAgICAgICAgICAga2V5cyA9IFtdO1xuICAgICAgICB9XG4gICAgICAgIC8vIGNyZWF0ZSBhIG5ldyBWZXJmZXIgZm9yIGVhY2gga2V5XG4gICAgICAgIGNvbnN0IGRpZ2VycyA9IFtdO1xuICAgICAgICBmb3IgKGNvbnN0IGtleSBvZiBrZXlzKSB7XG4gICAgICAgICAgICBkaWdlcnMucHVzaChuZXcgRGlnZXIoeyBxYjY0OiBrZXkgfSkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkaWdlcnM7XG4gICAgfVxuICAgIHByZXR0eSgpIHtcbiAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHRoaXMuX3NhZCwgdW5kZWZpbmVkLCAyKTtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gZHVtcHMoc2FkLCBraW5kKSB7XG4gICAgaWYgKGtpbmQgPT0gU2VyaWFscy5KU09OKSB7XG4gICAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShzYWQpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCd1bnN1cHBvcnRlZCBldmVudCBlbmNvZGluZycpO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBzaXplaWZ5KGtlZCwga2luZCkge1xuICAgIGlmICghKCd2JyBpbiBrZWQpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTWlzc2luZyBvciBlbXB0eSB2ZXJzaW9uIHN0cmluZycpO1xuICAgIH1cbiAgICBjb25zdCBbcHJvdG8sIGtuZCwgdmVyc2lvbl0gPSBkZXZlcnNpZnkoa2VkWyd2J10pO1xuICAgIGlmICh2ZXJzaW9uICE9IFZyc25fMV8wKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgdW5zdXBwb3J0ZWQgdmVyc2lvbiAke3ZlcnNpb24udG9TdHJpbmcoKX1gKTtcbiAgICB9XG4gICAgaWYgKGtpbmQgPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGtpbmQgPSBrbmQ7XG4gICAgfVxuICAgIGxldCByYXcgPSBkdW1wcyhrZWQsIGtpbmQpO1xuICAgIGNvbnN0IHNpemUgPSBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUocmF3KS5sZW5ndGg7XG4gICAga2VkWyd2J10gPSB2ZXJzaWZ5KHByb3RvLCB2ZXJzaW9uLCBraW5kLCBzaXplKTtcbiAgICByYXcgPSBkdW1wcyhrZWQsIGtpbmQpO1xuICAgIHJldHVybiBbcmF3LCBwcm90bywga2luZCwga2VkLCB2ZXJzaW9uXTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/core/serder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/core/siger.js":
/*!*********************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/core/siger.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Siger: () => (/* binding */ Siger)\n/* harmony export */ });\n/* harmony import */ var _indexer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./indexer.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/indexer.js\");\n\n/**\n   Siger is subclass of Indexer, indexed signature material,\n    Adds .verfer property which is instance of Verfer that provides\n          associated signature verifier.\n\n    See Indexer for inherited attributes and properties:\n\n    Attributes:\n\n    Properties:\n        .verfer is Verfer object instance\n\n    Methods:\n **/\nclass Siger extends _indexer_js__WEBPACK_IMPORTED_MODULE_0__.Indexer {\n    constructor({ raw, code, index, ondex, qb64, qb64b, qb2 }, verfer) {\n        super({ raw, code, index, ondex, qb64, qb64b, qb2 });\n        if (!_indexer_js__WEBPACK_IMPORTED_MODULE_0__.IdxSigDex.has(this.code)) {\n            throw new Error(`Invalid code = ${this.code} for Siger.`);\n        }\n        this._verfer = verfer;\n    }\n    get verfer() {\n        return this._verfer;\n    }\n    set verfer(verfer) {\n        this._verfer = verfer;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2tlcmkvY29yZS9zaWdlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFrRDtBQUNsRDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDTyxvQkFBb0IsZ0RBQU87QUFDbEMsa0JBQWtCLDJDQUEyQztBQUM3RCxnQkFBZ0IsMkNBQTJDO0FBQzNELGFBQWEsa0RBQVM7QUFDdEIsOENBQThDLFdBQVc7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdGVsbGFyLXByb2N1cmVtZW50LWRhcHAvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2tlcmkvY29yZS9zaWdlci5qcz8xODMwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElkeFNpZ0RleCwgSW5kZXhlciB9IGZyb20gXCIuL2luZGV4ZXIuanNcIjtcbi8qKlxuICAgU2lnZXIgaXMgc3ViY2xhc3Mgb2YgSW5kZXhlciwgaW5kZXhlZCBzaWduYXR1cmUgbWF0ZXJpYWwsXG4gICAgQWRkcyAudmVyZmVyIHByb3BlcnR5IHdoaWNoIGlzIGluc3RhbmNlIG9mIFZlcmZlciB0aGF0IHByb3ZpZGVzXG4gICAgICAgICAgYXNzb2NpYXRlZCBzaWduYXR1cmUgdmVyaWZpZXIuXG5cbiAgICBTZWUgSW5kZXhlciBmb3IgaW5oZXJpdGVkIGF0dHJpYnV0ZXMgYW5kIHByb3BlcnRpZXM6XG5cbiAgICBBdHRyaWJ1dGVzOlxuXG4gICAgUHJvcGVydGllczpcbiAgICAgICAgLnZlcmZlciBpcyBWZXJmZXIgb2JqZWN0IGluc3RhbmNlXG5cbiAgICBNZXRob2RzOlxuICoqL1xuZXhwb3J0IGNsYXNzIFNpZ2VyIGV4dGVuZHMgSW5kZXhlciB7XG4gICAgY29uc3RydWN0b3IoeyByYXcsIGNvZGUsIGluZGV4LCBvbmRleCwgcWI2NCwgcWI2NGIsIHFiMiB9LCB2ZXJmZXIpIHtcbiAgICAgICAgc3VwZXIoeyByYXcsIGNvZGUsIGluZGV4LCBvbmRleCwgcWI2NCwgcWI2NGIsIHFiMiB9KTtcbiAgICAgICAgaWYgKCFJZHhTaWdEZXguaGFzKHRoaXMuY29kZSkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBjb2RlID0gJHt0aGlzLmNvZGV9IGZvciBTaWdlci5gKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl92ZXJmZXIgPSB2ZXJmZXI7XG4gICAgfVxuICAgIGdldCB2ZXJmZXIoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl92ZXJmZXI7XG4gICAgfVxuICAgIHNldCB2ZXJmZXIodmVyZmVyKSB7XG4gICAgICAgIHRoaXMuX3ZlcmZlciA9IHZlcmZlcjtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/core/siger.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/core/signer.js":
/*!**********************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/core/signer.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Signer: () => (/* binding */ Signer)\n/* harmony export */ });\n/* harmony import */ var _kering_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./kering.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/kering.js\");\n/* harmony import */ var libsodium_wrappers_sumo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! libsodium-wrappers-sumo */ \"(ssr)/./node_modules/libsodium-wrappers-sumo/dist/modules-sumo/libsodium-wrappers.js\");\n/* harmony import */ var _matter_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./matter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/matter.js\");\n/* harmony import */ var _verfer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./verfer.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/verfer.js\");\n/* harmony import */ var _cigar_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cigar.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/cigar.js\");\n/* harmony import */ var _siger_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./siger.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/siger.js\");\n/* harmony import */ var _indexer_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./indexer.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/indexer.js\");\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./core.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/core.js\");\n\n\n\n\n\n\n\n\n\nclass Signer extends _matter_js__WEBPACK_IMPORTED_MODULE_2__.Matter {\n    constructor({ raw, code = _matter_js__WEBPACK_IMPORTED_MODULE_2__.MtrDex.Ed25519_Seed, qb64, qb64b, qb2, transferable = true, }) {\n        try {\n            super({ raw, code, qb64, qb64b, qb2 });\n        }\n        catch (e) {\n            if (e instanceof _kering_js__WEBPACK_IMPORTED_MODULE_0__.EmptyMaterialError) {\n                if (code == _matter_js__WEBPACK_IMPORTED_MODULE_2__.MtrDex.Ed25519_Seed) {\n                    const raw = libsodium_wrappers_sumo__WEBPACK_IMPORTED_MODULE_1__.randombytes_buf(libsodium_wrappers_sumo__WEBPACK_IMPORTED_MODULE_1__.crypto_sign_SEEDBYTES);\n                    super({ raw, code, qb64, qb64b, qb2 });\n                }\n                else {\n                    throw new Error(`Unsupported signer code = ${code}.`);\n                }\n            }\n            else {\n                throw e;\n            }\n        }\n        let verfer;\n        if (this.code == _matter_js__WEBPACK_IMPORTED_MODULE_2__.MtrDex.Ed25519_Seed) {\n            this._sign = this._ed25519;\n            const keypair = libsodium_wrappers_sumo__WEBPACK_IMPORTED_MODULE_1__.crypto_sign_seed_keypair(this.raw);\n            verfer = new _verfer_js__WEBPACK_IMPORTED_MODULE_3__.Verfer({\n                raw: keypair.publicKey,\n                code: transferable ? _matter_js__WEBPACK_IMPORTED_MODULE_2__.MtrDex.Ed25519 : _matter_js__WEBPACK_IMPORTED_MODULE_2__.MtrDex.Ed25519N,\n            });\n        }\n        else {\n            throw new Error(`Unsupported signer code = ${this.code}.`);\n        }\n        this._verfer = verfer;\n    }\n    /**\n     * @description Property verfer:\n     Returns Verfer instance\n     Assumes ._verfer is correctly assigned\n     */\n    get verfer() {\n        return this._verfer;\n    }\n    sign(ser, index = null, only = false, ondex = undefined) {\n        return this._sign(ser, this.raw, this.verfer, index, only, ondex);\n    }\n    _ed25519(ser, seed, verfer, index, only = false, ondex) {\n        const sig = libsodium_wrappers_sumo__WEBPACK_IMPORTED_MODULE_1__.crypto_sign_detached(ser, (0,_core_js__WEBPACK_IMPORTED_MODULE_7__.concat)(seed, verfer.raw));\n        if (index == null) {\n            return new _cigar_js__WEBPACK_IMPORTED_MODULE_4__.Cigar({ raw: sig, code: _matter_js__WEBPACK_IMPORTED_MODULE_2__.MtrDex.Ed25519_Sig }, verfer);\n        }\n        else {\n            let code;\n            if (only) {\n                ondex = undefined;\n                if (index <= 63) {\n                    code = _indexer_js__WEBPACK_IMPORTED_MODULE_6__.IdrDex.Ed25519_Crt_Sig;\n                }\n                else {\n                    code = _indexer_js__WEBPACK_IMPORTED_MODULE_6__.IdrDex.Ed25519_Big_Crt_Sig;\n                }\n            }\n            else {\n                if (ondex == undefined) {\n                    ondex = index;\n                }\n                if (ondex == index && index <= 63)\n                    // both same and small\n                    code = _indexer_js__WEBPACK_IMPORTED_MODULE_6__.IdrDex.Ed25519_Sig; //  use  small both same\n                //  otherwise big or both not same so use big both\n                else\n                    code = _indexer_js__WEBPACK_IMPORTED_MODULE_6__.IdrDex.Ed25519_Big_Sig; // use use big both\n            }\n            return new _siger_js__WEBPACK_IMPORTED_MODULE_5__.Siger({ raw: sig, code: code, index: index, ondex: ondex }, verfer);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2tlcmkvY29yZS9zaWduZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQWlEO0FBQ0Q7QUFDWDtBQUNBO0FBQ0E7QUFDRjtBQUNBO0FBQ0c7QUFDSDtBQUM1QixxQkFBcUIsOENBQU07QUFDbEMsa0JBQWtCLFlBQVksOENBQU0sdURBQXVEO0FBQzNGO0FBQ0Esb0JBQW9CLDZCQUE2QjtBQUNqRDtBQUNBO0FBQ0EsNkJBQTZCLDBEQUFrQjtBQUMvQyw0QkFBNEIsOENBQU07QUFDbEMsZ0NBQWdDLG9FQUF5QixDQUFDLDBFQUErQjtBQUN6Riw0QkFBNEIsNkJBQTZCO0FBQ3pEO0FBQ0E7QUFDQSxpRUFBaUUsS0FBSztBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qiw4Q0FBTTtBQUMvQjtBQUNBLDRCQUE0Qiw2RUFBa0M7QUFDOUQseUJBQXlCLDhDQUFNO0FBQy9CO0FBQ0EscUNBQXFDLDhDQUFNLFdBQVcsOENBQU07QUFDNUQsYUFBYTtBQUNiO0FBQ0E7QUFDQSx5REFBeUQsVUFBVTtBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IseUVBQThCLE1BQU0sZ0RBQU07QUFDOUQ7QUFDQSx1QkFBdUIsNENBQUssR0FBRyxnQkFBZ0IsOENBQU0sY0FBYztBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsK0NBQU07QUFDakM7QUFDQTtBQUNBLDJCQUEyQiwrQ0FBTTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLCtDQUFNLGNBQWM7QUFDL0M7QUFDQTtBQUNBLDJCQUEyQiwrQ0FBTSxrQkFBa0I7QUFDbkQ7QUFDQSx1QkFBdUIsNENBQUssR0FBRyxrREFBa0Q7QUFDakY7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RlbGxhci1wcm9jdXJlbWVudC1kYXBwLy4vbm9kZV9tb2R1bGVzL3NpZ25pZnktdHMvZGlzdC9rZXJpL2NvcmUvc2lnbmVyLmpzPzU1ODAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRW1wdHlNYXRlcmlhbEVycm9yIH0gZnJvbSBcIi4va2VyaW5nLmpzXCI7XG5pbXBvcnQgbGlic29kaXVtIGZyb20gJ2xpYnNvZGl1bS13cmFwcGVycy1zdW1vJztcbmltcG9ydCB7IE1hdHRlciB9IGZyb20gXCIuL21hdHRlci5qc1wiO1xuaW1wb3J0IHsgTXRyRGV4IH0gZnJvbSBcIi4vbWF0dGVyLmpzXCI7XG5pbXBvcnQgeyBWZXJmZXIgfSBmcm9tIFwiLi92ZXJmZXIuanNcIjtcbmltcG9ydCB7IENpZ2FyIH0gZnJvbSBcIi4vY2lnYXIuanNcIjtcbmltcG9ydCB7IFNpZ2VyIH0gZnJvbSBcIi4vc2lnZXIuanNcIjtcbmltcG9ydCB7IElkckRleCB9IGZyb20gXCIuL2luZGV4ZXIuanNcIjtcbmltcG9ydCB7IGNvbmNhdCB9IGZyb20gXCIuL2NvcmUuanNcIjtcbmV4cG9ydCBjbGFzcyBTaWduZXIgZXh0ZW5kcyBNYXR0ZXIge1xuICAgIGNvbnN0cnVjdG9yKHsgcmF3LCBjb2RlID0gTXRyRGV4LkVkMjU1MTlfU2VlZCwgcWI2NCwgcWI2NGIsIHFiMiwgdHJhbnNmZXJhYmxlID0gdHJ1ZSwgfSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgc3VwZXIoeyByYXcsIGNvZGUsIHFiNjQsIHFiNjRiLCBxYjIgfSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGlmIChlIGluc3RhbmNlb2YgRW1wdHlNYXRlcmlhbEVycm9yKSB7XG4gICAgICAgICAgICAgICAgaWYgKGNvZGUgPT0gTXRyRGV4LkVkMjU1MTlfU2VlZCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCByYXcgPSBsaWJzb2RpdW0ucmFuZG9tYnl0ZXNfYnVmKGxpYnNvZGl1bS5jcnlwdG9fc2lnbl9TRUVEQllURVMpO1xuICAgICAgICAgICAgICAgICAgICBzdXBlcih7IHJhdywgY29kZSwgcWI2NCwgcWI2NGIsIHFiMiB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5zdXBwb3J0ZWQgc2lnbmVyIGNvZGUgPSAke2NvZGV9LmApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRocm93IGU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHZlcmZlcjtcbiAgICAgICAgaWYgKHRoaXMuY29kZSA9PSBNdHJEZXguRWQyNTUxOV9TZWVkKSB7XG4gICAgICAgICAgICB0aGlzLl9zaWduID0gdGhpcy5fZWQyNTUxOTtcbiAgICAgICAgICAgIGNvbnN0IGtleXBhaXIgPSBsaWJzb2RpdW0uY3J5cHRvX3NpZ25fc2VlZF9rZXlwYWlyKHRoaXMucmF3KTtcbiAgICAgICAgICAgIHZlcmZlciA9IG5ldyBWZXJmZXIoe1xuICAgICAgICAgICAgICAgIHJhdzoga2V5cGFpci5wdWJsaWNLZXksXG4gICAgICAgICAgICAgICAgY29kZTogdHJhbnNmZXJhYmxlID8gTXRyRGV4LkVkMjU1MTkgOiBNdHJEZXguRWQyNTUxOU4sXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5zdXBwb3J0ZWQgc2lnbmVyIGNvZGUgPSAke3RoaXMuY29kZX0uYCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fdmVyZmVyID0gdmVyZmVyO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAZGVzY3JpcHRpb24gUHJvcGVydHkgdmVyZmVyOlxuICAgICBSZXR1cm5zIFZlcmZlciBpbnN0YW5jZVxuICAgICBBc3N1bWVzIC5fdmVyZmVyIGlzIGNvcnJlY3RseSBhc3NpZ25lZFxuICAgICAqL1xuICAgIGdldCB2ZXJmZXIoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl92ZXJmZXI7XG4gICAgfVxuICAgIHNpZ24oc2VyLCBpbmRleCA9IG51bGwsIG9ubHkgPSBmYWxzZSwgb25kZXggPSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NpZ24oc2VyLCB0aGlzLnJhdywgdGhpcy52ZXJmZXIsIGluZGV4LCBvbmx5LCBvbmRleCk7XG4gICAgfVxuICAgIF9lZDI1NTE5KHNlciwgc2VlZCwgdmVyZmVyLCBpbmRleCwgb25seSA9IGZhbHNlLCBvbmRleCkge1xuICAgICAgICBjb25zdCBzaWcgPSBsaWJzb2RpdW0uY3J5cHRvX3NpZ25fZGV0YWNoZWQoc2VyLCBjb25jYXQoc2VlZCwgdmVyZmVyLnJhdykpO1xuICAgICAgICBpZiAoaW5kZXggPT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBDaWdhcih7IHJhdzogc2lnLCBjb2RlOiBNdHJEZXguRWQyNTUxOV9TaWcgfSwgdmVyZmVyKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGxldCBjb2RlO1xuICAgICAgICAgICAgaWYgKG9ubHkpIHtcbiAgICAgICAgICAgICAgICBvbmRleCA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICBpZiAoaW5kZXggPD0gNjMpIHtcbiAgICAgICAgICAgICAgICAgICAgY29kZSA9IElkckRleC5FZDI1NTE5X0NydF9TaWc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBjb2RlID0gSWRyRGV4LkVkMjU1MTlfQmlnX0NydF9TaWc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgaWYgKG9uZGV4ID09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICBvbmRleCA9IGluZGV4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAob25kZXggPT0gaW5kZXggJiYgaW5kZXggPD0gNjMpXG4gICAgICAgICAgICAgICAgICAgIC8vIGJvdGggc2FtZSBhbmQgc21hbGxcbiAgICAgICAgICAgICAgICAgICAgY29kZSA9IElkckRleC5FZDI1NTE5X1NpZzsgLy8gIHVzZSAgc21hbGwgYm90aCBzYW1lXG4gICAgICAgICAgICAgICAgLy8gIG90aGVyd2lzZSBiaWcgb3IgYm90aCBub3Qgc2FtZSBzbyB1c2UgYmlnIGJvdGhcbiAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgIGNvZGUgPSBJZHJEZXguRWQyNTUxOV9CaWdfU2lnOyAvLyB1c2UgdXNlIGJpZyBib3RoXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbmV3IFNpZ2VyKHsgcmF3OiBzaWcsIGNvZGU6IGNvZGUsIGluZGV4OiBpbmRleCwgb25kZXg6IG9uZGV4IH0sIHZlcmZlcik7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/core/signer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/core/tholder.js":
/*!***********************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/core/tholder.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Tholder: () => (/* binding */ Tholder)\n/* harmony export */ });\n/* harmony import */ var _matter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./matter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/matter.js\");\n/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./number.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/number.js\");\n/* harmony import */ var mathjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! mathjs */ \"(ssr)/./node_modules/mathjs/lib/esm/entry/pureFunctionsAny.generated.js\");\n\n\n\nclass Tholder {\n    // private _bexter: any\n    constructor(kargs) {\n        this._weighted = false;\n        this._thold = undefined;\n        this._size = 0;\n        this._number = undefined;\n        this._satisfy = undefined;\n        if (kargs.thold !== undefined) {\n            this._processThold(kargs.thold);\n        }\n        else if (kargs.limen != undefined) {\n            this._processLimen(kargs.limen);\n        }\n        else if (kargs.sith !== undefined) {\n            this._processSith(kargs.sith);\n        }\n        else {\n            throw new Error('Missing threshold expression');\n        }\n    }\n    get weighted() {\n        return this._weighted;\n    }\n    get thold() {\n        return this._thold;\n    }\n    get size() {\n        return this._size;\n    }\n    get limen() {\n        var _a;\n        return (_a = this._number) === null || _a === void 0 ? void 0 : _a.qb64b;\n    }\n    get sith() {\n        if (this.weighted) {\n            let sith = this.thold.map((clause) => {\n                return clause.map((c) => {\n                    if (0 < Number(c) && Number(c) < 1) {\n                        return (0,mathjs__WEBPACK_IMPORTED_MODULE_2__.format)(c, { fraction: 'ratio' });\n                    }\n                    else {\n                        return (0,mathjs__WEBPACK_IMPORTED_MODULE_2__.format)(c, { fraction: 'decimal' });\n                    }\n                });\n            });\n            if (sith.length == 1) {\n                sith = sith[0];\n            }\n            return sith;\n        }\n        else {\n            return this.thold.toString(16);\n        }\n    }\n    get json() {\n        return JSON.stringify(this.sith);\n    }\n    get num() {\n        return this._weighted ? undefined : this._thold;\n    }\n    _processThold(thold) {\n        if (typeof thold === 'number') {\n            this._processUnweighted(thold);\n        }\n        else {\n            this._processWeighted(thold);\n        }\n    }\n    _processLimen(limen) {\n        const matter = new _matter_js__WEBPACK_IMPORTED_MODULE_0__.Matter({ qb64: limen });\n        if (_matter_js__WEBPACK_IMPORTED_MODULE_0__.NumDex.has(matter.code)) {\n            const number = new _number_js__WEBPACK_IMPORTED_MODULE_1__.CesrNumber({\n                raw: matter.raw,\n                code: matter.code,\n            });\n            this._processUnweighted(number.num);\n        }\n        else if (_matter_js__WEBPACK_IMPORTED_MODULE_0__.BexDex.has(matter.code)) {\n            // TODO: Implement Bexter\n        }\n        else {\n            throw new Error('Invalid code for limen=' + matter.code);\n        }\n    }\n    _processSith(sith) {\n        if (typeof sith == 'number') {\n            this._processUnweighted(sith);\n        }\n        else if (typeof sith == 'string' && sith.indexOf('[') == -1) {\n            this._processUnweighted(parseInt(sith, 16));\n        }\n        else {\n            let _sith = sith;\n            if (typeof sith == 'string') {\n                _sith = JSON.parse(sith);\n            }\n            if (_sith.length == 0) {\n                throw new Error('Empty weight list');\n            }\n            const mask = _sith.map((x) => {\n                return typeof x !== 'string';\n            });\n            if (mask.length > 0 && !mask.every((x) => x)) {\n                _sith = [_sith];\n            }\n            for (const c of _sith) {\n                const mask = c.map((x) => {\n                    return typeof x === 'string';\n                });\n                if (mask.length > 0 && !mask.every((x) => x)) {\n                    throw new Error('Invalid sith, some weights in clause ' +\n                        mask +\n                        ' are non string');\n                }\n            }\n            const thold = this._processClauses(_sith);\n            this._processWeighted(thold);\n        }\n    }\n    _processClauses(sith) {\n        const thold = new Array();\n        sith.forEach((clause) => {\n            thold.push(clause.map((w) => {\n                return this.weight(w);\n            }));\n        });\n        return thold;\n    }\n    _processUnweighted(thold) {\n        if (thold < 0) {\n            throw new Error('Non-positive int threshold = {thold}.');\n        }\n        this._thold = thold;\n        this._weighted = false;\n        this._size = this._thold; // used to verify that keys list size is at least size\n        this._satisfy = this._satisfy_numeric;\n        this._number = new _number_js__WEBPACK_IMPORTED_MODULE_1__.CesrNumber({}, thold);\n        // this._bexter = undefined\n    }\n    _processWeighted(thold) {\n        for (const clause of thold) {\n            if (Number((0,mathjs__WEBPACK_IMPORTED_MODULE_2__.sum)(clause)) < 1) {\n                throw new Error('Invalid sith clause: ' +\n                    thold +\n                    'all clause weight sums must be >= 1');\n            }\n        }\n        this._thold = thold;\n        this._weighted = true;\n        this._size = thold.reduce((acc, currentValue) => {\n            return acc + currentValue.length;\n        }, 0);\n        this._satisfy = this._satisfy_weighted;\n        //TODO: created Bexter if needed\n    }\n    weight(w) {\n        return (0,mathjs__WEBPACK_IMPORTED_MODULE_2__.fraction)(w);\n    }\n    _satisfy_numeric(indices) {\n        return this.thold > 0 && indices.length >= this.thold; // at least one\n    }\n    _satisfy_weighted(indices) {\n        if (indices.length === 0) {\n            return false;\n        }\n        const indexes = new Set(indices.sort());\n        const sats = new Array(indices.length).fill(false);\n        for (const idx of indexes) {\n            sats[idx] = true;\n        }\n        let wio = 0;\n        for (const clause of this.thold) {\n            let cw = 0;\n            for (const w of clause) {\n                if (sats[wio]) {\n                    cw += Number(w);\n                }\n                wio += 1;\n            }\n            if (cw < 1) {\n                return false;\n            }\n        }\n        return true;\n    }\n    satisfy(indices) {\n        return this._satisfy(indices);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/core/tholder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/core/utils.js":
/*!*********************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/core/utils.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   arrayEquals: () => (/* binding */ arrayEquals),\n/* harmony export */   bytesToInt: () => (/* binding */ bytesToInt),\n/* harmony export */   extractValues: () => (/* binding */ extractValues),\n/* harmony export */   intToBytes: () => (/* binding */ intToBytes),\n/* harmony export */   nowUTC: () => (/* binding */ nowUTC),\n/* harmony export */   pad: () => (/* binding */ pad),\n/* harmony export */   range: () => (/* binding */ range),\n/* harmony export */   serializeACDCAttachment: () => (/* binding */ serializeACDCAttachment),\n/* harmony export */   serializeIssExnAttachment: () => (/* binding */ serializeIssExnAttachment)\n/* harmony export */ });\n/* harmony import */ var _counter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./counter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/counter.js\");\n/* harmony import */ var _seqner_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./seqner.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/seqner.js\");\n/* harmony import */ var _prefixer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./prefixer.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/prefixer.js\");\n/* harmony import */ var _saider_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./saider.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/saider.js\");\n\n\n\n\nfunction pad(n, width = 3, z = 0) {\n    return (String(z).repeat(width) + String(n)).slice(String(n).length);\n}\n/**\n * @description  Returns list of depth first recursively extracted values from elements of\n    key event dict ked whose flabels are in lables list\n\n * @param {*} ked  ked is key event dict\n * @param {*} labels    labels is list of element labels in ked from which to extract values\n */\nfunction extractValues(ked, labels) {\n    let values = [];\n    for (const label of labels) {\n        values = extractElementValues(ked[label], values);\n    }\n    return values;\n}\nfunction arrayEquals(ar1, ar2) {\n    return (ar1.length === ar2.length &&\n        ar1.every((val, index) => val === ar2[index]));\n}\n/**\n * @description   Recusive depth first search that recursively extracts value(s) from element\n    and appends to values list\n    Assumes that extracted values are str\n\n * @param {*} element\n * @param {*} values\n */\nfunction extractElementValues(element, values) {\n    let data = [];\n    try {\n        if (element instanceof Array && !(typeof element == 'string')) {\n            for (const k in element)\n                extractElementValues(element[k], values);\n        }\n        else if (typeof element == 'string') {\n            values.push(element);\n        }\n        data = values;\n    }\n    catch (error) {\n        throw new Error(error);\n    }\n    return data;\n}\n/**\n * @description Returns True if obj is non-string iterable, False otherwise\n\n * @param {*} obj\n */\n// function nonStringIterable(obj) {\n//     obj instanceof (String)\n//     return  instanceof(obj, (str, bytes)) && instanceof(obj, Iterable))\n// }\nfunction nowUTC() {\n    return new Date();\n}\nfunction range(start, stop, step) {\n    if (typeof stop == 'undefined') {\n        // one param defined\n        stop = start;\n        start = 0;\n    }\n    if (typeof step == 'undefined') {\n        step = 1;\n    }\n    if ((step > 0 && start >= stop) || (step < 0 && start <= stop)) {\n        return [];\n    }\n    const result = new Array();\n    for (let i = start; step > 0 ? i < stop : i > stop; i += step) {\n        result.push(i);\n    }\n    return result;\n}\nfunction intToBytes(value, length) {\n    const byteArray = new Uint8Array(length); // Assuming a 4-byte integer (32 bits)\n    for (let index = byteArray.length - 1; index >= 0; index--) {\n        const byte = value & 0xff;\n        byteArray[index] = byte;\n        value = (value - byte) / 256;\n    }\n    return byteArray;\n}\nfunction bytesToInt(ar) {\n    let value = 0;\n    for (let i = 0; i < ar.length; i++) {\n        value = value * 256 + ar[i];\n    }\n    return value;\n}\nfunction serializeACDCAttachment(anc) {\n    const prefixer = new _prefixer_js__WEBPACK_IMPORTED_MODULE_2__.Prefixer({ qb64: anc.pre });\n    const seqner = new _seqner_js__WEBPACK_IMPORTED_MODULE_1__.Seqner({ sn: anc.sn });\n    const saider = new _saider_js__WEBPACK_IMPORTED_MODULE_3__.Saider({ qb64: anc.sad['d'] });\n    const craw = new Uint8Array();\n    const ctr = new _counter_js__WEBPACK_IMPORTED_MODULE_0__.Counter({ code: _counter_js__WEBPACK_IMPORTED_MODULE_0__.CtrDex.SealSourceTriples, count: 1 }).qb64b;\n    const prefix = prefixer.qb64b;\n    const seq = seqner.qb64b;\n    const said = saider.qb64b;\n    const newCraw = new Uint8Array(craw.length + ctr.length + prefix.length + seq.length + said.length);\n    newCraw.set(craw);\n    newCraw.set(ctr, craw.length);\n    newCraw.set(prefix, craw.length + ctr.length);\n    newCraw.set(seq, craw.length + ctr.length + prefix.length);\n    newCraw.set(said, craw.length + ctr.length + prefix.length + seq.length);\n    return newCraw;\n}\nfunction serializeIssExnAttachment(anc) {\n    const seqner = new _seqner_js__WEBPACK_IMPORTED_MODULE_1__.Seqner({ sn: anc.sn });\n    const ancSaider = new _saider_js__WEBPACK_IMPORTED_MODULE_3__.Saider({ qb64: anc.sad['d'] });\n    const coupleArray = new Uint8Array(seqner.qb64b.length + ancSaider.qb64b.length);\n    coupleArray.set(seqner.qb64b);\n    coupleArray.set(ancSaider.qb64b, seqner.qb64b.length);\n    const counter = new _counter_js__WEBPACK_IMPORTED_MODULE_0__.Counter({\n        code: _counter_js__WEBPACK_IMPORTED_MODULE_0__.CtrDex.SealSourceCouples,\n        count: 1,\n    });\n    const counterQb64b = counter.qb64b;\n    const atc = new Uint8Array(counter.qb64b.length + coupleArray.length);\n    atc.set(counterQb64b);\n    atc.set(coupleArray, counterQb64b.length);\n    if (atc.length % 4 !== 0) {\n        throw new Error(`Invalid attachments size: ${atc.length}, non-integral quadlets detected.`);\n    }\n    const pcnt = new _counter_js__WEBPACK_IMPORTED_MODULE_0__.Counter({\n        code: _counter_js__WEBPACK_IMPORTED_MODULE_0__.CtrDex.AttachedMaterialQuadlets,\n        count: Math.floor(atc.length / 4),\n    });\n    const msg = new Uint8Array(pcnt.qb64b.length + atc.length);\n    msg.set(pcnt.qb64b);\n    msg.set(atc, pcnt.qb64b.length);\n    return msg;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/core/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/core/vdring.js":
/*!**********************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/core/vdring.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   vdr: () => (/* binding */ vdr)\n/* harmony export */ });\n/* harmony import */ var _app_coring_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../app/coring.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/app/coring.js\");\n/* harmony import */ var _app_habery_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../app/habery.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/app/habery.js\");\n/* harmony import */ var _core_core_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/core.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/core.js\");\n/* harmony import */ var _eventing_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./eventing.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/eventing.js\");\n/* harmony import */ var _matter_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./matter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/matter.js\");\n/* harmony import */ var _prefixer_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./prefixer.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/prefixer.js\");\n/* harmony import */ var _serder_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./serder.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/serder.js\");\n\n\n\n\n\n\n\nvar vdr;\n(function (vdr) {\n    function incept({ pre, toad, nonce = (0,_app_coring_js__WEBPACK_IMPORTED_MODULE_0__.randomNonce)(), baks = [], cnfg = [], version = _core_core_js__WEBPACK_IMPORTED_MODULE_2__.Vrsn_1_0, kind = _core_core_js__WEBPACK_IMPORTED_MODULE_2__.Serials.JSON, code = _matter_js__WEBPACK_IMPORTED_MODULE_4__.MtrDex.Blake3_256, }) {\n        const vs = (0,_core_core_js__WEBPACK_IMPORTED_MODULE_2__.versify)(_core_core_js__WEBPACK_IMPORTED_MODULE_2__.Protocols.KERI, version, kind, 0);\n        const isn = 0;\n        const ilk = _core_core_js__WEBPACK_IMPORTED_MODULE_2__.Ilks.vcp;\n        if (cnfg.includes(_app_habery_js__WEBPACK_IMPORTED_MODULE_1__.TraitDex.NoBackers) && baks.length > 0) {\n            throw new Error(`${baks.length} backers specified for NB vcp, 0 allowed`);\n        }\n        if (new Set(baks).size < baks.length) {\n            throw new Error(`Invalid baks ${baks} has duplicates`);\n        }\n        let _toad;\n        if (toad === undefined) {\n            if (baks.length === 0) {\n                _toad = 0;\n            }\n            else {\n                _toad = (0,_eventing_js__WEBPACK_IMPORTED_MODULE_3__.ample)(baks.length);\n            }\n        }\n        else {\n            _toad = +toad;\n        }\n        if (baks.length > 0) {\n            if (_toad < 1 || _toad > baks.length) {\n                throw new Error(`Invalid toad ${_toad} for baks in ${baks}`);\n            }\n        }\n        else {\n            if (_toad != 0) {\n                throw new Error(`Invalid toad ${_toad} for no baks`);\n            }\n        }\n        const sad = {\n            v: vs,\n            t: ilk,\n            d: '',\n            i: '',\n            ii: pre,\n            s: '' + isn,\n            c: cnfg,\n            bt: _toad.toString(16),\n            b: baks,\n            n: nonce,\n        };\n        const prefixer = new _prefixer_js__WEBPACK_IMPORTED_MODULE_5__.Prefixer({ code }, sad);\n        sad.i = prefixer.qb64;\n        sad.d = prefixer.qb64;\n        return new _serder_js__WEBPACK_IMPORTED_MODULE_6__.Serder(sad);\n    }\n    vdr.incept = incept;\n})(vdr || (vdr = {}));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2tlcmkvY29yZS92ZHJpbmcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBK0M7QUFDSDtBQUNtQztBQUN6QztBQUNEO0FBQ0k7QUFDSjtBQUNyQztBQUNBO0FBQ0Esc0JBQXNCLG1CQUFtQiwyREFBVyxvQ0FBb0MsbURBQVEsU0FBUyxrREFBTyxjQUFjLDhDQUFNLGNBQWM7QUFDbEosbUJBQW1CLHNEQUFPLENBQUMsb0RBQVM7QUFDcEM7QUFDQSxvQkFBb0IsK0NBQUk7QUFDeEIsMEJBQTBCLG9EQUFRO0FBQ2xDLCtCQUErQixhQUFhO0FBQzVDO0FBQ0E7QUFDQSw0Q0FBNEMsTUFBTTtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixtREFBSztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRCxPQUFPLGNBQWMsS0FBSztBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRCxPQUFPO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsa0RBQVEsR0FBRyxNQUFNO0FBQzlDO0FBQ0E7QUFDQSxtQkFBbUIsOENBQU07QUFDekI7QUFDQTtBQUNBLENBQUMsa0JBQWtCO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zdGVsbGFyLXByb2N1cmVtZW50LWRhcHAvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2tlcmkvY29yZS92ZHJpbmcuanM/NTE5NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByYW5kb21Ob25jZSB9IGZyb20gXCIuLi9hcHAvY29yaW5nLmpzXCI7XG5pbXBvcnQgeyBUcmFpdERleCB9IGZyb20gXCIuLi9hcHAvaGFiZXJ5LmpzXCI7XG5pbXBvcnQgeyBTZXJpYWxzLCBWcnNuXzFfMCwgUHJvdG9jb2xzLCB2ZXJzaWZ5LCBJbGtzLCB9IGZyb20gXCIuLi9jb3JlL2NvcmUuanNcIjtcbmltcG9ydCB7IGFtcGxlIH0gZnJvbSBcIi4vZXZlbnRpbmcuanNcIjtcbmltcG9ydCB7IE10ckRleCB9IGZyb20gXCIuL21hdHRlci5qc1wiO1xuaW1wb3J0IHsgUHJlZml4ZXIgfSBmcm9tIFwiLi9wcmVmaXhlci5qc1wiO1xuaW1wb3J0IHsgU2VyZGVyIH0gZnJvbSBcIi4vc2VyZGVyLmpzXCI7XG52YXIgdmRyO1xuKGZ1bmN0aW9uICh2ZHIpIHtcbiAgICBmdW5jdGlvbiBpbmNlcHQoeyBwcmUsIHRvYWQsIG5vbmNlID0gcmFuZG9tTm9uY2UoKSwgYmFrcyA9IFtdLCBjbmZnID0gW10sIHZlcnNpb24gPSBWcnNuXzFfMCwga2luZCA9IFNlcmlhbHMuSlNPTiwgY29kZSA9IE10ckRleC5CbGFrZTNfMjU2LCB9KSB7XG4gICAgICAgIGNvbnN0IHZzID0gdmVyc2lmeShQcm90b2NvbHMuS0VSSSwgdmVyc2lvbiwga2luZCwgMCk7XG4gICAgICAgIGNvbnN0IGlzbiA9IDA7XG4gICAgICAgIGNvbnN0IGlsayA9IElsa3MudmNwO1xuICAgICAgICBpZiAoY25mZy5pbmNsdWRlcyhUcmFpdERleC5Ob0JhY2tlcnMpICYmIGJha3MubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGAke2Jha3MubGVuZ3RofSBiYWNrZXJzIHNwZWNpZmllZCBmb3IgTkIgdmNwLCAwIGFsbG93ZWRgKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobmV3IFNldChiYWtzKS5zaXplIDwgYmFrcy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBiYWtzICR7YmFrc30gaGFzIGR1cGxpY2F0ZXNgKTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgX3RvYWQ7XG4gICAgICAgIGlmICh0b2FkID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGlmIChiYWtzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgIF90b2FkID0gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIF90b2FkID0gYW1wbGUoYmFrcy5sZW5ndGgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgX3RvYWQgPSArdG9hZDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYmFrcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBpZiAoX3RvYWQgPCAxIHx8IF90b2FkID4gYmFrcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgdG9hZCAke190b2FkfSBmb3IgYmFrcyBpbiAke2Jha3N9YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBpZiAoX3RvYWQgIT0gMCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCB0b2FkICR7X3RvYWR9IGZvciBubyBiYWtzYCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgc2FkID0ge1xuICAgICAgICAgICAgdjogdnMsXG4gICAgICAgICAgICB0OiBpbGssXG4gICAgICAgICAgICBkOiAnJyxcbiAgICAgICAgICAgIGk6ICcnLFxuICAgICAgICAgICAgaWk6IHByZSxcbiAgICAgICAgICAgIHM6ICcnICsgaXNuLFxuICAgICAgICAgICAgYzogY25mZyxcbiAgICAgICAgICAgIGJ0OiBfdG9hZC50b1N0cmluZygxNiksXG4gICAgICAgICAgICBiOiBiYWtzLFxuICAgICAgICAgICAgbjogbm9uY2UsXG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IHByZWZpeGVyID0gbmV3IFByZWZpeGVyKHsgY29kZSB9LCBzYWQpO1xuICAgICAgICBzYWQuaSA9IHByZWZpeGVyLnFiNjQ7XG4gICAgICAgIHNhZC5kID0gcHJlZml4ZXIucWI2NDtcbiAgICAgICAgcmV0dXJuIG5ldyBTZXJkZXIoc2FkKTtcbiAgICB9XG4gICAgdmRyLmluY2VwdCA9IGluY2VwdDtcbn0pKHZkciB8fCAodmRyID0ge30pKTtcbmV4cG9ydCB7IHZkciB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/core/vdring.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/core/verfer.js":
/*!**********************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/core/verfer.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Verfer: () => (/* binding */ Verfer)\n/* harmony export */ });\n/* harmony import */ var libsodium_wrappers_sumo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! libsodium-wrappers-sumo */ \"(ssr)/./node_modules/libsodium-wrappers-sumo/dist/modules-sumo/libsodium-wrappers.js\");\n/* harmony import */ var _matter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./matter.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/matter.js\");\n/* harmony import */ var _noble_curves_p256__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @noble/curves/p256 */ \"(ssr)/./node_modules/@noble/curves/esm/p256.js\");\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./core.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/core.js\");\n\n\n\n\nconst VERFER_CODES = new Set([\n    _matter_js__WEBPACK_IMPORTED_MODULE_1__.MtrDex.Ed25519N,\n    _matter_js__WEBPACK_IMPORTED_MODULE_1__.MtrDex.Ed25519,\n    _matter_js__WEBPACK_IMPORTED_MODULE_1__.MtrDex.ECDSA_256r1N,\n    _matter_js__WEBPACK_IMPORTED_MODULE_1__.MtrDex.ECDSA_256r1,\n]);\n/**\n * @description  Verfer :sublclass of Matter,helps to verify signature of serialization\n *  using .raw as verifier key and .code as signature cypher suite\n */\nclass Verfer extends _matter_js__WEBPACK_IMPORTED_MODULE_1__.Matter {\n    constructor({ raw, code, qb64, qb64b, qb2 }) {\n        super({ raw, code, qb64, qb64b, qb2 });\n        if (!VERFER_CODES.has(this.code)) {\n            throw new Error(`Unsupported code = ${this.code} for verifier.`);\n        }\n    }\n    verify(sig, ser) {\n        switch (this.code) {\n            case _matter_js__WEBPACK_IMPORTED_MODULE_1__.MtrDex.Ed25519:\n            case _matter_js__WEBPACK_IMPORTED_MODULE_1__.MtrDex.Ed25519N: {\n                return libsodium_wrappers_sumo__WEBPACK_IMPORTED_MODULE_0__.crypto_sign_verify_detached(sig, ser, this.raw);\n            }\n            case _matter_js__WEBPACK_IMPORTED_MODULE_1__.MtrDex.ECDSA_256r1:\n            case _matter_js__WEBPACK_IMPORTED_MODULE_1__.MtrDex.ECDSA_256r1N: {\n                const message = typeof ser === 'string' ? (0,_core_js__WEBPACK_IMPORTED_MODULE_2__.b)(ser) : ser;\n                return _noble_curves_p256__WEBPACK_IMPORTED_MODULE_3__.p256.verify(sig, message, this.raw);\n            }\n            default:\n                throw new Error(`Unsupported code = ${this.code} for verifier.`);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2tlcmkvY29yZS92ZXJmZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBZ0Q7QUFDSDtBQUNIO0FBQ1o7QUFDOUI7QUFDQSxJQUFJLDhDQUFNO0FBQ1YsSUFBSSw4Q0FBTTtBQUNWLElBQUksOENBQU07QUFDVixJQUFJLDhDQUFNO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHFCQUFxQiw4Q0FBTTtBQUNsQyxrQkFBa0IsNkJBQTZCO0FBQy9DLGdCQUFnQiw2QkFBNkI7QUFDN0M7QUFDQSxrREFBa0QsV0FBVztBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQiw4Q0FBTTtBQUN2QixpQkFBaUIsOENBQU07QUFDdkIsdUJBQXVCLGdGQUFxQztBQUM1RDtBQUNBLGlCQUFpQiw4Q0FBTTtBQUN2QixpQkFBaUIsOENBQU07QUFDdkIsMERBQTBELDJDQUFDO0FBQzNELHVCQUF1QixvREFBSTtBQUMzQjtBQUNBO0FBQ0Esc0RBQXNELFdBQVc7QUFDakU7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RlbGxhci1wcm9jdXJlbWVudC1kYXBwLy4vbm9kZV9tb2R1bGVzL3NpZ25pZnktdHMvZGlzdC9rZXJpL2NvcmUvdmVyZmVyLmpzP2JiYWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGxpYnNvZGl1bSBmcm9tICdsaWJzb2RpdW0td3JhcHBlcnMtc3Vtbyc7XG5pbXBvcnQgeyBNYXR0ZXIsIE10ckRleCB9IGZyb20gXCIuL21hdHRlci5qc1wiO1xuaW1wb3J0IHsgcDI1NiB9IGZyb20gJ0Bub2JsZS9jdXJ2ZXMvcDI1Nic7XG5pbXBvcnQgeyBiIH0gZnJvbSBcIi4vY29yZS5qc1wiO1xuY29uc3QgVkVSRkVSX0NPREVTID0gbmV3IFNldChbXG4gICAgTXRyRGV4LkVkMjU1MTlOLFxuICAgIE10ckRleC5FZDI1NTE5LFxuICAgIE10ckRleC5FQ0RTQV8yNTZyMU4sXG4gICAgTXRyRGV4LkVDRFNBXzI1NnIxLFxuXSk7XG4vKipcbiAqIEBkZXNjcmlwdGlvbiAgVmVyZmVyIDpzdWJsY2xhc3Mgb2YgTWF0dGVyLGhlbHBzIHRvIHZlcmlmeSBzaWduYXR1cmUgb2Ygc2VyaWFsaXphdGlvblxuICogIHVzaW5nIC5yYXcgYXMgdmVyaWZpZXIga2V5IGFuZCAuY29kZSBhcyBzaWduYXR1cmUgY3lwaGVyIHN1aXRlXG4gKi9cbmV4cG9ydCBjbGFzcyBWZXJmZXIgZXh0ZW5kcyBNYXR0ZXIge1xuICAgIGNvbnN0cnVjdG9yKHsgcmF3LCBjb2RlLCBxYjY0LCBxYjY0YiwgcWIyIH0pIHtcbiAgICAgICAgc3VwZXIoeyByYXcsIGNvZGUsIHFiNjQsIHFiNjRiLCBxYjIgfSk7XG4gICAgICAgIGlmICghVkVSRkVSX0NPREVTLmhhcyh0aGlzLmNvZGUpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuc3VwcG9ydGVkIGNvZGUgPSAke3RoaXMuY29kZX0gZm9yIHZlcmlmaWVyLmApO1xuICAgICAgICB9XG4gICAgfVxuICAgIHZlcmlmeShzaWcsIHNlcikge1xuICAgICAgICBzd2l0Y2ggKHRoaXMuY29kZSkge1xuICAgICAgICAgICAgY2FzZSBNdHJEZXguRWQyNTUxOTpcbiAgICAgICAgICAgIGNhc2UgTXRyRGV4LkVkMjU1MTlOOiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGxpYnNvZGl1bS5jcnlwdG9fc2lnbl92ZXJpZnlfZGV0YWNoZWQoc2lnLCBzZXIsIHRoaXMucmF3KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhc2UgTXRyRGV4LkVDRFNBXzI1NnIxOlxuICAgICAgICAgICAgY2FzZSBNdHJEZXguRUNEU0FfMjU2cjFOOiB7XG4gICAgICAgICAgICAgICAgY29uc3QgbWVzc2FnZSA9IHR5cGVvZiBzZXIgPT09ICdzdHJpbmcnID8gYihzZXIpIDogc2VyO1xuICAgICAgICAgICAgICAgIHJldHVybiBwMjU2LnZlcmlmeShzaWcsIG1lc3NhZ2UsIHRoaXMucmF3KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbnN1cHBvcnRlZCBjb2RlID0gJHt0aGlzLmNvZGV9IGZvciB2ZXJpZmllci5gKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/core/verfer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/keri/end/ending.js":
/*!*********************************************************!*\
  !*** ./node_modules/signify-ts/dist/keri/end/ending.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FALSY: () => (/* binding */ FALSY),\n/* harmony export */   Signage: () => (/* binding */ Signage),\n/* harmony export */   TRUTHY: () => (/* binding */ TRUTHY),\n/* harmony export */   designature: () => (/* binding */ designature),\n/* harmony export */   signature: () => (/* binding */ signature)\n/* harmony export */ });\n/* harmony import */ var _core_siger_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/siger.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/siger.js\");\n/* harmony import */ var _core_cigar_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/cigar.js */ \"(ssr)/./node_modules/signify-ts/dist/keri/core/cigar.js\");\n\n\nconst FALSY = [false, 0, '?0', 'no', 'false', 'False', 'off'];\nconst TRUTHY = [true, 1, '?1', 'yes', 'true', 'True', 'on'];\nclass Signage {\n    constructor(markers, indexed, signer, ordinal, digest, kind) {\n        this.markers = markers;\n        this.indexed = indexed;\n        this.signer = signer;\n        this.ordinal = ordinal;\n        this.digest = digest;\n        this.kind = kind;\n    }\n}\nfunction signature(signages) {\n    var _a;\n    const values = [];\n    for (const signage of signages) {\n        let markers;\n        let tags;\n        if (signage.markers instanceof Map) {\n            markers = Array.from(signage.markers.values());\n            tags = Array.from(signage.markers.keys());\n        }\n        else {\n            markers = signage.markers;\n            tags = [];\n        }\n        const items = new Array();\n        const indexed = (_a = signage.indexed) !== null && _a !== void 0 ? _a : markers[0] instanceof _core_siger_js__WEBPACK_IMPORTED_MODULE_0__.Siger;\n        if (indexed) {\n            items.push('indexed=\"?1\"');\n        }\n        else {\n            items.push('indexed=\"?0\"');\n        }\n        if (signage.signer != undefined) {\n            items.push(`signer=\"${signage.signer}\"`);\n        }\n        if (signage.ordinal != undefined) {\n            items.push(`ordinal=\"${signage.ordinal}\"`);\n        }\n        if (signage.digest != undefined) {\n            items.push(`digest=\"${signage.digest}\"`);\n        }\n        if (signage.kind != undefined) {\n            items.push(`kind=\"${signage.kind}\"`);\n        }\n        items.push(...markers.map((marker, idx) => {\n            let tag = undefined;\n            let val;\n            if (tags != undefined && tags.length > idx) {\n                tag = tags[idx];\n            }\n            if (marker instanceof _core_siger_js__WEBPACK_IMPORTED_MODULE_0__.Siger) {\n                if (!indexed) {\n                    throw new Error(`Indexed signature marker ${marker} when indexed False.`);\n                }\n                tag = tag !== null && tag !== void 0 ? tag : marker.index.toString();\n                val = marker.qb64;\n            }\n            else if (marker instanceof _core_cigar_js__WEBPACK_IMPORTED_MODULE_1__.Cigar) {\n                if (indexed) {\n                    throw new Error(`Unindexed signature marker ${marker} when indexed True.`);\n                }\n                if (!marker.verfer) {\n                    throw new Error(`Indexed signature marker is missing verfer`);\n                }\n                tag = tag !== null && tag !== void 0 ? tag : marker.verfer.qb64;\n                val = marker.qb64;\n            }\n            else {\n                tag = tag !== null && tag !== void 0 ? tag : idx.toString();\n                val = marker;\n            }\n            return `${tag}=\"${val}\"`;\n        }));\n        values.push(items.join(';'));\n    }\n    return new Headers([['Signature', values.join(',')]]);\n}\nfunction designature(value) {\n    const values = value.replace(' ', '').split(',');\n    const signages = values.map((val) => {\n        const dict = new Map();\n        val.split(';').forEach((v) => {\n            const splits = v.split('=', 2);\n            dict.set(splits[0], splits[1].replaceAll('\"', ''));\n        });\n        if (!dict.has('indexed')) {\n            throw new Error('Missing indexed field in Signature header signage.');\n        }\n        const item = dict.get('indexed');\n        const indexed = !FALSY.includes(item);\n        dict.delete('indexed');\n        let signer;\n        if (dict.has('signer')) {\n            signer = dict.get('signer');\n            dict.delete('signer');\n        }\n        let ordinal;\n        if (dict.has('ordinal')) {\n            ordinal = dict.get('ordinal');\n            dict.delete('ordinal');\n        }\n        let digest;\n        if (dict.has('digest')) {\n            digest = dict.get('digest');\n            dict.delete('digest');\n        }\n        let kind;\n        if (dict.has('kind')) {\n            kind = dict.get('kind');\n            dict.delete('kind');\n        }\n        else {\n            kind = 'CESR';\n        }\n        if (kind == 'CESR') {\n            const markers = new Map();\n            for (const [key, val] of dict.entries()) {\n                if (indexed) {\n                    markers.set(key, new _core_siger_js__WEBPACK_IMPORTED_MODULE_0__.Siger({ qb64: val }));\n                }\n                else {\n                    markers.set(key, new _core_cigar_js__WEBPACK_IMPORTED_MODULE_1__.Cigar({ qb64: val }));\n                }\n            }\n            return new Signage(markers, indexed, signer, ordinal, digest, kind);\n        }\n        else {\n            return new Signage(dict, indexed, signer, ordinal, digest, kind);\n        }\n    });\n    return signages;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L2tlcmkvZW5kL2VuZGluZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQXlDO0FBQ0E7QUFDbEM7QUFDQTtBQUNBO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0dBQXNHLGlEQUFLO0FBQzNHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLGVBQWU7QUFDakQ7QUFDQTtBQUNBLG1DQUFtQyxnQkFBZ0I7QUFDbkQ7QUFDQTtBQUNBLGtDQUFrQyxlQUFlO0FBQ2pEO0FBQ0E7QUFDQSxnQ0FBZ0MsYUFBYTtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxpREFBSztBQUN2QztBQUNBLGdFQUFnRSxRQUFRO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLGlEQUFLO0FBQzVDO0FBQ0Esa0VBQWtFLFFBQVE7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixJQUFJLElBQUksSUFBSTtBQUNsQyxTQUFTO0FBQ1QsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLGlEQUFLLEdBQUcsV0FBVztBQUM1RDtBQUNBO0FBQ0EseUNBQXlDLGlEQUFLLEdBQUcsV0FBVztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3RlbGxhci1wcm9jdXJlbWVudC1kYXBwLy4vbm9kZV9tb2R1bGVzL3NpZ25pZnktdHMvZGlzdC9rZXJpL2VuZC9lbmRpbmcuanM/ZDVhYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTaWdlciB9IGZyb20gXCIuLi9jb3JlL3NpZ2VyLmpzXCI7XG5pbXBvcnQgeyBDaWdhciB9IGZyb20gXCIuLi9jb3JlL2NpZ2FyLmpzXCI7XG5leHBvcnQgY29uc3QgRkFMU1kgPSBbZmFsc2UsIDAsICc/MCcsICdubycsICdmYWxzZScsICdGYWxzZScsICdvZmYnXTtcbmV4cG9ydCBjb25zdCBUUlVUSFkgPSBbdHJ1ZSwgMSwgJz8xJywgJ3llcycsICd0cnVlJywgJ1RydWUnLCAnb24nXTtcbmV4cG9ydCBjbGFzcyBTaWduYWdlIHtcbiAgICBjb25zdHJ1Y3RvcihtYXJrZXJzLCBpbmRleGVkLCBzaWduZXIsIG9yZGluYWwsIGRpZ2VzdCwga2luZCkge1xuICAgICAgICB0aGlzLm1hcmtlcnMgPSBtYXJrZXJzO1xuICAgICAgICB0aGlzLmluZGV4ZWQgPSBpbmRleGVkO1xuICAgICAgICB0aGlzLnNpZ25lciA9IHNpZ25lcjtcbiAgICAgICAgdGhpcy5vcmRpbmFsID0gb3JkaW5hbDtcbiAgICAgICAgdGhpcy5kaWdlc3QgPSBkaWdlc3Q7XG4gICAgICAgIHRoaXMua2luZCA9IGtpbmQ7XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIHNpZ25hdHVyZShzaWduYWdlcykge1xuICAgIHZhciBfYTtcbiAgICBjb25zdCB2YWx1ZXMgPSBbXTtcbiAgICBmb3IgKGNvbnN0IHNpZ25hZ2Ugb2Ygc2lnbmFnZXMpIHtcbiAgICAgICAgbGV0IG1hcmtlcnM7XG4gICAgICAgIGxldCB0YWdzO1xuICAgICAgICBpZiAoc2lnbmFnZS5tYXJrZXJzIGluc3RhbmNlb2YgTWFwKSB7XG4gICAgICAgICAgICBtYXJrZXJzID0gQXJyYXkuZnJvbShzaWduYWdlLm1hcmtlcnMudmFsdWVzKCkpO1xuICAgICAgICAgICAgdGFncyA9IEFycmF5LmZyb20oc2lnbmFnZS5tYXJrZXJzLmtleXMoKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBtYXJrZXJzID0gc2lnbmFnZS5tYXJrZXJzO1xuICAgICAgICAgICAgdGFncyA9IFtdO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGl0ZW1zID0gbmV3IEFycmF5KCk7XG4gICAgICAgIGNvbnN0IGluZGV4ZWQgPSAoX2EgPSBzaWduYWdlLmluZGV4ZWQpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IG1hcmtlcnNbMF0gaW5zdGFuY2VvZiBTaWdlcjtcbiAgICAgICAgaWYgKGluZGV4ZWQpIHtcbiAgICAgICAgICAgIGl0ZW1zLnB1c2goJ2luZGV4ZWQ9XCI/MVwiJyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBpdGVtcy5wdXNoKCdpbmRleGVkPVwiPzBcIicpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzaWduYWdlLnNpZ25lciAhPSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGl0ZW1zLnB1c2goYHNpZ25lcj1cIiR7c2lnbmFnZS5zaWduZXJ9XCJgKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc2lnbmFnZS5vcmRpbmFsICE9IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgaXRlbXMucHVzaChgb3JkaW5hbD1cIiR7c2lnbmFnZS5vcmRpbmFsfVwiYCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNpZ25hZ2UuZGlnZXN0ICE9IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgaXRlbXMucHVzaChgZGlnZXN0PVwiJHtzaWduYWdlLmRpZ2VzdH1cImApO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzaWduYWdlLmtpbmQgIT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBpdGVtcy5wdXNoKGBraW5kPVwiJHtzaWduYWdlLmtpbmR9XCJgKTtcbiAgICAgICAgfVxuICAgICAgICBpdGVtcy5wdXNoKC4uLm1hcmtlcnMubWFwKChtYXJrZXIsIGlkeCkgPT4ge1xuICAgICAgICAgICAgbGV0IHRhZyA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIGxldCB2YWw7XG4gICAgICAgICAgICBpZiAodGFncyAhPSB1bmRlZmluZWQgJiYgdGFncy5sZW5ndGggPiBpZHgpIHtcbiAgICAgICAgICAgICAgICB0YWcgPSB0YWdzW2lkeF07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobWFya2VyIGluc3RhbmNlb2YgU2lnZXIpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWluZGV4ZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbmRleGVkIHNpZ25hdHVyZSBtYXJrZXIgJHttYXJrZXJ9IHdoZW4gaW5kZXhlZCBGYWxzZS5gKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGFnID0gdGFnICE9PSBudWxsICYmIHRhZyAhPT0gdm9pZCAwID8gdGFnIDogbWFya2VyLmluZGV4LnRvU3RyaW5nKCk7XG4gICAgICAgICAgICAgICAgdmFsID0gbWFya2VyLnFiNjQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChtYXJrZXIgaW5zdGFuY2VvZiBDaWdhcikge1xuICAgICAgICAgICAgICAgIGlmIChpbmRleGVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5pbmRleGVkIHNpZ25hdHVyZSBtYXJrZXIgJHttYXJrZXJ9IHdoZW4gaW5kZXhlZCBUcnVlLmApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoIW1hcmtlci52ZXJmZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbmRleGVkIHNpZ25hdHVyZSBtYXJrZXIgaXMgbWlzc2luZyB2ZXJmZXJgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGFnID0gdGFnICE9PSBudWxsICYmIHRhZyAhPT0gdm9pZCAwID8gdGFnIDogbWFya2VyLnZlcmZlci5xYjY0O1xuICAgICAgICAgICAgICAgIHZhbCA9IG1hcmtlci5xYjY0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGFnID0gdGFnICE9PSBudWxsICYmIHRhZyAhPT0gdm9pZCAwID8gdGFnIDogaWR4LnRvU3RyaW5nKCk7XG4gICAgICAgICAgICAgICAgdmFsID0gbWFya2VyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGAke3RhZ309XCIke3ZhbH1cImA7XG4gICAgICAgIH0pKTtcbiAgICAgICAgdmFsdWVzLnB1c2goaXRlbXMuam9pbignOycpKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBIZWFkZXJzKFtbJ1NpZ25hdHVyZScsIHZhbHVlcy5qb2luKCcsJyldXSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZGVzaWduYXR1cmUodmFsdWUpIHtcbiAgICBjb25zdCB2YWx1ZXMgPSB2YWx1ZS5yZXBsYWNlKCcgJywgJycpLnNwbGl0KCcsJyk7XG4gICAgY29uc3Qgc2lnbmFnZXMgPSB2YWx1ZXMubWFwKCh2YWwpID0+IHtcbiAgICAgICAgY29uc3QgZGljdCA9IG5ldyBNYXAoKTtcbiAgICAgICAgdmFsLnNwbGl0KCc7JykuZm9yRWFjaCgodikgPT4ge1xuICAgICAgICAgICAgY29uc3Qgc3BsaXRzID0gdi5zcGxpdCgnPScsIDIpO1xuICAgICAgICAgICAgZGljdC5zZXQoc3BsaXRzWzBdLCBzcGxpdHNbMV0ucmVwbGFjZUFsbCgnXCInLCAnJykpO1xuICAgICAgICB9KTtcbiAgICAgICAgaWYgKCFkaWN0LmhhcygnaW5kZXhlZCcpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ01pc3NpbmcgaW5kZXhlZCBmaWVsZCBpbiBTaWduYXR1cmUgaGVhZGVyIHNpZ25hZ2UuJyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgaXRlbSA9IGRpY3QuZ2V0KCdpbmRleGVkJyk7XG4gICAgICAgIGNvbnN0IGluZGV4ZWQgPSAhRkFMU1kuaW5jbHVkZXMoaXRlbSk7XG4gICAgICAgIGRpY3QuZGVsZXRlKCdpbmRleGVkJyk7XG4gICAgICAgIGxldCBzaWduZXI7XG4gICAgICAgIGlmIChkaWN0Lmhhcygnc2lnbmVyJykpIHtcbiAgICAgICAgICAgIHNpZ25lciA9IGRpY3QuZ2V0KCdzaWduZXInKTtcbiAgICAgICAgICAgIGRpY3QuZGVsZXRlKCdzaWduZXInKTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgb3JkaW5hbDtcbiAgICAgICAgaWYgKGRpY3QuaGFzKCdvcmRpbmFsJykpIHtcbiAgICAgICAgICAgIG9yZGluYWwgPSBkaWN0LmdldCgnb3JkaW5hbCcpO1xuICAgICAgICAgICAgZGljdC5kZWxldGUoJ29yZGluYWwnKTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgZGlnZXN0O1xuICAgICAgICBpZiAoZGljdC5oYXMoJ2RpZ2VzdCcpKSB7XG4gICAgICAgICAgICBkaWdlc3QgPSBkaWN0LmdldCgnZGlnZXN0Jyk7XG4gICAgICAgICAgICBkaWN0LmRlbGV0ZSgnZGlnZXN0Jyk7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGtpbmQ7XG4gICAgICAgIGlmIChkaWN0Lmhhcygna2luZCcpKSB7XG4gICAgICAgICAgICBraW5kID0gZGljdC5nZXQoJ2tpbmQnKTtcbiAgICAgICAgICAgIGRpY3QuZGVsZXRlKCdraW5kJyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBraW5kID0gJ0NFU1InO1xuICAgICAgICB9XG4gICAgICAgIGlmIChraW5kID09ICdDRVNSJykge1xuICAgICAgICAgICAgY29uc3QgbWFya2VycyA9IG5ldyBNYXAoKTtcbiAgICAgICAgICAgIGZvciAoY29uc3QgW2tleSwgdmFsXSBvZiBkaWN0LmVudHJpZXMoKSkge1xuICAgICAgICAgICAgICAgIGlmIChpbmRleGVkKSB7XG4gICAgICAgICAgICAgICAgICAgIG1hcmtlcnMuc2V0KGtleSwgbmV3IFNpZ2VyKHsgcWI2NDogdmFsIH0pKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIG1hcmtlcnMuc2V0KGtleSwgbmV3IENpZ2FyKHsgcWI2NDogdmFsIH0pKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbmV3IFNpZ25hZ2UobWFya2VycywgaW5kZXhlZCwgc2lnbmVyLCBvcmRpbmFsLCBkaWdlc3QsIGtpbmQpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBTaWduYWdlKGRpY3QsIGluZGV4ZWQsIHNpZ25lciwgb3JkaW5hbCwgZGlnZXN0LCBraW5kKTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBzaWduYWdlcztcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/keri/end/ending.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/signify-ts/dist/ready.js":
/*!***********************************************!*\
  !*** ./node_modules/signify-ts/dist/ready.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ready: () => (/* binding */ ready)\n/* harmony export */ });\n/* harmony import */ var libsodium_wrappers_sumo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! libsodium-wrappers-sumo */ \"(ssr)/./node_modules/libsodium-wrappers-sumo/dist/modules-sumo/libsodium-wrappers.js\");\n\nconst ready = async () => {\n    await libsodium_wrappers_sumo__WEBPACK_IMPORTED_MODULE_0__.ready;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc2lnbmlmeS10cy9kaXN0L3JlYWR5LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQThDO0FBQ3ZDO0FBQ1AsVUFBVSwwREFBYTtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL3N0ZWxsYXItcHJvY3VyZW1lbnQtZGFwcC8uL25vZGVfbW9kdWxlcy9zaWduaWZ5LXRzL2Rpc3QvcmVhZHkuanM/ZDVlMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgX3NvZGl1bSBmcm9tICdsaWJzb2RpdW0td3JhcHBlcnMtc3Vtbyc7XG5leHBvcnQgY29uc3QgcmVhZHkgPSBhc3luYyAoKSA9PiB7XG4gICAgYXdhaXQgX3NvZGl1bS5yZWFkeTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/signify-ts/dist/ready.js\n");

/***/ })

};
;